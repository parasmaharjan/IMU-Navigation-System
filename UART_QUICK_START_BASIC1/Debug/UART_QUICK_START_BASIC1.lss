
UART_QUICK_START_BASIC1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006ba8  10008000  10008000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000064  1000eba8  1000eba8  0000eba8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000270  1000ec0c  1000ec0c  0000ec0c  2**2
                  ALLOC
  3 .stack        00000804  1000ee7c  1000ee7c  0000ec0c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0000ec0c  2**0
                  CONTENTS, READONLY
  5 .comment      0000005b  00000000  00000000  0000ec34  2**0
                  CONTENTS, READONLY
  6 .debug_info   00017052  00000000  00000000  0000ec8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001eab  00000000  00000000  00025ce1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00003965  00000000  00000000  00027b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000518  00000000  00000000  0002b4f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000470  00000000  00000000  0002ba09  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000186c8  00000000  00000000  0002be79  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00007620  00000000  00000000  00044541  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000f0376  00000000  00000000  0004bb61  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001aec  00000000  00000000  0013bed8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

10008000 <app_entry>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void app_entry(void)
{
10008000:	b510      	push	{r4, lr}

    /* Initialize the relocate segment */
    pSrc = &_etext;
    pDest = &_srelocate;

    if (pSrc != pDest) {
10008002:	4b18      	ldr	r3, [pc, #96]	; (10008064 <app_entry+0x64>)
10008004:	4a18      	ldr	r2, [pc, #96]	; (10008068 <app_entry+0x68>)
10008006:	429a      	cmp	r2, r3
10008008:	d003      	beq.n	10008012 <app_entry+0x12>
        for (; pDest < &_erelocate;) {
1000800a:	4b18      	ldr	r3, [pc, #96]	; (1000806c <app_entry+0x6c>)
1000800c:	4a15      	ldr	r2, [pc, #84]	; (10008064 <app_entry+0x64>)
1000800e:	429a      	cmp	r2, r3
10008010:	d304      	bcc.n	1000801c <app_entry+0x1c>
            *pDest++ = *pSrc++;
        }
    }

    /* Clear the zero segment */
    for (pDest = &_szero; pDest < &_ezero;) {
10008012:	4b17      	ldr	r3, [pc, #92]	; (10008070 <app_entry+0x70>)
10008014:	4a17      	ldr	r2, [pc, #92]	; (10008074 <app_entry+0x74>)
10008016:	429a      	cmp	r2, r3
10008018:	d310      	bcc.n	1000803c <app_entry+0x3c>
1000801a:	e01e      	b.n	1000805a <app_entry+0x5a>
1000801c:	4b16      	ldr	r3, [pc, #88]	; (10008078 <app_entry+0x78>)
1000801e:	4a13      	ldr	r2, [pc, #76]	; (1000806c <app_entry+0x6c>)
10008020:	3203      	adds	r2, #3
10008022:	1ad2      	subs	r2, r2, r3
10008024:	0892      	lsrs	r2, r2, #2
10008026:	3201      	adds	r2, #1
10008028:	0092      	lsls	r2, r2, #2
    /* Initialize the relocate segment */
    pSrc = &_etext;
    pDest = &_srelocate;

    if (pSrc != pDest) {
        for (; pDest < &_erelocate;) {
1000802a:	2300      	movs	r3, #0
            *pDest++ = *pSrc++;
1000802c:	480d      	ldr	r0, [pc, #52]	; (10008064 <app_entry+0x64>)
1000802e:	490e      	ldr	r1, [pc, #56]	; (10008068 <app_entry+0x68>)
10008030:	58cc      	ldr	r4, [r1, r3]
10008032:	50c4      	str	r4, [r0, r3]
10008034:	3304      	adds	r3, #4
    /* Initialize the relocate segment */
    pSrc = &_etext;
    pDest = &_srelocate;

    if (pSrc != pDest) {
        for (; pDest < &_erelocate;) {
10008036:	4293      	cmp	r3, r2
10008038:	d1fa      	bne.n	10008030 <app_entry+0x30>
1000803a:	e7ea      	b.n	10008012 <app_entry+0x12>
1000803c:	4b0f      	ldr	r3, [pc, #60]	; (1000807c <app_entry+0x7c>)
1000803e:	490c      	ldr	r1, [pc, #48]	; (10008070 <app_entry+0x70>)
10008040:	3103      	adds	r1, #3
10008042:	1ac9      	subs	r1, r1, r3
10008044:	0889      	lsrs	r1, r1, #2
10008046:	3101      	adds	r1, #1
10008048:	0089      	lsls	r1, r1, #2
            *pDest++ = *pSrc++;
        }
    }

    /* Clear the zero segment */
    for (pDest = &_szero; pDest < &_ezero;) {
1000804a:	2300      	movs	r3, #0
        *pDest++ = 0;
1000804c:	4c09      	ldr	r4, [pc, #36]	; (10008074 <app_entry+0x74>)
1000804e:	2000      	movs	r0, #0
10008050:	191a      	adds	r2, r3, r4
10008052:	6010      	str	r0, [r2, #0]
10008054:	3304      	adds	r3, #4
            *pDest++ = *pSrc++;
        }
    }

    /* Clear the zero segment */
    for (pDest = &_szero; pDest < &_ezero;) {
10008056:	428b      	cmp	r3, r1
10008058:	d1fa      	bne.n	10008050 <app_entry+0x50>
        *pDest++ = 0;
    }

    /* Initialize the C library */
    __libc_init_array();
1000805a:	4b09      	ldr	r3, [pc, #36]	; (10008080 <app_entry+0x80>)
1000805c:	4798      	blx	r3

    /* Branch to main function */
    main();
1000805e:	4b09      	ldr	r3, [pc, #36]	; (10008084 <app_entry+0x84>)
10008060:	4798      	blx	r3

    /* return to BLE OS*/
    return;
}
10008062:	bd10      	pop	{r4, pc}
10008064:	1000eba8 	.word	0x1000eba8
10008068:	1000eba8 	.word	0x1000eba8
1000806c:	1000ec0c 	.word	0x1000ec0c
10008070:	1000ee7c 	.word	0x1000ee7c
10008074:	1000ec0c 	.word	0x1000ec0c
10008078:	1000ebac 	.word	0x1000ebac
1000807c:	1000ec10 	.word	0x1000ec10
10008080:	1000be69 	.word	0x1000be69
10008084:	10009a4d 	.word	0x10009a4d

10008088 <__do_global_dtors_aux>:
10008088:	b510      	push	{r4, lr}
1000808a:	4c06      	ldr	r4, [pc, #24]	; (100080a4 <__do_global_dtors_aux+0x1c>)
1000808c:	7823      	ldrb	r3, [r4, #0]
1000808e:	2b00      	cmp	r3, #0
10008090:	d107      	bne.n	100080a2 <__do_global_dtors_aux+0x1a>
10008092:	4b05      	ldr	r3, [pc, #20]	; (100080a8 <__do_global_dtors_aux+0x20>)
10008094:	2b00      	cmp	r3, #0
10008096:	d002      	beq.n	1000809e <__do_global_dtors_aux+0x16>
10008098:	4804      	ldr	r0, [pc, #16]	; (100080ac <__do_global_dtors_aux+0x24>)
1000809a:	e000      	b.n	1000809e <__do_global_dtors_aux+0x16>
1000809c:	bf00      	nop
1000809e:	2301      	movs	r3, #1
100080a0:	7023      	strb	r3, [r4, #0]
100080a2:	bd10      	pop	{r4, pc}
100080a4:	1000ec0c 	.word	0x1000ec0c
100080a8:	00000000 	.word	0x00000000
100080ac:	1000eba8 	.word	0x1000eba8

100080b0 <frame_dummy>:
100080b0:	b508      	push	{r3, lr}
100080b2:	4b08      	ldr	r3, [pc, #32]	; (100080d4 <frame_dummy+0x24>)
100080b4:	2b00      	cmp	r3, #0
100080b6:	d003      	beq.n	100080c0 <frame_dummy+0x10>
100080b8:	4807      	ldr	r0, [pc, #28]	; (100080d8 <frame_dummy+0x28>)
100080ba:	4908      	ldr	r1, [pc, #32]	; (100080dc <frame_dummy+0x2c>)
100080bc:	e000      	b.n	100080c0 <frame_dummy+0x10>
100080be:	bf00      	nop
100080c0:	4807      	ldr	r0, [pc, #28]	; (100080e0 <frame_dummy+0x30>)
100080c2:	6803      	ldr	r3, [r0, #0]
100080c4:	2b00      	cmp	r3, #0
100080c6:	d100      	bne.n	100080ca <frame_dummy+0x1a>
100080c8:	bd08      	pop	{r3, pc}
100080ca:	4b06      	ldr	r3, [pc, #24]	; (100080e4 <frame_dummy+0x34>)
100080cc:	2b00      	cmp	r3, #0
100080ce:	d0fb      	beq.n	100080c8 <frame_dummy+0x18>
100080d0:	4798      	blx	r3
100080d2:	e7f9      	b.n	100080c8 <frame_dummy+0x18>
100080d4:	00000000 	.word	0x00000000
100080d8:	1000eba8 	.word	0x1000eba8
100080dc:	1000ec10 	.word	0x1000ec10
100080e0:	1000eba8 	.word	0x1000eba8
100080e4:	00000000 	.word	0x00000000

100080e8 <i2c_init_sentral>:
	}
	return;
}

void i2c_init_sentral(void)
{
100080e8:	b5f0      	push	{r4, r5, r6, r7, lr}
100080ea:	b087      	sub	sp, #28
	uint32_t time_overflow = 0;
	/* Initialize config structure and software module */
	struct i2c_master_config config_i2c_master;
	i2c_master_get_config_defaults(&config_i2c_master);
100080ec:	ac01      	add	r4, sp, #4
100080ee:	1c20      	adds	r0, r4, #0
100080f0:	4b12      	ldr	r3, [pc, #72]	; (1000813c <i2c_init_sentral+0x54>)
100080f2:	4798      	blx	r3
	
	config_i2c_master.pin_number_pad0 = SENTRAL_PIN_PAD0;
100080f4:	230e      	movs	r3, #14
100080f6:	6063      	str	r3, [r4, #4]
	config_i2c_master.pin_number_pad1 = SENTRAL_PIN_PAD1;
100080f8:	3301      	adds	r3, #1
100080fa:	60e3      	str	r3, [r4, #12]
	config_i2c_master.pinmux_sel_pad0 = SENTRAL_MUX_PAD0;
100080fc:	3b0b      	subs	r3, #11
100080fe:	60a3      	str	r3, [r4, #8]
	config_i2c_master.pinmux_sel_pad1 = SENTRAL_MUX_PAD1;
10008100:	6123      	str	r3, [r4, #16]
	
	config_i2c_master.clock_source = I2C_CLOCK_SOURCE_SELECT_CLOCK_3;
10008102:	3b01      	subs	r3, #1
10008104:	7023      	strb	r3, [r4, #0]
	config_i2c_master.clock_divider = 0x10;
10008106:	330d      	adds	r3, #13
10008108:	8063      	strh	r3, [r4, #2]
	
	/* Initialize and enable device with config */
	while(i2c_master_init(&i2c_master_instance, SENTRAL_I2C_MODULE, &config_i2c_master) != STATUS_OK) {
1000810a:	4c0d      	ldr	r4, [pc, #52]	; (10008140 <i2c_init_sentral+0x58>)
1000810c:	4e0d      	ldr	r6, [pc, #52]	; (10008144 <i2c_init_sentral+0x5c>)
1000810e:	4d0e      	ldr	r5, [pc, #56]	; (10008148 <i2c_init_sentral+0x60>)
10008110:	4f0e      	ldr	r7, [pc, #56]	; (1000814c <i2c_init_sentral+0x64>)
10008112:	e002      	b.n	1000811a <i2c_init_sentral+0x32>
10008114:	3c01      	subs	r4, #1
		if(time_overflow++ > 10000) break;
10008116:	2c00      	cmp	r4, #0
10008118:	d005      	beq.n	10008126 <i2c_init_sentral+0x3e>
	
	config_i2c_master.clock_source = I2C_CLOCK_SOURCE_SELECT_CLOCK_3;
	config_i2c_master.clock_divider = 0x10;
	
	/* Initialize and enable device with config */
	while(i2c_master_init(&i2c_master_instance, SENTRAL_I2C_MODULE, &config_i2c_master) != STATUS_OK) {
1000811a:	1c30      	adds	r0, r6, #0
1000811c:	1c29      	adds	r1, r5, #0
1000811e:	aa01      	add	r2, sp, #4
10008120:	47b8      	blx	r7
10008122:	2800      	cmp	r0, #0
10008124:	d1f6      	bne.n	10008114 <i2c_init_sentral+0x2c>
		if(time_overflow++ > 10000) break;
	}
	i2c_enable(i2c_master_instance.hw);	
10008126:	4b07      	ldr	r3, [pc, #28]	; (10008144 <i2c_init_sentral+0x5c>)
10008128:	681a      	ldr	r2, [r3, #0]
 *
 * \param[in]  i2c_module  Pointer to software module structure
 */
static inline void i2c_wait_for_idle(I2C *const i2c_module)
{
	while (i2c_module->I2C_STATUS.bit.I2C_ACTIVE) {
1000812a:	2028      	movs	r0, #40	; 0x28
1000812c:	2101      	movs	r1, #1
1000812e:	5c13      	ldrb	r3, [r2, r0]
10008130:	4219      	tst	r1, r3
10008132:	d1fc      	bne.n	1000812e <i2c_init_sentral+0x46>
static inline void i2c_enable(I2C *const i2c_module)
{
	/* Wait for module to sync. */
	i2c_wait_for_idle(i2c_module);
	/* Enable module. */
	i2c_module->I2C_MODULE_ENABLE.reg = (1 << I2C_I2C_MODULE_ENABLE_ENABLE_Pos);
10008134:	2301      	movs	r3, #1
10008136:	7513      	strb	r3, [r2, #20]
	/*delay(100);*/
	return;
}
10008138:	b007      	add	sp, #28
1000813a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000813c:	100083a9 	.word	0x100083a9
10008140:	00002712 	.word	0x00002712
10008144:	1000ec44 	.word	0x1000ec44
10008148:	40003400 	.word	0x40003400
1000814c:	100083c1 	.word	0x100083c1

10008150 <i2c_sentral_write_register>:

/*---- Function definition for writing n bytes starting from particular register  -----*/
void i2c_sentral_write_register(uint8_t regAddr, uint8_t *writeByte, uint8_t writeByteLen) {
10008150:	b5f0      	push	{r4, r5, r6, r7, lr}
10008152:	b083      	sub	sp, #12
10008154:	af00      	add	r7, sp, #0

	uint8_t writeRegBytes[writeByteLen + 1], i;
10008156:	1c56      	adds	r6, r2, #1
10008158:	1c13      	adds	r3, r2, #0
1000815a:	3308      	adds	r3, #8
1000815c:	08db      	lsrs	r3, r3, #3
1000815e:	00db      	lsls	r3, r3, #3
10008160:	466c      	mov	r4, sp
10008162:	1ae3      	subs	r3, r4, r3
10008164:	469d      	mov	sp, r3
10008166:	466d      	mov	r5, sp
	writeRegBytes[0] = regAddr;
10008168:	7028      	strb	r0, [r5, #0]
	for(i= 0; i < writeByteLen; i++ ) {
1000816a:	2a00      	cmp	r2, #0
1000816c:	d007      	beq.n	1000817e <i2c_sentral_write_register+0x2e>
1000816e:	2300      	movs	r3, #0
10008170:	18e8      	adds	r0, r5, r3
		writeRegBytes[i+1] = writeByte[i];
10008172:	5ccc      	ldrb	r4, [r1, r3]
10008174:	7044      	strb	r4, [r0, #1]
10008176:	3301      	adds	r3, #1
/*---- Function definition for writing n bytes starting from particular register  -----*/
void i2c_sentral_write_register(uint8_t regAddr, uint8_t *writeByte, uint8_t writeByteLen) {

	uint8_t writeRegBytes[writeByteLen + 1], i;
	writeRegBytes[0] = regAddr;
	for(i= 0; i < writeByteLen; i++ ) {
10008178:	b2d8      	uxtb	r0, r3
1000817a:	4282      	cmp	r2, r0
1000817c:	d8f8      	bhi.n	10008170 <i2c_sentral_write_register+0x20>
		writeRegBytes[i+1] = writeByte[i];
	}

	struct i2c_master_packet writeRegAddr = {
1000817e:	2328      	movs	r3, #40	; 0x28
10008180:	803b      	strh	r3, [r7, #0]
10008182:	807e      	strh	r6, [r7, #2]
10008184:	607d      	str	r5, [r7, #4]
		.address = SLAVE_ADDRESS,
		.data_length = sizeof(writeRegBytes),
		.data = writeRegBytes,
	};

	i2c_master_write_packet_wait(&i2c_master_instance, &writeRegAddr);
10008186:	4803      	ldr	r0, [pc, #12]	; (10008194 <i2c_sentral_write_register+0x44>)
10008188:	1c39      	adds	r1, r7, #0
1000818a:	4b03      	ldr	r3, [pc, #12]	; (10008198 <i2c_sentral_write_register+0x48>)
1000818c:	4798      	blx	r3
}
1000818e:	46bd      	mov	sp, r7
10008190:	b003      	add	sp, #12
10008192:	bdf0      	pop	{r4, r5, r6, r7, pc}
10008194:	1000ec44 	.word	0x1000ec44
10008198:	100084d5 	.word	0x100084d5

1000819c <i2c_sentral_read_reg>:
	i2c_master_read_packet_wait(&i2c_master_instance, &readBytes);
	return;
}

/* --- Function definition for reading single bytes from particular register ---*/
uint8_t i2c_sentral_read_reg(uint8_t regAdr) {
1000819c:	b570      	push	{r4, r5, r6, lr}
1000819e:	b088      	sub	sp, #32
100081a0:	466b      	mov	r3, sp
100081a2:	1ddc      	adds	r4, r3, #7
100081a4:	71d8      	strb	r0, [r3, #7]
	
	struct i2c_master_packet writeRgAddr = {
100081a6:	a906      	add	r1, sp, #24
100081a8:	2228      	movs	r2, #40	; 0x28
100081aa:	800a      	strh	r2, [r1, #0]
100081ac:	2301      	movs	r3, #1
100081ae:	804b      	strh	r3, [r1, #2]
100081b0:	604c      	str	r4, [r1, #4]
		.address = SLAVE_ADDRESS,
		.data_length = 1,
		.data = &regAdr,
	};
	uint8_t getByt;
	struct i2c_master_packet rdBytes = {
100081b2:	ac03      	add	r4, sp, #12
100081b4:	8022      	strh	r2, [r4, #0]
100081b6:	8063      	strh	r3, [r4, #2]
100081b8:	2517      	movs	r5, #23
100081ba:	446d      	add	r5, sp
100081bc:	9504      	str	r5, [sp, #16]
		.address = SLAVE_ADDRESS,
		.data_length = 1,
		.data = &getByt,
	};
	i2c_master_write_packet_wait_no_stop(&i2c_master_instance, &writeRgAddr);
100081be:	4e05      	ldr	r6, [pc, #20]	; (100081d4 <i2c_sentral_read_reg+0x38>)
100081c0:	1c30      	adds	r0, r6, #0
100081c2:	4b05      	ldr	r3, [pc, #20]	; (100081d8 <i2c_sentral_read_reg+0x3c>)
100081c4:	4798      	blx	r3
	i2c_master_read_packet_wait(&i2c_master_instance, &rdBytes);
100081c6:	1c30      	adds	r0, r6, #0
100081c8:	1c21      	adds	r1, r4, #0
100081ca:	4b04      	ldr	r3, [pc, #16]	; (100081dc <i2c_sentral_read_reg+0x40>)
100081cc:	4798      	blx	r3
	return getByt;
100081ce:	7828      	ldrb	r0, [r5, #0]
}
100081d0:	b008      	add	sp, #32
100081d2:	bd70      	pop	{r4, r5, r6, pc}
100081d4:	1000ec44 	.word	0x1000ec44
100081d8:	10008505 	.word	0x10008505
100081dc:	100084a5 	.word	0x100084a5

100081e0 <reset_sentral>:


void reset_sentral(void) {	
100081e0:	b500      	push	{lr}
100081e2:	b083      	sub	sp, #12
	uint8_t myByte = SENTRAL_RESET_CMD;
100081e4:	466b      	mov	r3, sp
100081e6:	1dd9      	adds	r1, r3, #7
100081e8:	2301      	movs	r3, #1
100081ea:	700b      	strb	r3, [r1, #0]
	i2c_sentral_write_register(SENTRAL_RST_REQ_REG, &myByte, 1);
100081ec:	209b      	movs	r0, #155	; 0x9b
100081ee:	2201      	movs	r2, #1
100081f0:	4b01      	ldr	r3, [pc, #4]	; (100081f8 <reset_sentral+0x18>)
100081f2:	4798      	blx	r3
	return;
}
100081f4:	b003      	add	sp, #12
100081f6:	bd00      	pop	{pc}
100081f8:	10008151 	.word	0x10008151

100081fc <config_sentral>:

uint8_t config_sentral(void) {
100081fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100081fe:	464f      	mov	r7, r9
10008200:	4646      	mov	r6, r8
10008202:	b4c0      	push	{r6, r7}
10008204:	4c10      	ldr	r4, [pc, #64]	; (10008248 <config_sentral+0x4c>)
10008206:	2310      	movs	r3, #16
10008208:	4699      	mov	r9, r3
1000820a:	44a1      	add	r9, r4
	uint8_t testByte, i, count = 0;
1000820c:	2600      	movs	r6, #0
	for(i = 0; i < sizeof(Configuration)/2; i++) {
		i2c_sentral_write_register(Configuration[i][0], (uint8_t *)&Configuration[i][1], 1);
1000820e:	4b0f      	ldr	r3, [pc, #60]	; (1000824c <config_sentral+0x50>)
10008210:	4698      	mov	r8, r3
		testByte = i2c_sentral_read_reg(Configuration[i][0]);	
10008212:	4f0f      	ldr	r7, [pc, #60]	; (10008250 <config_sentral+0x54>)
}

uint8_t config_sentral(void) {
	uint8_t testByte, i, count = 0;
	for(i = 0; i < sizeof(Configuration)/2; i++) {
		i2c_sentral_write_register(Configuration[i][0], (uint8_t *)&Configuration[i][1], 1);
10008214:	7825      	ldrb	r5, [r4, #0]
10008216:	1c61      	adds	r1, r4, #1
10008218:	1c28      	adds	r0, r5, #0
1000821a:	2201      	movs	r2, #1
1000821c:	47c0      	blx	r8
		testByte = i2c_sentral_read_reg(Configuration[i][0]);	
1000821e:	1c28      	adds	r0, r5, #0
10008220:	47b8      	blx	r7
			
		if(testByte != Configuration[i][1]) {
10008222:	7863      	ldrb	r3, [r4, #1]
10008224:	4283      	cmp	r3, r0
10008226:	d001      	beq.n	1000822c <config_sentral+0x30>
			count++;
10008228:	3601      	adds	r6, #1
1000822a:	b2f6      	uxtb	r6, r6
1000822c:	3402      	adds	r4, #2
	return;
}

uint8_t config_sentral(void) {
	uint8_t testByte, i, count = 0;
	for(i = 0; i < sizeof(Configuration)/2; i++) {
1000822e:	454c      	cmp	r4, r9
10008230:	d1f0      	bne.n	10008214 <config_sentral+0x18>
		
	("Register Content of Algorithm Status Register : %d\r\n", i2c_sentral_read_reg(SENTRAL_ALGORITHM_STATUS_REG));	
		//printf("Register Content of Pass Through Status Register : %d\r\n", i2c_sentral_read_reg(SENTRAL_PASS_THROUGH_STATUS_REG));
	#endif
	
	if(i2c_sentral_read_reg(SENTRAL_ALGORITHM_STATUS_REG) & 0x01)	{
10008232:	2038      	movs	r0, #56	; 0x38
10008234:	4c06      	ldr	r4, [pc, #24]	; (10008250 <config_sentral+0x54>)
10008236:	47a0      	blx	r4
		//printf("Device in standby mode \r\n");
	}
	if(i2c_sentral_read_reg(SENTRAL_PASS_THROUGH_STATUS_REG) & 0x01){
10008238:	209e      	movs	r0, #158	; 0x9e
1000823a:	47a0      	blx	r4
		//printf("Device in Pass-Through mode \r\n");
	}
	return count;
}
1000823c:	1c30      	adds	r0, r6, #0
1000823e:	bc0c      	pop	{r2, r3}
10008240:	4690      	mov	r8, r2
10008242:	4699      	mov	r9, r3
10008244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10008246:	46c0      	nop			; (mov r8, r8)
10008248:	1000e710 	.word	0x1000e710
1000824c:	10008151 	.word	0x10008151
10008250:	1000819d 	.word	0x1000819d

10008254 <check_sentral_eeprom_status>:

uint8_t check_sentral_eeprom_status(void) {
10008254:	b508      	push	{r3, lr}
	uint8_t myByte = i2c_sentral_read_reg(SENTRAL_EEPROM_STATUS_REG);	
10008256:	2037      	movs	r0, #55	; 0x37
10008258:	4b06      	ldr	r3, [pc, #24]	; (10008274 <check_sentral_eeprom_status+0x20>)
1000825a:	4798      	blx	r3
	//printf("SENtral Status Reg Content : %d \r\n", myByte);
	if(myByte & 0x01) {
		////printf("EEPROM detected!\r\n");
		if(myByte & 0x02) {
1000825c:	2303      	movs	r3, #3
1000825e:	4003      	ands	r3, r0
				////printf("Uploaded Successful!\r\n");
				return true;
			}
			} else {
			////printf("EEPROM upload not done...\r\n");
			return false;
10008260:	2200      	movs	r2, #0
uint8_t check_sentral_eeprom_status(void) {
	uint8_t myByte = i2c_sentral_read_reg(SENTRAL_EEPROM_STATUS_REG);	
	//printf("SENtral Status Reg Content : %d \r\n", myByte);
	if(myByte & 0x01) {
		////printf("EEPROM detected!\r\n");
		if(myByte & 0x02) {
10008262:	2b03      	cmp	r3, #3
10008264:	d104      	bne.n	10008270 <check_sentral_eeprom_status+0x1c>
			////printf("Done EEPROM upload...\r\n");
			if(myByte & 0x04){
10008266:	0880      	lsrs	r0, r0, #2
10008268:	2301      	movs	r3, #1
1000826a:	4058      	eors	r0, r3
				////printf("Uploaded with error / CRC Error !\r\n");
				} else {
				////printf("Uploaded Successful!\r\n");
				return true;
1000826c:	3201      	adds	r2, #1
1000826e:	4002      	ands	r2, r0
		} else {
		////printf("EEPROM Not detected..\r\n");
		return false;
	}
	return 0;
}
10008270:	1c10      	adds	r0, r2, #0
10008272:	bd08      	pop	{r3, pc}
10008274:	1000819d 	.word	0x1000819d

10008278 <init_sentral>:

void init_sentral(void) {	
10008278:	b508      	push	{r3, lr}
	
	static uint8_t reset_count = 0;
	reset_count++;
1000827a:	4a0f      	ldr	r2, [pc, #60]	; (100082b8 <init_sentral+0x40>)
1000827c:	7813      	ldrb	r3, [r2, #0]
1000827e:	3301      	adds	r3, #1
10008280:	7013      	strb	r3, [r2, #0]
	if(check_sentral_eeprom_status()) {
10008282:	4b0e      	ldr	r3, [pc, #56]	; (100082bc <init_sentral+0x44>)
10008284:	4798      	blx	r3
10008286:	2800      	cmp	r0, #0
10008288:	d002      	beq.n	10008290 <init_sentral+0x18>
		if(0 < config_sentral()) {
1000828a:	4b0d      	ldr	r3, [pc, #52]	; (100082c0 <init_sentral+0x48>)
1000828c:	4798      	blx	r3
1000828e:	e011      	b.n	100082b4 <init_sentral+0x3c>
			////printf("Error uploading data !");			
			} else {
			////printf("Done uploading control bytes into SENtral registers !\r\n");
		}
	} else {
		reset_sentral();
10008290:	4b0c      	ldr	r3, [pc, #48]	; (100082c4 <init_sentral+0x4c>)
10008292:	4798      	blx	r3
10008294:	22fa      	movs	r2, #250	; 0xfa
10008296:	0052      	lsls	r2, r2, #1
		return false;
	}
	return 0;
}

void init_sentral(void) {	
10008298:	21fa      	movs	r1, #250	; 0xfa
1000829a:	0089      	lsls	r1, r1, #2
1000829c:	e006      	b.n	100082ac <init_sentral+0x34>
/* Delay for this function only */
static void delay(uint32_t count)
{
	for (uint32_t i = 0; i < count; i++) {
		for (uint32_t j = 0; j < 1000; j++)
		asm volatile ("nop");
1000829e:	46c0      	nop			; (mov r8, r8)
100082a0:	3b01      	subs	r3, #1

/* Delay for this function only */
static void delay(uint32_t count)
{
	for (uint32_t i = 0; i < count; i++) {
		for (uint32_t j = 0; j < 1000; j++)
100082a2:	2b00      	cmp	r3, #0
100082a4:	d1fb      	bne.n	1000829e <init_sentral+0x26>
100082a6:	3a01      	subs	r2, #1
#endif

/* Delay for this function only */
static void delay(uint32_t count)
{
	for (uint32_t i = 0; i < count; i++) {
100082a8:	2a00      	cmp	r2, #0
100082aa:	d001      	beq.n	100082b0 <init_sentral+0x38>
		return false;
	}
	return 0;
}

void init_sentral(void) {	
100082ac:	1c0b      	adds	r3, r1, #0
100082ae:	e7f6      	b.n	1000829e <init_sentral+0x26>
		////printf("Resetting SENtral for %d time(s)!\r\n", reset_count);
		/* If the device is not configured correctly 
		 * Keep sending reset upload the command values 
		 * recursively.
		 */
		init_sentral(); 
100082b0:	f7ff ffe2 	bl	10008278 <init_sentral>
	}
	////printf("Done initialization of SENtral.\r\n");
	return ;
}
100082b4:	bd08      	pop	{r3, pc}
100082b6:	46c0      	nop			; (mov r8, r8)
100082b8:	1000ec28 	.word	0x1000ec28
100082bc:	10008255 	.word	0x10008255
100082c0:	100081fd 	.word	0x100081fd
100082c4:	100081e1 	.word	0x100081e1

100082c8 <_i2c_master_read_packet>:
 *                                      acknowledged the address
 */
static enum status_code _i2c_master_read_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
100082c8:	b5f0      	push	{r4, r5, r6, r7, lr}
100082ca:	464f      	mov	r7, r9
100082cc:	4646      	mov	r6, r8
100082ce:	b4c0      	push	{r6, r7}
100082d0:	4681      	mov	r9, r0
	Assert(module->hw);
	Assert(config);
	
	uint16_t counter = 0;
	uint32_t status  = 0;
	I2C *const i2c_module    = (module->hw);
100082d2:	6802      	ldr	r2, [r0, #0]
	uint16_t length = packet->data_length;
100082d4:	884d      	ldrh	r5, [r1, #2]

	if (length == 0) {
		return STATUS_ERR_INVALID_ARG;
100082d6:	2317      	movs	r3, #23
	uint16_t counter = 0;
	uint32_t status  = 0;
	I2C *const i2c_module    = (module->hw);
	uint16_t length = packet->data_length;

	if (length == 0) {
100082d8:	2d00      	cmp	r5, #0
100082da:	d02f      	beq.n	1000833c <_i2c_master_read_packet+0x74>
 *
 * \param[in]  i2c_module  Pointer to software module structure
 */
static inline void i2c_wait_for_idle(I2C *const i2c_module)
{
	while (i2c_module->I2C_STATUS.bit.I2C_ACTIVE) {
100082dc:	2628      	movs	r6, #40	; 0x28
100082de:	2401      	movs	r4, #1
100082e0:	5d93      	ldrb	r3, [r2, r6]
100082e2:	421c      	tst	r4, r3
100082e4:	d1fc      	bne.n	100082e0 <_i2c_master_read_packet+0x18>
	}

	i2c_wait_for_idle(i2c_module);

	/* Flush the FIFO */
	i2c_module->I2C_FLUSH.reg = 1;
100082e6:	2301      	movs	r3, #1
100082e8:	2434      	movs	r4, #52	; 0x34
100082ea:	5513      	strb	r3, [r2, r4]

	/* Enable I2C on bus (start condition). */
	i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_1;
100082ec:	3c14      	subs	r4, #20
100082ee:	5513      	strb	r3, [r2, r4]
	/* Address I2C slave in case of Master mode enabled. */
	i2c_module->TRANSMIT_DATA.reg = I2C_TRANSMIT_DATA_ADDRESS_FLAG_1 |
100082f0:	880b      	ldrh	r3, [r1, #0]
100082f2:	005b      	lsls	r3, r3, #1
100082f4:	2402      	movs	r4, #2
100082f6:	34ff      	adds	r4, #255	; 0xff
100082f8:	4323      	orrs	r3, r4
100082fa:	b29b      	uxth	r3, r3
100082fc:	8013      	strh	r3, [r2, #0]
	/* Sanity check */
	Assert(module);
	Assert(module->hw);
	Assert(config);
	
	uint16_t counter = 0;
100082fe:	2400      	movs	r4, #0
	/* Address I2C slave in case of Master mode enabled. */
	i2c_module->TRANSMIT_DATA.reg = I2C_TRANSMIT_DATA_ADDRESS_FLAG_1 |
			(packet->address << 1) | I2C_TRANSFER_READ;
	do {
		status = i2c_module->RECEIVE_STATUS.reg;
		if (status & I2C_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY)
10008300:	2301      	movs	r3, #1
10008302:	4698      	mov	r8, r3
	i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_1;
	/* Address I2C slave in case of Master mode enabled. */
	i2c_module->TRANSMIT_DATA.reg = I2C_TRANSMIT_DATA_ADDRESS_FLAG_1 |
			(packet->address << 1) | I2C_TRANSFER_READ;
	do {
		status = i2c_module->RECEIVE_STATUS.reg;
10008304:	7b13      	ldrb	r3, [r2, #12]
10008306:	b2db      	uxtb	r3, r3
		if (status & I2C_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY)
10008308:	4640      	mov	r0, r8
1000830a:	4218      	tst	r0, r3
1000830c:	d006      	beq.n	1000831c <_i2c_master_read_packet+0x54>
			packet->data[counter++] = i2c_module->RECEIVE_DATA.reg;
1000830e:	1c67      	adds	r7, r4, #1
10008310:	7910      	ldrb	r0, [r2, #4]
10008312:	4684      	mov	ip, r0
10008314:	6848      	ldr	r0, [r1, #4]
10008316:	4666      	mov	r6, ip
10008318:	5506      	strb	r6, [r0, r4]
1000831a:	b2bc      	uxth	r4, r7
	} while (counter < length); 
1000831c:	42ac      	cmp	r4, r5
1000831e:	d3f1      	bcc.n	10008304 <_i2c_master_read_packet+0x3c>

	/* Now check whether the core has sent the data out and free the bus. */
	while (!(status & I2C_TRANSMIT_STATUS_TX_FIFO_EMPTY)) {
10008320:	06db      	lsls	r3, r3, #27
10008322:	d403      	bmi.n	1000832c <_i2c_master_read_packet+0x64>
10008324:	2110      	movs	r1, #16
		status = i2c_module->TRANSMIT_STATUS.reg;
10008326:	7a13      	ldrb	r3, [r2, #8]
		if (status & I2C_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY)
			packet->data[counter++] = i2c_module->RECEIVE_DATA.reg;
	} while (counter < length); 

	/* Now check whether the core has sent the data out and free the bus. */
	while (!(status & I2C_TRANSMIT_STATUS_TX_FIFO_EMPTY)) {
10008328:	420b      	tst	r3, r1
1000832a:	d0fc      	beq.n	10008326 <_i2c_master_read_packet+0x5e>
		status = i2c_module->TRANSMIT_STATUS.reg;
	}

	/* Send stop condition. */
	if (!module->no_stop) {
1000832c:	464b      	mov	r3, r9
1000832e:	7959      	ldrb	r1, [r3, #5]
		i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_0;
	}

	return STATUS_OK;
10008330:	2300      	movs	r3, #0
	while (!(status & I2C_TRANSMIT_STATUS_TX_FIFO_EMPTY)) {
		status = i2c_module->TRANSMIT_STATUS.reg;
	}

	/* Send stop condition. */
	if (!module->no_stop) {
10008332:	2900      	cmp	r1, #0
10008334:	d102      	bne.n	1000833c <_i2c_master_read_packet+0x74>
		i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_0;
10008336:	3320      	adds	r3, #32
10008338:	54d1      	strb	r1, [r2, r3]
	}

	return STATUS_OK;
1000833a:	2300      	movs	r3, #0
}
1000833c:	1c18      	adds	r0, r3, #0
1000833e:	bc0c      	pop	{r2, r3}
10008340:	4690      	mov	r8, r2
10008342:	4699      	mov	r9, r3
10008344:	bdf0      	pop	{r4, r5, r6, r7, pc}
10008346:	46c0      	nop			; (mov r8, r8)

10008348 <_i2c_master_write_packet>:
 * \retval STATUS_OK                    The packet was write successfully
 */
static enum status_code _i2c_master_write_packet(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
10008348:	b5f0      	push	{r4, r5, r6, r7, lr}
1000834a:	4684      	mov	ip, r0
	/* Sanity check */
	Assert(module);
	Assert(module->hw);
	Assert(packet);
	
	I2C *const i2c_module = (module->hw);
1000834c:	6802      	ldr	r2, [r0, #0]
	uint16_t counter = 0;
	uint32_t status  = 0;

	uint16_t length = packet->data_length;
1000834e:	884e      	ldrh	r6, [r1, #2]
10008350:	2528      	movs	r5, #40	; 0x28
10008352:	2401      	movs	r4, #1
10008354:	5d53      	ldrb	r3, [r2, r5]
10008356:	421c      	tst	r4, r3
10008358:	d1fc      	bne.n	10008354 <_i2c_master_write_packet+0xc>

	i2c_wait_for_idle(i2c_module);

	/* Flush the FIFO */
	i2c_module->I2C_FLUSH.reg = 1;
1000835a:	2301      	movs	r3, #1
1000835c:	2434      	movs	r4, #52	; 0x34
1000835e:	5513      	strb	r3, [r2, r4]

	/* Enable I2C on bus (start condition) */
	i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_1;
10008360:	3c14      	subs	r4, #20
10008362:	5513      	strb	r3, [r2, r4]

	/* Address I2C slave in case of Master mode enabled */
	i2c_module->TRANSMIT_DATA.reg = I2C_TRANSMIT_DATA_ADDRESS_FLAG_1 | 
10008364:	880b      	ldrh	r3, [r1, #0]
10008366:	005b      	lsls	r3, r3, #1
10008368:	34e0      	adds	r4, #224	; 0xe0
1000836a:	4323      	orrs	r3, r4
1000836c:	b29b      	uxth	r3, r3
1000836e:	8013      	strh	r3, [r2, #0]
	Assert(module);
	Assert(module->hw);
	Assert(packet);
	
	I2C *const i2c_module = (module->hw);
	uint16_t counter = 0;
10008370:	2400      	movs	r4, #0
	/* Address I2C slave in case of Master mode enabled */
	i2c_module->TRANSMIT_DATA.reg = I2C_TRANSMIT_DATA_ADDRESS_FLAG_1 | 
			((packet->address) << 1) | I2C_TRANSFER_WRITE;
	do {
		status = i2c_module->TRANSMIT_STATUS.reg;
		if (status & I2C_TRANSMIT_STATUS_TX_FIFO_NOT_FULL_Msk) {
10008372:	2501      	movs	r5, #1

	/* Address I2C slave in case of Master mode enabled */
	i2c_module->TRANSMIT_DATA.reg = I2C_TRANSMIT_DATA_ADDRESS_FLAG_1 | 
			((packet->address) << 1) | I2C_TRANSFER_WRITE;
	do {
		status = i2c_module->TRANSMIT_STATUS.reg;
10008374:	7a13      	ldrb	r3, [r2, #8]
10008376:	b2db      	uxtb	r3, r3
		if (status & I2C_TRANSMIT_STATUS_TX_FIFO_NOT_FULL_Msk) {
10008378:	421d      	tst	r5, r3
1000837a:	d004      	beq.n	10008386 <_i2c_master_write_packet+0x3e>
			i2c_module->TRANSMIT_DATA.reg = packet->data[counter++];
1000837c:	1c67      	adds	r7, r4, #1
1000837e:	6848      	ldr	r0, [r1, #4]
10008380:	5d04      	ldrb	r4, [r0, r4]
10008382:	8014      	strh	r4, [r2, #0]
10008384:	b2bc      	uxth	r4, r7
		}
	} while (counter < length); 
10008386:	42b4      	cmp	r4, r6
10008388:	d3f4      	bcc.n	10008374 <_i2c_master_write_packet+0x2c>

	/* Now check whether the core has sent the data out and free the bus */
	while (!(status & I2C_TRANSMIT_STATUS_TX_FIFO_EMPTY)) {
1000838a:	06db      	lsls	r3, r3, #27
1000838c:	d403      	bmi.n	10008396 <_i2c_master_write_packet+0x4e>
1000838e:	2110      	movs	r1, #16
			status = i2c_module->TRANSMIT_STATUS.reg;
10008390:	7a13      	ldrb	r3, [r2, #8]
			i2c_module->TRANSMIT_DATA.reg = packet->data[counter++];
		}
	} while (counter < length); 

	/* Now check whether the core has sent the data out and free the bus */
	while (!(status & I2C_TRANSMIT_STATUS_TX_FIFO_EMPTY)) {
10008392:	420b      	tst	r3, r1
10008394:	d0fc      	beq.n	10008390 <_i2c_master_write_packet+0x48>
			status = i2c_module->TRANSMIT_STATUS.reg;
	}

	/* Send stop condition */
	if (!module->no_stop) {
10008396:	4663      	mov	r3, ip
10008398:	795b      	ldrb	r3, [r3, #5]
1000839a:	2b00      	cmp	r3, #0
1000839c:	d102      	bne.n	100083a4 <_i2c_master_write_packet+0x5c>
		i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_0;
1000839e:	2100      	movs	r1, #0
100083a0:	3320      	adds	r3, #32
100083a2:	54d1      	strb	r1, [r2, r3]
	}

	return STATUS_OK;
}
100083a4:	2000      	movs	r0, #0
100083a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100083a8 <i2c_master_get_config_defaults>:
		struct i2c_master_config *const config)
{
	/* Sanity check */
	Assert(config);
	
	config->clock_source    = I2C_CLK_INPUT_3;
100083a8:	2303      	movs	r3, #3
100083aa:	7003      	strb	r3, [r0, #0]
	config->clock_divider   = 0x10;
100083ac:	330d      	adds	r3, #13
100083ae:	8043      	strh	r3, [r0, #2]
	config->pin_number_pad0 = PIN_LP_GPIO_8_MUX2_I2C0_SDA;
100083b0:	3b08      	subs	r3, #8
100083b2:	6043      	str	r3, [r0, #4]
	config->pin_number_pad1 = PIN_LP_GPIO_9_MUX2_I2C0_SCL;
100083b4:	3301      	adds	r3, #1
100083b6:	60c3      	str	r3, [r0, #12]
	config->pinmux_sel_pad0 = MUX_LP_GPIO_8_MUX2_I2C0_SDA;
100083b8:	3b07      	subs	r3, #7
100083ba:	6083      	str	r3, [r0, #8]
	config->pinmux_sel_pad1 = MUX_LP_GPIO_9_MUX2_I2C0_SCL;
100083bc:	6103      	str	r3, [r0, #16]
}
100083be:	4770      	bx	lr

100083c0 <i2c_master_init>:
 */
enum status_code i2c_master_init(
		struct i2c_master_module *const module,
		I2C *const hw,
		const struct i2c_master_config *const config)
{
100083c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	/* Sanity check */
	Assert(module);
	Assert(module->hw);
	Assert(config);
	
	module->hw = hw;
100083c2:	6001      	str	r1, [r0, #0]

	/* Sanity check arguments. */
	if ((module == NULL) || (config == NULL))
100083c4:	2800      	cmp	r0, #0
100083c6:	d059      	beq.n	1000847c <i2c_master_init+0xbc>
100083c8:	2a00      	cmp	r2, #0
100083ca:	d059      	beq.n	10008480 <i2c_master_init+0xc0>
100083cc:	2528      	movs	r5, #40	; 0x28
100083ce:	2401      	movs	r4, #1
100083d0:	5d4b      	ldrb	r3, [r1, r5]
100083d2:	421c      	tst	r4, r3
100083d4:	d1fc      	bne.n	100083d0 <i2c_master_init+0x10>
100083d6:	1c14      	adds	r4, r2, #0
100083d8:	1c05      	adds	r5, r0, #0
 *
 */
static inline void i2c_disable(I2C *const i2c_module)
{
	i2c_wait_for_idle(i2c_module);
	i2c_module->I2C_MODULE_ENABLE.reg = 0;
100083da:	2300      	movs	r3, #0
100083dc:	750b      	strb	r3, [r1, #20]
		return STATUS_ERR_INVALID_ARG;

	i2c_disable(module->hw);
	if (module->hw == I2C0) {
100083de:	6803      	ldr	r3, [r0, #0]
100083e0:	4a28      	ldr	r2, [pc, #160]	; (10008484 <i2c_master_init+0xc4>)
100083e2:	4293      	cmp	r3, r2
100083e4:	d103      	bne.n	100083ee <i2c_master_init+0x2e>
		system_peripheral_reset(PERIPHERAL_I2C0_CORE);
100083e6:	2003      	movs	r0, #3
100083e8:	4b27      	ldr	r3, [pc, #156]	; (10008488 <i2c_master_init+0xc8>)
100083ea:	4798      	blx	r3
100083ec:	e006      	b.n	100083fc <i2c_master_init+0x3c>
	} else if (module->hw == I2C1) {
		system_peripheral_reset(PERIPHERAL_I2C1_CORE);
	} else {
		return STATUS_ERR_INVALID_ARG;
100083ee:	2017      	movs	r0, #23
		return STATUS_ERR_INVALID_ARG;

	i2c_disable(module->hw);
	if (module->hw == I2C0) {
		system_peripheral_reset(PERIPHERAL_I2C0_CORE);
	} else if (module->hw == I2C1) {
100083f0:	4a26      	ldr	r2, [pc, #152]	; (1000848c <i2c_master_init+0xcc>)
100083f2:	4293      	cmp	r3, r2
100083f4:	d145      	bne.n	10008482 <i2c_master_init+0xc2>
		system_peripheral_reset(PERIPHERAL_I2C1_CORE);
100083f6:	3002      	adds	r0, #2
100083f8:	4b23      	ldr	r3, [pc, #140]	; (10008488 <i2c_master_init+0xc8>)
100083fa:	4798      	blx	r3
		return STATUS_ERR_INVALID_ARG;
	}

#if I2C_MASTER_CALLBACK_MODE == true
	/* Initialize values in module. */
	module->registered_callback = 0;
100083fc:	2300      	movs	r3, #0
100083fe:	742b      	strb	r3, [r5, #16]
	module->enabled_callback    = 0;
10008400:	746b      	strb	r3, [r5, #17]
	module->buffer_length       = 0;
10008402:	826b      	strh	r3, [r5, #18]
	module->buffer_remaining    = 0;
10008404:	82ab      	strh	r3, [r5, #20]
	module->status              = STATUS_OK;
10008406:	2200      	movs	r2, #0
10008408:	776a      	strb	r2, [r5, #29]
	module->buffer              = NULL;
1000840a:	61ab      	str	r3, [r5, #24]

	_i2c_instances = (void*)module;
1000840c:	4b20      	ldr	r3, [pc, #128]	; (10008490 <i2c_master_init+0xd0>)
1000840e:	601d      	str	r5, [r3, #0]
	if (module->hw == I2C0) {
10008410:	682b      	ldr	r3, [r5, #0]
10008412:	4a1c      	ldr	r2, [pc, #112]	; (10008484 <i2c_master_init+0xc4>)
10008414:	4293      	cmp	r3, r2
10008416:	d10f      	bne.n	10008438 <i2c_master_init+0x78>
		system_register_isr(RAM_ISR_TABLE_I2CRX0_INDEX, (uint32_t)_i2c_master_isr_handler);
10008418:	4f1e      	ldr	r7, [pc, #120]	; (10008494 <i2c_master_init+0xd4>)
1000841a:	2018      	movs	r0, #24
1000841c:	1c39      	adds	r1, r7, #0
1000841e:	4e1e      	ldr	r6, [pc, #120]	; (10008498 <i2c_master_init+0xd8>)
10008420:	47b0      	blx	r6
		system_register_isr(RAM_ISR_TABLE_I2CTX0_INDEX, (uint32_t)_i2c_master_isr_handler);
10008422:	2019      	movs	r0, #25
10008424:	1c39      	adds	r1, r7, #0
10008426:	47b0      	blx	r6

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
10008428:	4b1c      	ldr	r3, [pc, #112]	; (1000849c <i2c_master_init+0xdc>)
1000842a:	2280      	movs	r2, #128	; 0x80
1000842c:	0052      	lsls	r2, r2, #1
1000842e:	601a      	str	r2, [r3, #0]
10008430:	3201      	adds	r2, #1
10008432:	32ff      	adds	r2, #255	; 0xff
10008434:	601a      	str	r2, [r3, #0]
10008436:	e011      	b.n	1000845c <i2c_master_init+0x9c>
		NVIC_EnableIRQ(I2C0_RX_IRQn);
		NVIC_EnableIRQ(I2C0_TX_IRQn);
	} else if (module->hw == I2C1) {
10008438:	4a14      	ldr	r2, [pc, #80]	; (1000848c <i2c_master_init+0xcc>)
1000843a:	4293      	cmp	r3, r2
1000843c:	d10e      	bne.n	1000845c <i2c_master_init+0x9c>
		system_register_isr(RAM_ISR_TABLE_I2CRX1_INDEX, (uint32_t)_i2c_master_isr_handler);
1000843e:	4f15      	ldr	r7, [pc, #84]	; (10008494 <i2c_master_init+0xd4>)
10008440:	201a      	movs	r0, #26
10008442:	1c39      	adds	r1, r7, #0
10008444:	4e14      	ldr	r6, [pc, #80]	; (10008498 <i2c_master_init+0xd8>)
10008446:	47b0      	blx	r6
		system_register_isr(RAM_ISR_TABLE_I2CTX1_INDEX, (uint32_t)_i2c_master_isr_handler);
10008448:	201b      	movs	r0, #27
1000844a:	1c39      	adds	r1, r7, #0
1000844c:	47b0      	blx	r6
1000844e:	4b13      	ldr	r3, [pc, #76]	; (1000849c <i2c_master_init+0xdc>)
10008450:	2280      	movs	r2, #128	; 0x80
10008452:	00d2      	lsls	r2, r2, #3
10008454:	601a      	str	r2, [r3, #0]
10008456:	2280      	movs	r2, #128	; 0x80
10008458:	0112      	lsls	r2, r2, #4
1000845a:	601a      	str	r2, [r3, #0]
	/* Sanity check */
	Assert(module);
	Assert(module->hw);
	Assert(config);

	I2C *const i2c_module = (module->hw);
1000845c:	682d      	ldr	r5, [r5, #0]

	/* Set the pinmux for this i2c module. */
	gpio_pinmux_cofiguration(config->pin_number_pad0, (uint16_t)(config->pinmux_sel_pad0));
1000845e:	7920      	ldrb	r0, [r4, #4]
10008460:	8921      	ldrh	r1, [r4, #8]
10008462:	4e0f      	ldr	r6, [pc, #60]	; (100084a0 <i2c_master_init+0xe0>)
10008464:	47b0      	blx	r6
	gpio_pinmux_cofiguration(config->pin_number_pad1, (uint16_t)(config->pinmux_sel_pad1));
10008466:	7b20      	ldrb	r0, [r4, #12]
10008468:	8a21      	ldrh	r1, [r4, #16]
1000846a:	47b0      	blx	r6
	/* Set clock. */
	i2c_module->CLOCK_SOURCE_SELECT.reg = config->clock_source;
1000846c:	7823      	ldrb	r3, [r4, #0]
1000846e:	742b      	strb	r3, [r5, #16]
	i2c_module->I2C_CLK_DIVIDER.reg = I2C_I2C_CLK_DIVIDER_I2C_DIVIDE_RATIO(config->clock_divider);
10008470:	8863      	ldrh	r3, [r4, #2]
10008472:	832b      	strh	r3, [r5, #24]
	/* Enable master mode. */
	i2c_module->I2C_MASTER_MODE.reg = I2C_I2C_MASTER_MODE_MASTER_ENABLE_1;
10008474:	2301      	movs	r3, #1
10008476:	772b      	strb	r3, [r5, #28]
#endif

	/* Set config and return status. */
	_i2c_master_set_config(module, config);

	return STATUS_OK;
10008478:	2000      	movs	r0, #0
1000847a:	e002      	b.n	10008482 <i2c_master_init+0xc2>
	
	module->hw = hw;

	/* Sanity check arguments. */
	if ((module == NULL) || (config == NULL))
		return STATUS_ERR_INVALID_ARG;
1000847c:	2017      	movs	r0, #23
1000847e:	e000      	b.n	10008482 <i2c_master_init+0xc2>
10008480:	2017      	movs	r0, #23

	/* Set config and return status. */
	_i2c_master_set_config(module, config);

	return STATUS_OK;
}
10008482:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10008484:	40003000 	.word	0x40003000
10008488:	10008f49 	.word	0x10008f49
1000848c:	40003400 	.word	0x40003400
10008490:	1000ec64 	.word	0x1000ec64
10008494:	10008535 	.word	0x10008535
10008498:	100093b1 	.word	0x100093b1
1000849c:	e000e100 	.word	0xe000e100
100084a0:	10008a05 	.word	0x10008a05

100084a4 <i2c_master_read_packet_wait>:
 * \retval STATUS_BUSY                  If module has a pending request.
 */
enum status_code i2c_master_read_packet_wait(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
100084a4:	b508      	push	{r3, lr}
	/* Sanity check */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	if((module == NULL) || (packet == NULL))
100084a6:	2800      	cmp	r0, #0
100084a8:	d00c      	beq.n	100084c4 <i2c_master_read_packet_wait+0x20>
100084aa:	2900      	cmp	r1, #0
100084ac:	d00c      	beq.n	100084c8 <i2c_master_read_packet_wait+0x24>
		return STATUS_ERR_INVALID_ARG;

#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job. */
	if (module->buffer_remaining > 0) {
100084ae:	8a82      	ldrh	r2, [r0, #20]
100084b0:	b292      	uxth	r2, r2
		return STATUS_BUSY;
100084b2:	2305      	movs	r3, #5
	if((module == NULL) || (packet == NULL))
		return STATUS_ERR_INVALID_ARG;

#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job. */
	if (module->buffer_remaining > 0) {
100084b4:	2a00      	cmp	r2, #0
100084b6:	d108      	bne.n	100084ca <i2c_master_read_packet_wait+0x26>
		return STATUS_BUSY;
	}
#endif

	module->no_stop = false;
100084b8:	2300      	movs	r3, #0
100084ba:	7143      	strb	r3, [r0, #5]

	return _i2c_master_read_packet(module, packet);
100084bc:	4b04      	ldr	r3, [pc, #16]	; (100084d0 <i2c_master_read_packet_wait+0x2c>)
100084be:	4798      	blx	r3
100084c0:	1c03      	adds	r3, r0, #0
100084c2:	e002      	b.n	100084ca <i2c_master_read_packet_wait+0x26>
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	if((module == NULL) || (packet == NULL))
		return STATUS_ERR_INVALID_ARG;
100084c4:	2317      	movs	r3, #23
100084c6:	e000      	b.n	100084ca <i2c_master_read_packet_wait+0x26>
100084c8:	2317      	movs	r3, #23
#endif

	module->no_stop = false;

	return _i2c_master_read_packet(module, packet);
}
100084ca:	1c18      	adds	r0, r3, #0
100084cc:	bd08      	pop	{r3, pc}
100084ce:	46c0      	nop			; (mov r8, r8)
100084d0:	100082c9 	.word	0x100082c9

100084d4 <i2c_master_write_packet_wait>:
 * \retval STATUS_BUSY                  If module has a pending request.
 */
enum status_code i2c_master_write_packet_wait(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
100084d4:	b508      	push	{r3, lr}
	/* Sanity check arguments. */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	if ((module == NULL) || (packet == NULL)) {
100084d6:	2800      	cmp	r0, #0
100084d8:	d00c      	beq.n	100084f4 <i2c_master_write_packet_wait+0x20>
100084da:	2900      	cmp	r1, #0
100084dc:	d00c      	beq.n	100084f8 <i2c_master_write_packet_wait+0x24>
		return STATUS_ERR_INVALID_ARG;
	}
#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job. */
	if (module->buffer_remaining > 0) {
100084de:	8a82      	ldrh	r2, [r0, #20]
100084e0:	b292      	uxth	r2, r2
		return STATUS_BUSY;
100084e2:	2305      	movs	r3, #5
	if ((module == NULL) || (packet == NULL)) {
		return STATUS_ERR_INVALID_ARG;
	}
#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job. */
	if (module->buffer_remaining > 0) {
100084e4:	2a00      	cmp	r2, #0
100084e6:	d108      	bne.n	100084fa <i2c_master_write_packet_wait+0x26>
		return STATUS_BUSY;
	}
#endif

	module->no_stop = false;
100084e8:	2300      	movs	r3, #0
100084ea:	7143      	strb	r3, [r0, #5]

	return _i2c_master_write_packet(module, packet);
100084ec:	4b04      	ldr	r3, [pc, #16]	; (10008500 <i2c_master_write_packet_wait+0x2c>)
100084ee:	4798      	blx	r3
100084f0:	1c03      	adds	r3, r0, #0
100084f2:	e002      	b.n	100084fa <i2c_master_write_packet_wait+0x26>
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	if ((module == NULL) || (packet == NULL)) {
		return STATUS_ERR_INVALID_ARG;
100084f4:	2317      	movs	r3, #23
100084f6:	e000      	b.n	100084fa <i2c_master_write_packet_wait+0x26>
100084f8:	2317      	movs	r3, #23
#endif

	module->no_stop = false;

	return _i2c_master_write_packet(module, packet);
}
100084fa:	1c18      	adds	r0, r3, #0
100084fc:	bd08      	pop	{r3, pc}
100084fe:	46c0      	nop			; (mov r8, r8)
10008500:	10008349 	.word	0x10008349

10008504 <i2c_master_write_packet_wait_no_stop>:
 * \retval STATUS_BUSY                  If module has a pending request.
 */
enum status_code i2c_master_write_packet_wait_no_stop(
		struct i2c_master_module *const module,
		struct i2c_master_packet *const packet)
{
10008504:	b508      	push	{r3, lr}
	/* Sanity check */
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	if((module == NULL) || (packet == NULL)) {
10008506:	2800      	cmp	r0, #0
10008508:	d00c      	beq.n	10008524 <i2c_master_write_packet_wait_no_stop+0x20>
1000850a:	2900      	cmp	r1, #0
1000850c:	d00c      	beq.n	10008528 <i2c_master_write_packet_wait_no_stop+0x24>
		return STATUS_ERR_INVALID_ARG;
	}
#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job */
	if (module->buffer_remaining > 0) {
1000850e:	8a82      	ldrh	r2, [r0, #20]
10008510:	b292      	uxth	r2, r2
		return STATUS_BUSY;
10008512:	2305      	movs	r3, #5
	if((module == NULL) || (packet == NULL)) {
		return STATUS_ERR_INVALID_ARG;
	}
#if I2C_MASTER_CALLBACK_MODE == true
	/* Check if the I2C module is busy with a job */
	if (module->buffer_remaining > 0) {
10008514:	2a00      	cmp	r2, #0
10008516:	d108      	bne.n	1000852a <i2c_master_write_packet_wait_no_stop+0x26>
		return STATUS_BUSY;
	}
#endif

	module->no_stop = true;
10008518:	3b04      	subs	r3, #4
1000851a:	7143      	strb	r3, [r0, #5]

	return _i2c_master_write_packet(module, packet);
1000851c:	4b04      	ldr	r3, [pc, #16]	; (10008530 <i2c_master_write_packet_wait_no_stop+0x2c>)
1000851e:	4798      	blx	r3
10008520:	1c03      	adds	r3, r0, #0
10008522:	e002      	b.n	1000852a <i2c_master_write_packet_wait_no_stop+0x26>
	Assert(module);
	Assert(module->hw);
	Assert(packet);

	if((module == NULL) || (packet == NULL)) {
		return STATUS_ERR_INVALID_ARG;
10008524:	2317      	movs	r3, #23
10008526:	e000      	b.n	1000852a <i2c_master_write_packet_wait_no_stop+0x26>
10008528:	2317      	movs	r3, #23
#endif

	module->no_stop = true;

	return _i2c_master_write_packet(module, packet);
}
1000852a:	1c18      	adds	r0, r3, #0
1000852c:	bd08      	pop	{r3, pc}
1000852e:	46c0      	nop			; (mov r8, r8)
10008530:	10008349 	.word	0x10008349

10008534 <_i2c_master_isr_handler>:

/**
 * Interrupt handler for I<SUP>2</SUP>C master.
 */
void _i2c_master_isr_handler(void)
{
10008534:	b570      	push	{r4, r5, r6, lr}
10008536:	b082      	sub	sp, #8
	/* Get software module for callback handling */
	struct i2c_master_module *module =
10008538:	4b57      	ldr	r3, [pc, #348]	; (10008698 <_i2c_master_isr_handler+0x164>)
1000853a:	681c      	ldr	r4, [r3, #0]
			(struct i2c_master_module*)_i2c_instances;

	Assert(module);

	I2C *const i2c_module = module->hw;
1000853c:	6826      	ldr	r6, [r4, #0]

	/* Combine callback registered and enabled masks */
	uint8_t callback_mask = module->enabled_callback &
1000853e:	7c63      	ldrb	r3, [r4, #17]
			module->registered_callback;
10008540:	7c25      	ldrb	r5, [r4, #16]
	Assert(module);

	I2C *const i2c_module = module->hw;

	/* Combine callback registered and enabled masks */
	uint8_t callback_mask = module->enabled_callback &
10008542:	401d      	ands	r5, r3
			module->registered_callback;

	if ((module->buffer_length <= 0) && (module->buffer_remaining > 0)) {
10008544:	8a63      	ldrh	r3, [r4, #18]
10008546:	b29b      	uxth	r3, r3
10008548:	2b00      	cmp	r3, #0
1000854a:	d107      	bne.n	1000855c <_i2c_master_isr_handler+0x28>
1000854c:	8aa3      	ldrh	r3, [r4, #20]
1000854e:	b29b      	uxth	r3, r3
10008550:	2b00      	cmp	r3, #0
10008552:	d003      	beq.n	1000855c <_i2c_master_isr_handler+0x28>
		module->buffer_length = module->buffer_remaining;
10008554:	8aa3      	ldrh	r3, [r4, #20]
10008556:	b29b      	uxth	r3, r3
10008558:	8263      	strh	r3, [r4, #18]
1000855a:	e04e      	b.n	100085fa <_i2c_master_isr_handler+0xc6>
	/* Check if buffer write is done */
	} else if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
1000855c:	8a63      	ldrh	r3, [r4, #18]
1000855e:	b29b      	uxth	r3, r3
10008560:	2b00      	cmp	r3, #0
10008562:	d019      	beq.n	10008598 <_i2c_master_isr_handler+0x64>
10008564:	8aa3      	ldrh	r3, [r4, #20]
10008566:	b29b      	uxth	r3, r3
10008568:	2b00      	cmp	r3, #0
1000856a:	d115      	bne.n	10008598 <_i2c_master_isr_handler+0x64>
			(module->status == STATUS_BUSY) &&
1000856c:	7f63      	ldrb	r3, [r4, #29]
			module->registered_callback;

	if ((module->buffer_length <= 0) && (module->buffer_remaining > 0)) {
		module->buffer_length = module->buffer_remaining;
	/* Check if buffer write is done */
	} else if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
1000856e:	2b05      	cmp	r3, #5
10008570:	d112      	bne.n	10008598 <_i2c_master_isr_handler+0x64>
			(module->status == STATUS_BUSY) &&
			(module->transfer_direction == I2C_TRANSFER_WRITE)) {
10008572:	7f23      	ldrb	r3, [r4, #28]

	if ((module->buffer_length <= 0) && (module->buffer_remaining > 0)) {
		module->buffer_length = module->buffer_remaining;
	/* Check if buffer write is done */
	} else if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
			(module->status == STATUS_BUSY) &&
10008574:	2b00      	cmp	r3, #0
10008576:	d10f      	bne.n	10008598 <_i2c_master_isr_handler+0x64>
			(module->transfer_direction == I2C_TRANSFER_WRITE)) {
		/* Disable write interrupt flag */
		i2c_module->TX_INTERRUPT_MASK.reg = 0;
10008578:	222c      	movs	r2, #44	; 0x2c
1000857a:	54b3      	strb	r3, [r6, r2]

		module->buffer_length = 0;
1000857c:	8263      	strh	r3, [r4, #18]
		module->status        = STATUS_OK;
1000857e:	7763      	strb	r3, [r4, #29]

		if (!module->no_stop) {
10008580:	7963      	ldrb	r3, [r4, #5]
10008582:	2b00      	cmp	r3, #0
10008584:	d102      	bne.n	1000858c <_i2c_master_isr_handler+0x58>
			/* Send stop condition */
			i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_0;
10008586:	2200      	movs	r2, #0
10008588:	3320      	adds	r3, #32
1000858a:	54f2      	strb	r2, [r6, r3]
		} 

		if (callback_mask & (1 << I2C_MASTER_CALLBACK_WRITE_COMPLETE)) {
1000858c:	07eb      	lsls	r3, r5, #31
1000858e:	d534      	bpl.n	100085fa <_i2c_master_isr_handler+0xc6>
			module->callbacks[I2C_MASTER_CALLBACK_WRITE_COMPLETE](module);
10008590:	68a3      	ldr	r3, [r4, #8]
10008592:	1c20      	adds	r0, r4, #0
10008594:	4798      	blx	r3
10008596:	e030      	b.n	100085fa <_i2c_master_isr_handler+0xc6>
		}

	/* Continue buffer write/read */
	} else if ((module->buffer_length > 0) && (module->buffer_remaining > 0)){
10008598:	8a63      	ldrh	r3, [r4, #18]
1000859a:	b29b      	uxth	r3, r3
1000859c:	2b00      	cmp	r3, #0
1000859e:	d02c      	beq.n	100085fa <_i2c_master_isr_handler+0xc6>
100085a0:	8aa3      	ldrh	r3, [r4, #20]
100085a2:	b29b      	uxth	r3, r3
100085a4:	2b00      	cmp	r3, #0
100085a6:	d028      	beq.n	100085fa <_i2c_master_isr_handler+0xc6>
		if (module->transfer_direction == I2C_TRANSFER_WRITE) {
100085a8:	7f23      	ldrb	r3, [r4, #28]
100085aa:	2b00      	cmp	r3, #0
100085ac:	d117      	bne.n	100085de <_i2c_master_isr_handler+0xaa>
	Assert(module->hw);

	I2C *const i2c_module = module->hw;

	/* Find index to get next byte in buffer */
	volatile uint16_t buffer_index = module->buffer_length - module->buffer_remaining;
100085ae:	8a63      	ldrh	r3, [r4, #18]
100085b0:	8aa2      	ldrh	r2, [r4, #20]
100085b2:	1a9b      	subs	r3, r3, r2
100085b4:	b29b      	uxth	r3, r3
100085b6:	466a      	mov	r2, sp
100085b8:	80d3      	strh	r3, [r2, #6]

	module->buffer_remaining--;
100085ba:	8aa3      	ldrh	r3, [r4, #20]
100085bc:	3b01      	subs	r3, #1
100085be:	b29b      	uxth	r3, r3
100085c0:	82a3      	strh	r3, [r4, #20]

	/* Write byte from buffer to slave */
	i2c_module->TRANSMIT_DATA.reg = module->buffer[buffer_index];
100085c2:	88d3      	ldrh	r3, [r2, #6]
100085c4:	69a2      	ldr	r2, [r4, #24]
100085c6:	4694      	mov	ip, r2
100085c8:	4463      	add	r3, ip
100085ca:	781b      	ldrb	r3, [r3, #0]
100085cc:	8033      	strh	r3, [r6, #0]
	
	if (module->buffer_remaining <= 0) {
100085ce:	8aa3      	ldrh	r3, [r4, #20]
100085d0:	b29b      	uxth	r3, r3
100085d2:	2b00      	cmp	r3, #0
100085d4:	d111      	bne.n	100085fa <_i2c_master_isr_handler+0xc6>
		i2c_module->TX_INTERRUPT_MASK.reg = I2C_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
100085d6:	2210      	movs	r2, #16
100085d8:	332c      	adds	r3, #44	; 0x2c
100085da:	54f2      	strb	r2, [r6, r3]
100085dc:	e00d      	b.n	100085fa <_i2c_master_isr_handler+0xc6>
	Assert(module->hw);

	I2C *const i2c_module = module->hw;

	/* Find index to save next value in buffer */
	uint16_t buffer_index = module->buffer_length - module->buffer_remaining;
100085de:	8a63      	ldrh	r3, [r4, #18]
100085e0:	8aa1      	ldrh	r1, [r4, #20]

	module->buffer_remaining--;
100085e2:	8aa2      	ldrh	r2, [r4, #20]
100085e4:	3a01      	subs	r2, #1
100085e6:	b292      	uxth	r2, r2
100085e8:	82a2      	strh	r2, [r4, #20]
	Assert(module->hw);

	I2C *const i2c_module = module->hw;

	/* Find index to save next value in buffer */
	uint16_t buffer_index = module->buffer_length - module->buffer_remaining;
100085ea:	1a5b      	subs	r3, r3, r1

	module->buffer_remaining--;

	module->buffer[buffer_index] = i2c_module->RECEIVE_DATA.reg;
100085ec:	b29b      	uxth	r3, r3
100085ee:	69a2      	ldr	r2, [r4, #24]
100085f0:	4694      	mov	ip, r2
100085f2:	4463      	add	r3, ip
100085f4:	7932      	ldrb	r2, [r6, #4]
100085f6:	b2d2      	uxtb	r2, r2
100085f8:	701a      	strb	r2, [r3, #0]
			_i2c_master_read(module);
		}
	}

	/* Check if read buffer transfer is complete */
	if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
100085fa:	8a63      	ldrh	r3, [r4, #18]
100085fc:	b29b      	uxth	r3, r3
100085fe:	2b00      	cmp	r3, #0
10008600:	d01c      	beq.n	1000863c <_i2c_master_isr_handler+0x108>
10008602:	8aa3      	ldrh	r3, [r4, #20]
10008604:	b29b      	uxth	r3, r3
10008606:	2b00      	cmp	r3, #0
10008608:	d118      	bne.n	1000863c <_i2c_master_isr_handler+0x108>
			(module->status == STATUS_BUSY) &&
1000860a:	7f63      	ldrb	r3, [r4, #29]
			_i2c_master_read(module);
		}
	}

	/* Check if read buffer transfer is complete */
	if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
1000860c:	2b05      	cmp	r3, #5
1000860e:	d115      	bne.n	1000863c <_i2c_master_isr_handler+0x108>
			(module->status == STATUS_BUSY) &&
			(module->transfer_direction == I2C_TRANSFER_READ)) {
10008610:	7f23      	ldrb	r3, [r4, #28]
		}
	}

	/* Check if read buffer transfer is complete */
	if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
			(module->status == STATUS_BUSY) &&
10008612:	2b01      	cmp	r3, #1
10008614:	d112      	bne.n	1000863c <_i2c_master_isr_handler+0x108>
			(module->transfer_direction == I2C_TRANSFER_READ)) {
		/* Disable read interrupt flag */
		i2c_module->RX_INTERRUPT_MASK.reg = 0;
10008616:	2300      	movs	r3, #0
10008618:	2230      	movs	r2, #48	; 0x30
1000861a:	54b3      	strb	r3, [r6, r2]

		module->buffer_length = 0;
1000861c:	8263      	strh	r3, [r4, #18]
		module->status        = STATUS_OK;
1000861e:	7763      	strb	r3, [r4, #29]

		if (!module->no_stop) {
10008620:	7963      	ldrb	r3, [r4, #5]
10008622:	2b00      	cmp	r3, #0
10008624:	d102      	bne.n	1000862c <_i2c_master_isr_handler+0xf8>
			/* Send stop condition */
			i2c_module->I2C_ONBUS.reg = I2C_I2C_ONBUS_ONBUS_ENABLE_0;
10008626:	2200      	movs	r2, #0
10008628:	3320      	adds	r3, #32
1000862a:	54f2      	strb	r2, [r6, r3]
		}
		
		if ((callback_mask & (1 << I2C_MASTER_CALLBACK_READ_COMPLETE))
1000862c:	07ab      	lsls	r3, r5, #30
1000862e:	d505      	bpl.n	1000863c <_i2c_master_isr_handler+0x108>
				&& (module->transfer_direction == I2C_TRANSFER_READ)) {
10008630:	7f23      	ldrb	r3, [r4, #28]
10008632:	2b01      	cmp	r3, #1
10008634:	d102      	bne.n	1000863c <_i2c_master_isr_handler+0x108>
			module->callbacks[I2C_MASTER_CALLBACK_READ_COMPLETE](module);
10008636:	68e3      	ldr	r3, [r4, #12]
10008638:	1c20      	adds	r0, r4, #0
1000863a:	4798      	blx	r3
		}
	}
	if (module->transfer_direction == I2C_TRANSFER_READ) {
1000863c:	7f23      	ldrb	r3, [r4, #28]
1000863e:	2b01      	cmp	r3, #1
10008640:	d114      	bne.n	1000866c <_i2c_master_isr_handler+0x138>
		if (module->hw == I2C0) {
10008642:	6823      	ldr	r3, [r4, #0]
10008644:	4a15      	ldr	r2, [pc, #84]	; (1000869c <_i2c_master_isr_handler+0x168>)
10008646:	4293      	cmp	r3, r2
10008648:	d106      	bne.n	10008658 <_i2c_master_isr_handler+0x124>

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
1000864a:	2180      	movs	r1, #128	; 0x80
1000864c:	0049      	lsls	r1, r1, #1
1000864e:	23c0      	movs	r3, #192	; 0xc0
10008650:	005b      	lsls	r3, r3, #1
10008652:	4a13      	ldr	r2, [pc, #76]	; (100086a0 <_i2c_master_isr_handler+0x16c>)
10008654:	50d1      	str	r1, [r2, r3]
10008656:	e01d      	b.n	10008694 <_i2c_master_isr_handler+0x160>
			NVIC_ClearPendingIRQ(I2C0_RX_IRQn);
		} else if (module->hw == I2C1) {
10008658:	4a12      	ldr	r2, [pc, #72]	; (100086a4 <_i2c_master_isr_handler+0x170>)
1000865a:	4293      	cmp	r3, r2
1000865c:	d11a      	bne.n	10008694 <_i2c_master_isr_handler+0x160>
1000865e:	2180      	movs	r1, #128	; 0x80
10008660:	00c9      	lsls	r1, r1, #3
10008662:	23c0      	movs	r3, #192	; 0xc0
10008664:	005b      	lsls	r3, r3, #1
10008666:	4a0e      	ldr	r2, [pc, #56]	; (100086a0 <_i2c_master_isr_handler+0x16c>)
10008668:	50d1      	str	r1, [r2, r3]
1000866a:	e013      	b.n	10008694 <_i2c_master_isr_handler+0x160>
			NVIC_ClearPendingIRQ(I2C1_RX_IRQn);
		} 
	} else {
		if (module->hw == I2C0) {
1000866c:	6823      	ldr	r3, [r4, #0]
1000866e:	4a0b      	ldr	r2, [pc, #44]	; (1000869c <_i2c_master_isr_handler+0x168>)
10008670:	4293      	cmp	r3, r2
10008672:	d106      	bne.n	10008682 <_i2c_master_isr_handler+0x14e>
10008674:	2180      	movs	r1, #128	; 0x80
10008676:	0089      	lsls	r1, r1, #2
10008678:	23c0      	movs	r3, #192	; 0xc0
1000867a:	005b      	lsls	r3, r3, #1
1000867c:	4a08      	ldr	r2, [pc, #32]	; (100086a0 <_i2c_master_isr_handler+0x16c>)
1000867e:	50d1      	str	r1, [r2, r3]
10008680:	e008      	b.n	10008694 <_i2c_master_isr_handler+0x160>
			NVIC_ClearPendingIRQ(I2C0_TX_IRQn);
		} else if (module->hw == I2C1) {
10008682:	4a08      	ldr	r2, [pc, #32]	; (100086a4 <_i2c_master_isr_handler+0x170>)
10008684:	4293      	cmp	r3, r2
10008686:	d105      	bne.n	10008694 <_i2c_master_isr_handler+0x160>
10008688:	2180      	movs	r1, #128	; 0x80
1000868a:	0109      	lsls	r1, r1, #4
1000868c:	23c0      	movs	r3, #192	; 0xc0
1000868e:	005b      	lsls	r3, r3, #1
10008690:	4a03      	ldr	r2, [pc, #12]	; (100086a0 <_i2c_master_isr_handler+0x16c>)
10008692:	50d1      	str	r1, [r2, r3]
			NVIC_ClearPendingIRQ(I2C1_TX_IRQn);
		}
	}
}
10008694:	b002      	add	sp, #8
10008696:	bd70      	pop	{r4, r5, r6, pc}
10008698:	1000ec64 	.word	0x1000ec64
1000869c:	40003000 	.word	0x40003000
100086a0:	e000e100 	.word	0xe000e100
100086a4:	40003400 	.word	0x40003400

100086a8 <timer_get_config_defaults>:
 *
 * \param[out]  config  Pointer to a TIMER module configuration structure to set
 */
void timer_get_config_defaults(struct timer_config *config)
{
	config->reload_value = 0;
100086a8:	2300      	movs	r3, #0
100086aa:	6003      	str	r3, [r0, #0]
	config->interrupt_enable = true;
100086ac:	3301      	adds	r3, #1
100086ae:	7103      	strb	r3, [r0, #4]
}
100086b0:	4770      	bx	lr
100086b2:	46c0      	nop			; (mov r8, r8)

100086b4 <timer_clear_interrupt_status>:
 *
 * Clear the TIMER0 module interrupt status
 */
void timer_clear_interrupt_status(void)
{
	TIMER0->INTSTATUSCLEAR.reg = 1;
100086b4:	2201      	movs	r2, #1
100086b6:	2380      	movs	r3, #128	; 0x80
100086b8:	05db      	lsls	r3, r3, #23
100086ba:	731a      	strb	r2, [r3, #12]
	/* Wait for operation finish */
	while (TIMER0->INTSTATUSCLEAR.reg);
100086bc:	1c1a      	adds	r2, r3, #0
100086be:	7b13      	ldrb	r3, [r2, #12]
100086c0:	2b00      	cmp	r3, #0
100086c2:	d1fc      	bne.n	100086be <timer_clear_interrupt_status+0xa>
}
100086c4:	4770      	bx	lr
100086c6:	46c0      	nop			; (mov r8, r8)

100086c8 <timer_isr_handler>:
 *
 * Timer ISR handler.
 *
 */
static void timer_isr_handler(void)
{
100086c8:	b508      	push	{r3, lr}
 *
 * \retval The status of module
 */
uint32_t timer_get_interrupt_status(void)
{
	return TIMER0->INTSTATUSCLEAR.reg;
100086ca:	2380      	movs	r3, #128	; 0x80
100086cc:	05db      	lsls	r3, r3, #23
100086ce:	7b1b      	ldrb	r3, [r3, #12]
 * Timer ISR handler.
 *
 */
static void timer_isr_handler(void)
{
	if (timer_get_interrupt_status()) {
100086d0:	2b00      	cmp	r3, #0
100086d2:	d006      	beq.n	100086e2 <timer_isr_handler+0x1a>
		timer_clear_interrupt_status();
100086d4:	4b03      	ldr	r3, [pc, #12]	; (100086e4 <timer_isr_handler+0x1c>)
100086d6:	4798      	blx	r3
		
		if (timer_callback) {
100086d8:	4b03      	ldr	r3, [pc, #12]	; (100086e8 <timer_isr_handler+0x20>)
100086da:	681b      	ldr	r3, [r3, #0]
100086dc:	2b00      	cmp	r3, #0
100086de:	d000      	beq.n	100086e2 <timer_isr_handler+0x1a>
			timer_callback();
100086e0:	4798      	blx	r3
		}
	}
}
100086e2:	bd08      	pop	{r3, pc}
100086e4:	100086b5 	.word	0x100086b5
100086e8:	1000ec2c 	.word	0x1000ec2c

100086ec <timer_enable>:
 *
 * Enable the TIMER0 module
 */
void timer_enable(void)
{
	TIMER0->CTRL.reg |= TIMER_CTRL_ENABLE;
100086ec:	2280      	movs	r2, #128	; 0x80
100086ee:	05d2      	lsls	r2, r2, #23
100086f0:	7811      	ldrb	r1, [r2, #0]
100086f2:	2301      	movs	r3, #1
100086f4:	430b      	orrs	r3, r1
100086f6:	7013      	strb	r3, [r2, #0]
}
100086f8:	4770      	bx	lr
100086fa:	46c0      	nop			; (mov r8, r8)

100086fc <timer_register_callback>:
 *
 * \param[in]     callback_func Pointer to callback function
 */
void timer_register_callback(timer_callback_t fun)
{
	timer_callback = fun; 
100086fc:	4b01      	ldr	r3, [pc, #4]	; (10008704 <timer_register_callback+0x8>)
100086fe:	6018      	str	r0, [r3, #0]
}
10008700:	4770      	bx	lr
10008702:	46c0      	nop			; (mov r8, r8)
10008704:	1000ec2c 	.word	0x1000ec2c

10008708 <timer_init>:
 * \param[in]     config       Pointer to the TIMER configuration options struct
 *
 * \return Status of the initialization procedure.
 */
void timer_init(const struct timer_config *config)
{
10008708:	b510      	push	{r4, lr}
1000870a:	1c04      	adds	r4, r0, #0
	/* Global reset */
	system_peripheral_reset(PERIPHERAL_TIMER);
1000870c:	2006      	movs	r0, #6
1000870e:	4b09      	ldr	r3, [pc, #36]	; (10008734 <timer_init+0x2c>)
10008710:	4798      	blx	r3

	TIMER0->CTRL.reg = config->interrupt_enable << TIMER_CTRL_INTERRUPT_ENABLE_Pos;
10008712:	7923      	ldrb	r3, [r4, #4]
10008714:	00db      	lsls	r3, r3, #3
10008716:	b2db      	uxtb	r3, r3
10008718:	2280      	movs	r2, #128	; 0x80
1000871a:	05d2      	lsls	r2, r2, #23
1000871c:	7013      	strb	r3, [r2, #0]
	TIMER0->RELOAD.reg = config->reload_value;
1000871e:	6823      	ldr	r3, [r4, #0]
10008720:	6093      	str	r3, [r2, #8]
	
	timer_callback = NULL;
10008722:	2200      	movs	r2, #0
10008724:	4b04      	ldr	r3, [pc, #16]	; (10008738 <timer_init+0x30>)
10008726:	601a      	str	r2, [r3, #0]
	system_register_isr(RAM_ISR_TABLE_TIMER0_INDEX, (uint32_t)timer_isr_handler);
10008728:	202a      	movs	r0, #42	; 0x2a
1000872a:	4904      	ldr	r1, [pc, #16]	; (1000873c <timer_init+0x34>)
1000872c:	4b04      	ldr	r3, [pc, #16]	; (10008740 <timer_init+0x38>)
1000872e:	4798      	blx	r3
10008730:	bd10      	pop	{r4, pc}
10008732:	46c0      	nop			; (mov r8, r8)
10008734:	10008f49 	.word	0x10008f49
10008738:	1000ec2c 	.word	0x1000ec2c
1000873c:	100086c9 	.word	0x100086c9
10008740:	100093b1 	.word	0x100093b1

10008744 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
10008744:	b5f0      	push	{r4, r5, r6, r7, lr}
10008746:	4647      	mov	r7, r8
10008748:	b480      	push	{r7}
1000874a:	1c0c      	adds	r4, r1, #0
1000874c:	4690      	mov	r8, r2
	int nChars = 0;

	if (file != 0) {
1000874e:	2800      	cmp	r0, #0
10008750:	d110      	bne.n	10008774 <_read+0x30>
		return -1;
	}

	for (; len > 0; --len) {
10008752:	2a00      	cmp	r2, #0
10008754:	dd0a      	ble.n	1000876c <_read+0x28>
10008756:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
10008758:	4e09      	ldr	r6, [pc, #36]	; (10008780 <_read+0x3c>)
1000875a:	4d0a      	ldr	r5, [pc, #40]	; (10008784 <_read+0x40>)
1000875c:	6830      	ldr	r0, [r6, #0]
1000875e:	1c21      	adds	r1, r4, #0
10008760:	682b      	ldr	r3, [r5, #0]
10008762:	4798      	blx	r3
		ptr++;
10008764:	3401      	adds	r4, #1

	if (file != 0) {
		return -1;
	}

	for (; len > 0; --len) {
10008766:	42bc      	cmp	r4, r7
10008768:	d1f8      	bne.n	1000875c <_read+0x18>
1000876a:	e001      	b.n	10008770 <_read+0x2c>
1000876c:	2300      	movs	r3, #0
1000876e:	4698      	mov	r8, r3
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
10008770:	4640      	mov	r0, r8
10008772:	e001      	b.n	10008778 <_read+0x34>
_read (int file, char * ptr, int len)
{
	int nChars = 0;

	if (file != 0) {
		return -1;
10008774:	2001      	movs	r0, #1
10008776:	4240      	negs	r0, r0
		ptr_get(stdio_base, ptr);
		ptr++;
		nChars++;
	}
	return nChars;
}
10008778:	bc04      	pop	{r2}
1000877a:	4690      	mov	r8, r2
1000877c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000877e:	46c0      	nop			; (mov r8, r8)
10008780:	1000ec70 	.word	0x1000ec70
10008784:	1000ec68 	.word	0x1000ec68

10008788 <_write>:
int __attribute__((weak))
_write (int file, char * ptr, int len);

int __attribute__((weak))
_write (int file, char * ptr, int len)
{
10008788:	b5f0      	push	{r4, r5, r6, r7, lr}
1000878a:	4647      	mov	r7, r8
1000878c:	b480      	push	{r7}
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
1000878e:	3801      	subs	r0, #1
10008790:	2802      	cmp	r0, #2
10008792:	d815      	bhi.n	100087c0 <_write+0x38>
		return -1;
	}

	for (; len != 0; --len) {
10008794:	2a00      	cmp	r2, #0
10008796:	d010      	beq.n	100087ba <_write+0x32>
10008798:	1c15      	adds	r5, r2, #0
1000879a:	1c0e      	adds	r6, r1, #0
1000879c:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
1000879e:	4b0c      	ldr	r3, [pc, #48]	; (100087d0 <_write+0x48>)
100087a0:	4698      	mov	r8, r3
100087a2:	4f0c      	ldr	r7, [pc, #48]	; (100087d4 <_write+0x4c>)
100087a4:	4643      	mov	r3, r8
100087a6:	6818      	ldr	r0, [r3, #0]
100087a8:	5d31      	ldrb	r1, [r6, r4]
100087aa:	683b      	ldr	r3, [r7, #0]
100087ac:	4798      	blx	r3
100087ae:	2800      	cmp	r0, #0
100087b0:	db09      	blt.n	100087c6 <_write+0x3e>
			return -1;
		}
		++nChars;
100087b2:	3401      	adds	r4, #1

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
	}

	for (; len != 0; --len) {
100087b4:	42a5      	cmp	r5, r4
100087b6:	d1f5      	bne.n	100087a4 <_write+0x1c>
100087b8:	e000      	b.n	100087bc <_write+0x34>
100087ba:	2400      	movs	r4, #0
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
		}
		++nChars;
	}
	return nChars;
100087bc:	1c20      	adds	r0, r4, #0
100087be:	e004      	b.n	100087ca <_write+0x42>
_write (int file, char * ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
		return -1;
100087c0:	2001      	movs	r0, #1
100087c2:	4240      	negs	r0, r0
100087c4:	e001      	b.n	100087ca <_write+0x42>
	}

	for (; len != 0; --len) {
		if (ptr_put(stdio_base, *ptr++) < 0) {
			return -1;
100087c6:	2001      	movs	r0, #1
100087c8:	4240      	negs	r0, r0
		}
		++nChars;
	}
	return nChars;
}
100087ca:	bc04      	pop	{r2}
100087cc:	4690      	mov	r8, r2
100087ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
100087d0:	1000ec70 	.word	0x1000ec70
100087d4:	1000ec6c 	.word	0x1000ec6c

100087d8 <gpio_get_config_defaults>:
 *  \param[out] config  Configuration structure to initialize to default values.
 */
void gpio_get_config_defaults(struct gpio_config *const config)
{
	/* Default configuration values */
	config->direction  = GPIO_PIN_DIR_INPUT;
100087d8:	2300      	movs	r3, #0
100087da:	7003      	strb	r3, [r0, #0]
	config->input_pull = GPIO_PIN_PULL_UP;
100087dc:	2201      	movs	r2, #1
100087de:	7042      	strb	r2, [r0, #1]
	config->powersave  = false;
100087e0:	7083      	strb	r3, [r0, #2]
	config->aon_wakeup = false;
100087e2:	70c3      	strb	r3, [r0, #3]
}
100087e4:	4770      	bx	lr
100087e6:	46c0      	nop			; (mov r8, r8)

100087e8 <gpio_pin_set_config>:
 *  \retval STATUS_RESOURCE_NOT_AVAILABLE   Requested gpio is already in use.
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
100087e8:	b5f0      	push	{r4, r5, r6, r7, lr}
	* GPIO_0 & GPIO_1 are used for SWD.
	*/
	if ((gpio_pin == PIN_LP_GPIO_0) || \
		(gpio_pin == PIN_LP_GPIO_1))
	{
		status = STATUS_ERR_INVALID_ARG;
100087ea:	2317      	movs	r3, #23
	enum status_code status = STATUS_OK;

	/* Following GPIO's should never be modified by user.
	* GPIO_0 & GPIO_1 are used for SWD.
	*/
	if ((gpio_pin == PIN_LP_GPIO_0) || \
100087ec:	2801      	cmp	r0, #1
100087ee:	d800      	bhi.n	100087f2 <gpio_pin_set_config+0xa>
100087f0:	e0d0      	b.n	10008994 <gpio_pin_set_config+0x1ac>
		(gpio_pin == PIN_LP_GPIO_1))
	{
		status = STATUS_ERR_INVALID_ARG;
	} else {
		if (gpio_pin <= 7) {
100087f2:	2807      	cmp	r0, #7
100087f4:	d809      	bhi.n	1000880a <gpio_pin_set_config+0x22>
			LPMCU_MISC_REGS0->PINMUX_SEL_0.reg &= ~(7 << ((gpio_pin % 8) * 4));
100087f6:	4d68      	ldr	r5, [pc, #416]	; (10008998 <gpio_pin_set_config+0x1b0>)
100087f8:	6c6a      	ldr	r2, [r5, #68]	; 0x44
100087fa:	3b10      	subs	r3, #16
100087fc:	4003      	ands	r3, r0
100087fe:	009b      	lsls	r3, r3, #2
10008800:	2407      	movs	r4, #7
10008802:	409c      	lsls	r4, r3
10008804:	43a2      	bics	r2, r4
10008806:	646a      	str	r2, [r5, #68]	; 0x44
10008808:	e02c      	b.n	10008864 <gpio_pin_set_config+0x7c>
		} else if (gpio_pin <= 15) {
1000880a:	280f      	cmp	r0, #15
1000880c:	d809      	bhi.n	10008822 <gpio_pin_set_config+0x3a>
			LPMCU_MISC_REGS0->PINMUX_SEL_1.reg &= ~(7 << ((gpio_pin % 8) * 4));
1000880e:	4d62      	ldr	r5, [pc, #392]	; (10008998 <gpio_pin_set_config+0x1b0>)
10008810:	6caa      	ldr	r2, [r5, #72]	; 0x48
10008812:	2307      	movs	r3, #7
10008814:	4003      	ands	r3, r0
10008816:	009b      	lsls	r3, r3, #2
10008818:	2407      	movs	r4, #7
1000881a:	409c      	lsls	r4, r3
1000881c:	43a2      	bics	r2, r4
1000881e:	64aa      	str	r2, [r5, #72]	; 0x48
10008820:	e020      	b.n	10008864 <gpio_pin_set_config+0x7c>
		} else if (gpio_pin <= 23) {
10008822:	2817      	cmp	r0, #23
10008824:	d809      	bhi.n	1000883a <gpio_pin_set_config+0x52>
			LPMCU_MISC_REGS0->PINMUX_SEL_2.reg &= ~(7 << ((gpio_pin % 8) * 4));
10008826:	4d5c      	ldr	r5, [pc, #368]	; (10008998 <gpio_pin_set_config+0x1b0>)
10008828:	6cea      	ldr	r2, [r5, #76]	; 0x4c
1000882a:	2307      	movs	r3, #7
1000882c:	4003      	ands	r3, r0
1000882e:	009b      	lsls	r3, r3, #2
10008830:	2407      	movs	r4, #7
10008832:	409c      	lsls	r4, r3
10008834:	43a2      	bics	r2, r4
10008836:	64ea      	str	r2, [r5, #76]	; 0x4c
10008838:	e014      	b.n	10008864 <gpio_pin_set_config+0x7c>
		} else if (44 <= gpio_pin  && gpio_pin < 48) {
1000883a:	1c03      	adds	r3, r0, #0
1000883c:	3b2c      	subs	r3, #44	; 0x2c
1000883e:	2b03      	cmp	r3, #3
10008840:	d810      	bhi.n	10008864 <gpio_pin_set_config+0x7c>
			/* Set GPIO_MSx as digital mode */
			AON_GP_REGS0->MS_GPIO_MODE.vec.ANALOG_ENABLE_ &= ~(1 << (gpio_pin - PIN_GPIO_MS4));
10008842:	4d56      	ldr	r5, [pc, #344]	; (1000899c <gpio_pin_set_config+0x1b4>)
10008844:	2482      	movs	r4, #130	; 0x82
10008846:	00e4      	lsls	r4, r4, #3
10008848:	5d2b      	ldrb	r3, [r5, r4]
1000884a:	220f      	movs	r2, #15
1000884c:	4013      	ands	r3, r2
1000884e:	1c07      	adds	r7, r0, #0
10008850:	3f2c      	subs	r7, #44	; 0x2c
10008852:	2601      	movs	r6, #1
10008854:	40be      	lsls	r6, r7
10008856:	43b3      	bics	r3, r6
10008858:	401a      	ands	r2, r3
1000885a:	5d2b      	ldrb	r3, [r5, r4]
1000885c:	260f      	movs	r6, #15
1000885e:	43b3      	bics	r3, r6
10008860:	4313      	orrs	r3, r2
10008862:	552b      	strb	r3, [r5, r4]
		}
		
		if ((gpio_pin == PIN_AO_GPIO_0) || (gpio_pin == PIN_AO_GPIO_1) ||
10008864:	1c03      	adds	r3, r0, #0
10008866:	3b1d      	subs	r3, #29
10008868:	2b02      	cmp	r3, #2
1000886a:	d82a      	bhi.n	100088c2 <gpio_pin_set_config+0xda>
				(gpio_pin == PIN_AO_GPIO_2)) {
			/* Active Low, Always On Pull Enable Control */
			if (config->input_pull == GPIO_PIN_PULL_UP) {
1000886c:	784b      	ldrb	r3, [r1, #1]
1000886e:	2b01      	cmp	r3, #1
10008870:	d108      	bne.n	10008884 <gpio_pin_set_config+0x9c>
				AON_GP_REGS0->AON_PULL_ENABLE.reg &= ~(1 << (31 - gpio_pin));
10008872:	4d4a      	ldr	r5, [pc, #296]	; (1000899c <gpio_pin_set_config+0x1b4>)
10008874:	7d2b      	ldrb	r3, [r5, #20]
10008876:	221f      	movs	r2, #31
10008878:	1a14      	subs	r4, r2, r0
1000887a:	3a1e      	subs	r2, #30
1000887c:	40a2      	lsls	r2, r4
1000887e:	4393      	bics	r3, r2
10008880:	752b      	strb	r3, [r5, #20]
10008882:	e009      	b.n	10008898 <gpio_pin_set_config+0xb0>
			} else {
				AON_GP_REGS0->AON_PULL_ENABLE.reg |= 1 << (31 - gpio_pin);
10008884:	4d45      	ldr	r5, [pc, #276]	; (1000899c <gpio_pin_set_config+0x1b4>)
10008886:	7d2e      	ldrb	r6, [r5, #20]
10008888:	241f      	movs	r4, #31
1000888a:	1a24      	subs	r4, r4, r0
1000888c:	2201      	movs	r2, #1
1000888e:	1c13      	adds	r3, r2, #0
10008890:	40a3      	lsls	r3, r4
10008892:	4333      	orrs	r3, r6
10008894:	b2db      	uxtb	r3, r3
10008896:	752b      	strb	r3, [r5, #20]
			}
			if (config->aon_wakeup) {
10008898:	78ca      	ldrb	r2, [r1, #3]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
1000889a:	2300      	movs	r3, #0
			if (config->input_pull == GPIO_PIN_PULL_UP) {
				AON_GP_REGS0->AON_PULL_ENABLE.reg &= ~(1 << (31 - gpio_pin));
			} else {
				AON_GP_REGS0->AON_PULL_ENABLE.reg |= 1 << (31 - gpio_pin);
			}
			if (config->aon_wakeup) {
1000889c:	2a00      	cmp	r2, #0
1000889e:	d079      	beq.n	10008994 <gpio_pin_set_config+0x1ac>
				/* Enable AON_GPIO_x to be a wakeup MCU from sleep mode */
				AON_GP_REGS0->AON_PINMUX_SEL.reg |= 1 << (4 * (31 - gpio_pin));
100088a0:	493e      	ldr	r1, [pc, #248]	; (1000899c <gpio_pin_set_config+0x1b4>)
100088a2:	880b      	ldrh	r3, [r1, #0]
100088a4:	221f      	movs	r2, #31
100088a6:	1a10      	subs	r0, r2, r0
100088a8:	0080      	lsls	r0, r0, #2
100088aa:	3a1e      	subs	r2, #30
100088ac:	4082      	lsls	r2, r0
100088ae:	4313      	orrs	r3, r2
100088b0:	b29b      	uxth	r3, r3
100088b2:	800b      	strh	r3, [r1, #0]
				/* Enable AON_GPIO_x to wake up the BLE domain from sleep mode */
				AON_PWR_SEQ0->GPIO_WAKEUP_CTRL.bit.BLE_ENABLE = 1;
100088b4:	4a3a      	ldr	r2, [pc, #232]	; (100089a0 <gpio_pin_set_config+0x1b8>)
100088b6:	7811      	ldrb	r1, [r2, #0]
100088b8:	2302      	movs	r3, #2
100088ba:	430b      	orrs	r3, r1
100088bc:	7013      	strb	r3, [r2, #0]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
100088be:	2300      	movs	r3, #0
100088c0:	e068      	b.n	10008994 <gpio_pin_set_config+0x1ac>
				AON_GP_REGS0->AON_PINMUX_SEL.reg |= 1 << (4 * (31 - gpio_pin));
				/* Enable AON_GPIO_x to wake up the BLE domain from sleep mode */
				AON_PWR_SEQ0->GPIO_WAKEUP_CTRL.bit.BLE_ENABLE = 1;
			}
		} else {
			if(config->direction == GPIO_PIN_DIR_INPUT) {
100088c2:	780a      	ldrb	r2, [r1, #0]
100088c4:	2a00      	cmp	r2, #0
100088c6:	d143      	bne.n	10008950 <gpio_pin_set_config+0x168>
				if(gpio_pin < 16) {
100088c8:	280f      	cmp	r0, #15
100088ca:	d808      	bhi.n	100088de <gpio_pin_set_config+0xf6>
					GPIO0->OUTENCLR.reg = (1 << gpio_pin);
100088cc:	2301      	movs	r3, #1
100088ce:	4083      	lsls	r3, r0
100088d0:	b29b      	uxth	r3, r3
100088d2:	4a34      	ldr	r2, [pc, #208]	; (100089a4 <gpio_pin_set_config+0x1bc>)
100088d4:	8293      	strh	r3, [r2, #20]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
100088d6:	2300      	movs	r3, #0
					GPIO1->OUTENCLR.reg = (1 << (gpio_pin % 16));
				} else {
					GPIO2->OUTENCLR.reg = (1 << (gpio_pin % 16));
				}
				/* pull_enable. */
				if (gpio_pin < 32) {
100088d8:	281f      	cmp	r0, #31
100088da:	d85b      	bhi.n	10008994 <gpio_pin_set_config+0x1ac>
100088dc:	e012      	b.n	10008904 <gpio_pin_set_config+0x11c>
			}
		} else {
			if(config->direction == GPIO_PIN_DIR_INPUT) {
				if(gpio_pin < 16) {
					GPIO0->OUTENCLR.reg = (1 << gpio_pin);
				} else if (gpio_pin < 32){
100088de:	281f      	cmp	r0, #31
100088e0:	d807      	bhi.n	100088f2 <gpio_pin_set_config+0x10a>
					GPIO1->OUTENCLR.reg = (1 << (gpio_pin % 16));
100088e2:	230f      	movs	r3, #15
100088e4:	4003      	ands	r3, r0
100088e6:	2201      	movs	r2, #1
100088e8:	409a      	lsls	r2, r3
100088ea:	b293      	uxth	r3, r2
100088ec:	4a2e      	ldr	r2, [pc, #184]	; (100089a8 <gpio_pin_set_config+0x1c0>)
100088ee:	8293      	strh	r3, [r2, #20]
100088f0:	e008      	b.n	10008904 <gpio_pin_set_config+0x11c>
				} else {
					GPIO2->OUTENCLR.reg = (1 << (gpio_pin % 16));
100088f2:	230f      	movs	r3, #15
100088f4:	4018      	ands	r0, r3
100088f6:	3b0e      	subs	r3, #14
100088f8:	4083      	lsls	r3, r0
100088fa:	b298      	uxth	r0, r3
100088fc:	4b2b      	ldr	r3, [pc, #172]	; (100089ac <gpio_pin_set_config+0x1c4>)
100088fe:	8298      	strh	r0, [r3, #20]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10008900:	2300      	movs	r3, #0
10008902:	e047      	b.n	10008994 <gpio_pin_set_config+0x1ac>
				} else {
					GPIO2->OUTENCLR.reg = (1 << (gpio_pin % 16));
				}
				/* pull_enable. */
				if (gpio_pin < 32) {
					switch(config->input_pull) {
10008904:	784b      	ldrb	r3, [r1, #1]
10008906:	2b01      	cmp	r3, #1
10008908:	d00d      	beq.n	10008926 <gpio_pin_set_config+0x13e>
1000890a:	2b00      	cmp	r3, #0
1000890c:	d002      	beq.n	10008914 <gpio_pin_set_config+0x12c>
1000890e:	2b02      	cmp	r3, #2
10008910:	d011      	beq.n	10008936 <gpio_pin_set_config+0x14e>
10008912:	e03e      	b.n	10008992 <gpio_pin_set_config+0x1aa>
						case GPIO_PIN_PULL_NONE:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg |= (1 << gpio_pin);
10008914:	4920      	ldr	r1, [pc, #128]	; (10008998 <gpio_pin_set_config+0x1b0>)
10008916:	6d0b      	ldr	r3, [r1, #80]	; 0x50
10008918:	2201      	movs	r2, #1
1000891a:	4082      	lsls	r2, r0
1000891c:	1c10      	adds	r0, r2, #0
1000891e:	4318      	orrs	r0, r3
10008920:	6508      	str	r0, [r1, #80]	; 0x50
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10008922:	2300      	movs	r3, #0
				/* pull_enable. */
				if (gpio_pin < 32) {
					switch(config->input_pull) {
						case GPIO_PIN_PULL_NONE:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg |= (1 << gpio_pin);
							break;
10008924:	e036      	b.n	10008994 <gpio_pin_set_config+0x1ac>
						case GPIO_PIN_PULL_UP:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
10008926:	491c      	ldr	r1, [pc, #112]	; (10008998 <gpio_pin_set_config+0x1b0>)
10008928:	6d0b      	ldr	r3, [r1, #80]	; 0x50
1000892a:	2201      	movs	r2, #1
1000892c:	4082      	lsls	r2, r0
1000892e:	4393      	bics	r3, r2
10008930:	650b      	str	r3, [r1, #80]	; 0x50
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10008932:	2300      	movs	r3, #0
						case GPIO_PIN_PULL_NONE:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg |= (1 << gpio_pin);
							break;
						case GPIO_PIN_PULL_UP:
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
							break;
10008934:	e02e      	b.n	10008994 <gpio_pin_set_config+0x1ac>
						case GPIO_PIN_PULL_DOWN:
							/* Set R-Type */
							LPMCU_MISC_REGS0->RTYPE_PAD_0.reg |= (1 << gpio_pin);
10008936:	4b18      	ldr	r3, [pc, #96]	; (10008998 <gpio_pin_set_config+0x1b0>)
10008938:	6d59      	ldr	r1, [r3, #84]	; 0x54
1000893a:	2201      	movs	r2, #1
1000893c:	4082      	lsls	r2, r0
1000893e:	1c10      	adds	r0, r2, #0
10008940:	1c0a      	adds	r2, r1, #0
10008942:	4302      	orrs	r2, r0
10008944:	655a      	str	r2, [r3, #84]	; 0x54
							/* Set REN */
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
10008946:	6d1a      	ldr	r2, [r3, #80]	; 0x50
10008948:	4382      	bics	r2, r0
1000894a:	651a      	str	r2, [r3, #80]	; 0x50
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
1000894c:	2300      	movs	r3, #0
						case GPIO_PIN_PULL_DOWN:
							/* Set R-Type */
							LPMCU_MISC_REGS0->RTYPE_PAD_0.reg |= (1 << gpio_pin);
							/* Set REN */
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
							break;
1000894e:	e021      	b.n	10008994 <gpio_pin_set_config+0x1ac>
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10008950:	2300      	movs	r3, #0
						default:
							status = STATUS_ERR_INVALID_ARG;
							break;
					}
				}
			} else if(config->direction == GPIO_PIN_DIR_OUTPUT) {
10008952:	2a01      	cmp	r2, #1
10008954:	d11e      	bne.n	10008994 <gpio_pin_set_config+0x1ac>
				if (gpio_pin < 16) {
10008956:	280f      	cmp	r0, #15
10008958:	d806      	bhi.n	10008968 <gpio_pin_set_config+0x180>
					GPIO0->OUTENSET.reg = (1 << gpio_pin);
1000895a:	3301      	adds	r3, #1
1000895c:	4083      	lsls	r3, r0
1000895e:	b298      	uxth	r0, r3
10008960:	4b10      	ldr	r3, [pc, #64]	; (100089a4 <gpio_pin_set_config+0x1bc>)
10008962:	8218      	strh	r0, [r3, #16]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
10008964:	2300      	movs	r3, #0
10008966:	e015      	b.n	10008994 <gpio_pin_set_config+0x1ac>
					}
				}
			} else if(config->direction == GPIO_PIN_DIR_OUTPUT) {
				if (gpio_pin < 16) {
					GPIO0->OUTENSET.reg = (1 << gpio_pin);
				} else if (gpio_pin < 32) {
10008968:	281f      	cmp	r0, #31
1000896a:	d809      	bhi.n	10008980 <gpio_pin_set_config+0x198>
					GPIO1->OUTENSET.reg = (1 << (gpio_pin % 16));
1000896c:	230f      	movs	r3, #15
1000896e:	4018      	ands	r0, r3
10008970:	2201      	movs	r2, #1
10008972:	1c13      	adds	r3, r2, #0
10008974:	4083      	lsls	r3, r0
10008976:	b29b      	uxth	r3, r3
10008978:	4a0b      	ldr	r2, [pc, #44]	; (100089a8 <gpio_pin_set_config+0x1c0>)
1000897a:	8213      	strh	r3, [r2, #16]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
1000897c:	2300      	movs	r3, #0
1000897e:	e009      	b.n	10008994 <gpio_pin_set_config+0x1ac>
				if (gpio_pin < 16) {
					GPIO0->OUTENSET.reg = (1 << gpio_pin);
				} else if (gpio_pin < 32) {
					GPIO1->OUTENSET.reg = (1 << (gpio_pin % 16));
				} else {
					GPIO2->OUTENSET.reg = (1 << (gpio_pin % 16));
10008980:	230f      	movs	r3, #15
10008982:	4018      	ands	r0, r3
10008984:	3b0e      	subs	r3, #14
10008986:	4083      	lsls	r3, r0
10008988:	b298      	uxth	r0, r3
1000898a:	4b08      	ldr	r3, [pc, #32]	; (100089ac <gpio_pin_set_config+0x1c4>)
1000898c:	8218      	strh	r0, [r3, #16]
 *
 */
enum status_code gpio_pin_set_config(const uint8_t gpio_pin,
		const struct gpio_config *config)
{
	enum status_code status = STATUS_OK;
1000898e:	2300      	movs	r3, #0
10008990:	e000      	b.n	10008994 <gpio_pin_set_config+0x1ac>
							LPMCU_MISC_REGS0->RTYPE_PAD_0.reg |= (1 << gpio_pin);
							/* Set REN */
							LPMCU_MISC_REGS0->PULL_ENABLE.reg &= ~(1 << gpio_pin);
							break;
						default:
							status = STATUS_ERR_INVALID_ARG;
10008992:	2317      	movs	r3, #23
				}
			}
		}
	}
	return status;
}
10008994:	1c18      	adds	r0, r3, #0
10008996:	bdf0      	pop	{r4, r5, r6, r7, pc}
10008998:	4000b000 	.word	0x4000b000
1000899c:	4000f000 	.word	0x4000f000
100089a0:	4000e000 	.word	0x4000e000
100089a4:	40010000 	.word	0x40010000
100089a8:	40011000 	.word	0x40011000
100089ac:	40013000 	.word	0x40013000

100089b0 <gpio_pin_toggle_output_level>:
 *
 *  \param[in] gpio_pin  Index of the GPIO pin to toggle.
 */
void gpio_pin_toggle_output_level(const uint8_t gpio_pin)
{
	if (gpio_pin < 16) {
100089b0:	280f      	cmp	r0, #15
100089b2:	d808      	bhi.n	100089c6 <gpio_pin_toggle_output_level+0x16>
		GPIO0->DATAOUT.reg ^= (1 << gpio_pin);
100089b4:	4a10      	ldr	r2, [pc, #64]	; (100089f8 <gpio_pin_toggle_output_level+0x48>)
100089b6:	8891      	ldrh	r1, [r2, #4]
100089b8:	2301      	movs	r3, #1
100089ba:	4083      	lsls	r3, r0
100089bc:	1c18      	adds	r0, r3, #0
100089be:	4048      	eors	r0, r1
100089c0:	b280      	uxth	r0, r0
100089c2:	8090      	strh	r0, [r2, #4]
100089c4:	e016      	b.n	100089f4 <gpio_pin_toggle_output_level+0x44>
	} else if (gpio_pin < 32) {
100089c6:	281f      	cmp	r0, #31
100089c8:	d80a      	bhi.n	100089e0 <gpio_pin_toggle_output_level+0x30>
		GPIO1->DATAOUT.reg ^= (1 << (gpio_pin % 16));
100089ca:	4a0c      	ldr	r2, [pc, #48]	; (100089fc <gpio_pin_toggle_output_level+0x4c>)
100089cc:	8891      	ldrh	r1, [r2, #4]
100089ce:	230f      	movs	r3, #15
100089d0:	4018      	ands	r0, r3
100089d2:	3b0e      	subs	r3, #14
100089d4:	4083      	lsls	r3, r0
100089d6:	1c18      	adds	r0, r3, #0
100089d8:	4048      	eors	r0, r1
100089da:	b280      	uxth	r0, r0
100089dc:	8090      	strh	r0, [r2, #4]
100089de:	e009      	b.n	100089f4 <gpio_pin_toggle_output_level+0x44>
	} else {
		GPIO2->DATAOUT.reg ^= (1 << (gpio_pin % 16));
100089e0:	4a07      	ldr	r2, [pc, #28]	; (10008a00 <gpio_pin_toggle_output_level+0x50>)
100089e2:	8891      	ldrh	r1, [r2, #4]
100089e4:	230f      	movs	r3, #15
100089e6:	4018      	ands	r0, r3
100089e8:	3b0e      	subs	r3, #14
100089ea:	4083      	lsls	r3, r0
100089ec:	1c18      	adds	r0, r3, #0
100089ee:	4048      	eors	r0, r1
100089f0:	b280      	uxth	r0, r0
100089f2:	8090      	strh	r0, [r2, #4]
	}
}
100089f4:	4770      	bx	lr
100089f6:	46c0      	nop			; (mov r8, r8)
100089f8:	40010000 	.word	0x40010000
100089fc:	40011000 	.word	0x40011000
10008a00:	40013000 	.word	0x40013000

10008a04 <gpio_pinmux_cofiguration>:
 *
 *  \param[in] gpio_pin   Index of the GPIO pin to toggle.
 *  \param[in] pinmux_sel PINMUX selection.
 */
void gpio_pinmux_cofiguration(const uint8_t gpio_pin, uint16_t pinmux_sel)
{
10008a04:	b570      	push	{r4, r5, r6, lr}
	uint8_t megamux_sel = (pinmux_sel >> 8) & 0xFF;
10008a06:	0a0c      	lsrs	r4, r1, #8

	pinmux_sel &= 0xFF;
10008a08:	23ff      	movs	r3, #255	; 0xff
10008a0a:	4019      	ands	r1, r3

	if (gpio_pin <= 7) {
10008a0c:	2807      	cmp	r0, #7
10008a0e:	d835      	bhi.n	10008a7c <gpio_pinmux_cofiguration+0x78>
		LPMCU_MISC_REGS0->PINMUX_SEL_0.reg &= ~(7 << ((gpio_pin % 8) * 4));
10008a10:	4a51      	ldr	r2, [pc, #324]	; (10008b58 <gpio_pinmux_cofiguration+0x154>)
10008a12:	6c55      	ldr	r5, [r2, #68]	; 0x44
10008a14:	3bf8      	subs	r3, #248	; 0xf8
10008a16:	4003      	ands	r3, r0
10008a18:	009b      	lsls	r3, r3, #2
10008a1a:	2607      	movs	r6, #7
10008a1c:	409e      	lsls	r6, r3
10008a1e:	43b5      	bics	r5, r6
10008a20:	6455      	str	r5, [r2, #68]	; 0x44
		LPMCU_MISC_REGS0->PINMUX_SEL_0.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
10008a22:	6c55      	ldr	r5, [r2, #68]	; 0x44
10008a24:	1c0e      	adds	r6, r1, #0
10008a26:	409e      	lsls	r6, r3
10008a28:	1c33      	adds	r3, r6, #0
10008a2a:	432b      	orrs	r3, r5
10008a2c:	6453      	str	r3, [r2, #68]	; 0x44
		if (pinmux_sel == 0x01) {
10008a2e:	2901      	cmp	r1, #1
10008a30:	d000      	beq.n	10008a34 <gpio_pinmux_cofiguration+0x30>
10008a32:	e090      	b.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			if (gpio_pin <= 3) {
10008a34:	2803      	cmp	r0, #3
10008a36:	d810      	bhi.n	10008a5a <gpio_pinmux_cofiguration+0x56>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_0.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008a38:	1c11      	adds	r1, r2, #0
10008a3a:	22d0      	movs	r2, #208	; 0xd0
10008a3c:	0052      	lsls	r2, r2, #1
10008a3e:	588d      	ldr	r5, [r1, r2]
10008a40:	2303      	movs	r3, #3
10008a42:	4018      	ands	r0, r3
10008a44:	00c0      	lsls	r0, r0, #3
10008a46:	333c      	adds	r3, #60	; 0x3c
10008a48:	4083      	lsls	r3, r0
10008a4a:	439d      	bics	r5, r3
10008a4c:	508d      	str	r5, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_0.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008a4e:	588b      	ldr	r3, [r1, r2]
10008a50:	4084      	lsls	r4, r0
10008a52:	1c20      	adds	r0, r4, #0
10008a54:	4318      	orrs	r0, r3
10008a56:	5088      	str	r0, [r1, r2]
10008a58:	e07d      	b.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			} else if (gpio_pin <= 7) {
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_1.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008a5a:	493f      	ldr	r1, [pc, #252]	; (10008b58 <gpio_pinmux_cofiguration+0x154>)
10008a5c:	22d2      	movs	r2, #210	; 0xd2
10008a5e:	0052      	lsls	r2, r2, #1
10008a60:	588d      	ldr	r5, [r1, r2]
10008a62:	2303      	movs	r3, #3
10008a64:	4018      	ands	r0, r3
10008a66:	00c0      	lsls	r0, r0, #3
10008a68:	333c      	adds	r3, #60	; 0x3c
10008a6a:	4083      	lsls	r3, r0
10008a6c:	439d      	bics	r5, r3
10008a6e:	508d      	str	r5, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_1.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008a70:	588b      	ldr	r3, [r1, r2]
10008a72:	4084      	lsls	r4, r0
10008a74:	1c20      	adds	r0, r4, #0
10008a76:	4318      	orrs	r0, r3
10008a78:	5088      	str	r0, [r1, r2]
10008a7a:	e06c      	b.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			}
		}
	} else if (gpio_pin <= 15) {
10008a7c:	280f      	cmp	r0, #15
10008a7e:	d834      	bhi.n	10008aea <gpio_pinmux_cofiguration+0xe6>
		LPMCU_MISC_REGS0->PINMUX_SEL_1.reg &= ~(7 << ((gpio_pin % 8) * 4));
10008a80:	4a35      	ldr	r2, [pc, #212]	; (10008b58 <gpio_pinmux_cofiguration+0x154>)
10008a82:	6c95      	ldr	r5, [r2, #72]	; 0x48
10008a84:	2307      	movs	r3, #7
10008a86:	4003      	ands	r3, r0
10008a88:	009b      	lsls	r3, r3, #2
10008a8a:	2607      	movs	r6, #7
10008a8c:	409e      	lsls	r6, r3
10008a8e:	43b5      	bics	r5, r6
10008a90:	6495      	str	r5, [r2, #72]	; 0x48
		LPMCU_MISC_REGS0->PINMUX_SEL_1.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
10008a92:	6c95      	ldr	r5, [r2, #72]	; 0x48
10008a94:	1c0e      	adds	r6, r1, #0
10008a96:	409e      	lsls	r6, r3
10008a98:	1c33      	adds	r3, r6, #0
10008a9a:	432b      	orrs	r3, r5
10008a9c:	6493      	str	r3, [r2, #72]	; 0x48
		if (pinmux_sel == 0x01) {
10008a9e:	2901      	cmp	r1, #1
10008aa0:	d159      	bne.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			if (gpio_pin <= 11) {
10008aa2:	280b      	cmp	r0, #11
10008aa4:	d810      	bhi.n	10008ac8 <gpio_pinmux_cofiguration+0xc4>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_2.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008aa6:	1c11      	adds	r1, r2, #0
10008aa8:	22d4      	movs	r2, #212	; 0xd4
10008aaa:	0052      	lsls	r2, r2, #1
10008aac:	588d      	ldr	r5, [r1, r2]
10008aae:	2303      	movs	r3, #3
10008ab0:	4018      	ands	r0, r3
10008ab2:	00c0      	lsls	r0, r0, #3
10008ab4:	333c      	adds	r3, #60	; 0x3c
10008ab6:	4083      	lsls	r3, r0
10008ab8:	439d      	bics	r5, r3
10008aba:	508d      	str	r5, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_2.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008abc:	588b      	ldr	r3, [r1, r2]
10008abe:	4084      	lsls	r4, r0
10008ac0:	1c20      	adds	r0, r4, #0
10008ac2:	4318      	orrs	r0, r3
10008ac4:	5088      	str	r0, [r1, r2]
10008ac6:	e046      	b.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			} else if (gpio_pin <= 15) {
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_3.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008ac8:	4923      	ldr	r1, [pc, #140]	; (10008b58 <gpio_pinmux_cofiguration+0x154>)
10008aca:	22d6      	movs	r2, #214	; 0xd6
10008acc:	0052      	lsls	r2, r2, #1
10008ace:	588d      	ldr	r5, [r1, r2]
10008ad0:	2303      	movs	r3, #3
10008ad2:	4018      	ands	r0, r3
10008ad4:	00c0      	lsls	r0, r0, #3
10008ad6:	333c      	adds	r3, #60	; 0x3c
10008ad8:	4083      	lsls	r3, r0
10008ada:	439d      	bics	r5, r3
10008adc:	508d      	str	r5, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_3.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008ade:	588b      	ldr	r3, [r1, r2]
10008ae0:	4084      	lsls	r4, r0
10008ae2:	1c20      	adds	r0, r4, #0
10008ae4:	4318      	orrs	r0, r3
10008ae6:	5088      	str	r0, [r1, r2]
10008ae8:	e035      	b.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			}
		}
	} else if (gpio_pin <= 23) {
10008aea:	2817      	cmp	r0, #23
10008aec:	d833      	bhi.n	10008b56 <gpio_pinmux_cofiguration+0x152>
		LPMCU_MISC_REGS0->PINMUX_SEL_2.reg &= ~(7 << ((gpio_pin % 8) * 4));
10008aee:	4a1a      	ldr	r2, [pc, #104]	; (10008b58 <gpio_pinmux_cofiguration+0x154>)
10008af0:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
10008af2:	2307      	movs	r3, #7
10008af4:	4003      	ands	r3, r0
10008af6:	009b      	lsls	r3, r3, #2
10008af8:	2607      	movs	r6, #7
10008afa:	409e      	lsls	r6, r3
10008afc:	43b5      	bics	r5, r6
10008afe:	64d5      	str	r5, [r2, #76]	; 0x4c
		LPMCU_MISC_REGS0->PINMUX_SEL_2.reg |= (pinmux_sel << ((gpio_pin % 8)*4));
10008b00:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
10008b02:	1c0e      	adds	r6, r1, #0
10008b04:	409e      	lsls	r6, r3
10008b06:	1c33      	adds	r3, r6, #0
10008b08:	432b      	orrs	r3, r5
10008b0a:	64d3      	str	r3, [r2, #76]	; 0x4c
		if (pinmux_sel == 0x01) {
10008b0c:	2901      	cmp	r1, #1
10008b0e:	d122      	bne.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			if (gpio_pin <= 19) {
10008b10:	2813      	cmp	r0, #19
10008b12:	d810      	bhi.n	10008b36 <gpio_pinmux_cofiguration+0x132>
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_4.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008b14:	1c11      	adds	r1, r2, #0
10008b16:	22d8      	movs	r2, #216	; 0xd8
10008b18:	0052      	lsls	r2, r2, #1
10008b1a:	588d      	ldr	r5, [r1, r2]
10008b1c:	2303      	movs	r3, #3
10008b1e:	4018      	ands	r0, r3
10008b20:	00c0      	lsls	r0, r0, #3
10008b22:	333c      	adds	r3, #60	; 0x3c
10008b24:	4083      	lsls	r3, r0
10008b26:	439d      	bics	r5, r3
10008b28:	508d      	str	r5, [r1, r2]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_4.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008b2a:	588b      	ldr	r3, [r1, r2]
10008b2c:	4084      	lsls	r4, r0
10008b2e:	1c20      	adds	r0, r4, #0
10008b30:	4318      	orrs	r0, r3
10008b32:	5088      	str	r0, [r1, r2]
10008b34:	e00f      	b.n	10008b56 <gpio_pinmux_cofiguration+0x152>
			} else if (gpio_pin <= 23) {
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg &= ~(0x3F << ((gpio_pin % 4) * 8));
10008b36:	4a08      	ldr	r2, [pc, #32]	; (10008b58 <gpio_pinmux_cofiguration+0x154>)
10008b38:	23da      	movs	r3, #218	; 0xda
10008b3a:	005b      	lsls	r3, r3, #1
10008b3c:	58d1      	ldr	r1, [r2, r3]
10008b3e:	2503      	movs	r5, #3
10008b40:	4028      	ands	r0, r5
10008b42:	00c0      	lsls	r0, r0, #3
10008b44:	353c      	adds	r5, #60	; 0x3c
10008b46:	4085      	lsls	r5, r0
10008b48:	43a9      	bics	r1, r5
10008b4a:	50d1      	str	r1, [r2, r3]
				LPMCU_MISC_REGS0->MEGA_MUX_IO_SEL_5.reg |= (megamux_sel << ((gpio_pin % 4) * 8));
10008b4c:	58d1      	ldr	r1, [r2, r3]
10008b4e:	4084      	lsls	r4, r0
10008b50:	1c20      	adds	r0, r4, #0
10008b52:	4308      	orrs	r0, r1
10008b54:	50d0      	str	r0, [r2, r3]
			}
		}
	}
}
10008b56:	bd70      	pop	{r4, r5, r6, pc}
10008b58:	4000b000 	.word	0x4000b000

10008b5c <system_clock_config>:
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_clock_config(enum system_clock_resource resoure, \
				enum system_clock_freq freq)
{
	switch (resoure) {
10008b5c:	2801      	cmp	r0, #1
10008b5e:	d00d      	beq.n	10008b7c <system_clock_config+0x20>
10008b60:	2800      	cmp	r0, #0
10008b62:	d002      	beq.n	10008b6a <system_clock_config+0xe>
10008b64:	2802      	cmp	r0, #2
10008b66:	d01c      	beq.n	10008ba2 <system_clock_config+0x46>
10008b68:	e02e      	b.n	10008bc8 <system_clock_config+0x6c>
		case CLOCK_RESOURCE_XO_26_MHZ:
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
10008b6a:	4a18      	ldr	r2, [pc, #96]	; (10008bcc <system_clock_config+0x70>)
10008b6c:	6990      	ldr	r0, [r2, #24]
10008b6e:	230c      	movs	r3, #12
10008b70:	4303      	orrs	r3, r0
10008b72:	6193      	str	r3, [r2, #24]
					LPMCU_MISC_REGS_LPMCU_CONTROL_USE_BT26M_CLK | \
					LPMCU_MISC_REGS_LPMCU_CONTROL_USE_ARM_LP_CLK;
			system_clock_value = 26000000;
10008b74:	4a16      	ldr	r2, [pc, #88]	; (10008bd0 <system_clock_config+0x74>)
10008b76:	4b17      	ldr	r3, [pc, #92]	; (10008bd4 <system_clock_config+0x78>)
10008b78:	601a      	str	r2, [r3, #0]
			break;
10008b7a:	e01a      	b.n	10008bb2 <system_clock_config+0x56>

		case CLOCK_RESOURCE_LP_2_MHZ:
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
10008b7c:	4b13      	ldr	r3, [pc, #76]	; (10008bcc <system_clock_config+0x70>)
10008b7e:	6998      	ldr	r0, [r3, #24]
10008b80:	2208      	movs	r2, #8
10008b82:	4302      	orrs	r2, r0
10008b84:	619a      	str	r2, [r3, #24]
					LPMCU_MISC_REGS_LPMCU_CONTROL_USE_ARM_LP_CLK;
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg &= \
10008b86:	699a      	ldr	r2, [r3, #24]
10008b88:	2004      	movs	r0, #4
10008b8a:	4382      	bics	r2, r0
10008b8c:	619a      	str	r2, [r3, #24]
					~LPMCU_MISC_REGS_LPMCU_CONTROL_USE_BT26M_CLK;
			AON_GP_REGS0->AON_PMU_CTRL.reg |= \
10008b8e:	4a12      	ldr	r2, [pc, #72]	; (10008bd8 <system_clock_config+0x7c>)
10008b90:	6853      	ldr	r3, [r2, #4]
10008b92:	2080      	movs	r0, #128	; 0x80
10008b94:	0300      	lsls	r0, r0, #12
10008b96:	4303      	orrs	r3, r0
10008b98:	6053      	str	r3, [r2, #4]
					AON_GP_REGS_AON_PMU_CTRL_PMU_2MHZ_CLK_EN;
			system_clock_value = 2000000;
10008b9a:	4a10      	ldr	r2, [pc, #64]	; (10008bdc <system_clock_config+0x80>)
10008b9c:	4b0d      	ldr	r3, [pc, #52]	; (10008bd4 <system_clock_config+0x78>)
10008b9e:	601a      	str	r2, [r3, #0]
			break;
10008ba0:	e007      	b.n	10008bb2 <system_clock_config+0x56>

		case CLOCK_RESOURCE_RC_26_MHZ:
			LPMCU_MISC_REGS0->LPMCU_CONTROL.reg &= \
10008ba2:	4a0a      	ldr	r2, [pc, #40]	; (10008bcc <system_clock_config+0x70>)
10008ba4:	6993      	ldr	r3, [r2, #24]
10008ba6:	200c      	movs	r0, #12
10008ba8:	4383      	bics	r3, r0
10008baa:	6193      	str	r3, [r2, #24]
					~(LPMCU_MISC_REGS_LPMCU_CONTROL_USE_BT26M_CLK | \
					LPMCU_MISC_REGS_LPMCU_CONTROL_USE_ARM_LP_CLK);
			system_clock_value = 26000000;
10008bac:	4a08      	ldr	r2, [pc, #32]	; (10008bd0 <system_clock_config+0x74>)
10008bae:	4b09      	ldr	r3, [pc, #36]	; (10008bd4 <system_clock_config+0x78>)
10008bb0:	601a      	str	r2, [r3, #0]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg &= \
10008bb2:	4b06      	ldr	r3, [pc, #24]	; (10008bcc <system_clock_config+0x70>)
10008bb4:	699a      	ldr	r2, [r3, #24]
10008bb6:	2003      	movs	r0, #3
10008bb8:	4382      	bics	r2, r0
10008bba:	619a      	str	r2, [r3, #24]
		~LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL_Msk;
	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
10008bbc:	699a      	ldr	r2, [r3, #24]
		LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL(freq);
10008bbe:	4001      	ands	r1, r0
			return STATUS_ERR_INVALID_ARG;
	}

	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg &= \
		~LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL_Msk;
	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
10008bc0:	4311      	orrs	r1, r2
10008bc2:	6199      	str	r1, [r3, #24]
		LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL(freq);

	return STATUS_OK;
10008bc4:	2000      	movs	r0, #0
10008bc6:	e000      	b.n	10008bca <system_clock_config+0x6e>
					LPMCU_MISC_REGS_LPMCU_CONTROL_USE_ARM_LP_CLK);
			system_clock_value = 26000000;
			break;

		default:
			return STATUS_ERR_INVALID_ARG;
10008bc8:	2017      	movs	r0, #23
		~LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL_Msk;
	LPMCU_MISC_REGS0->LPMCU_CONTROL.reg |= \
		LPMCU_MISC_REGS_LPMCU_CONTROL_LPMCU_CLK_SEL(freq);

	return STATUS_OK;
}
10008bca:	4770      	bx	lr
10008bcc:	4000b000 	.word	0x4000b000
10008bd0:	018cba80 	.word	0x018cba80
10008bd4:	1000ec74 	.word	0x1000ec74
10008bd8:	4000f000 	.word	0x4000f000
10008bdc:	001e8480 	.word	0x001e8480

10008be0 <system_clock_get_value>:
 *
 * \return system clock value.
 */
uint32_t system_clock_get_value(void)
{
	return system_clock_value;
10008be0:	4b01      	ldr	r3, [pc, #4]	; (10008be8 <system_clock_get_value+0x8>)
10008be2:	6818      	ldr	r0, [r3, #0]
}
10008be4:	4770      	bx	lr
10008be6:	46c0      	nop			; (mov r8, r8)
10008be8:	1000ec74 	.word	0x1000ec74

10008bec <system_clock_peripheral_enable>:
 * \return Status of operation.
 * \retval STATUS_OK               Clock config correctly
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_clock_peripheral_enable(enum system_peripheral peripheral)
{
10008bec:	b500      	push	{lr}
	switch (peripheral) {
10008bee:	2835      	cmp	r0, #53	; 0x35
10008bf0:	d900      	bls.n	10008bf4 <system_clock_peripheral_enable+0x8>
10008bf2:	e1a2      	b.n	10008f3a <system_clock_peripheral_enable+0x34e>
10008bf4:	0080      	lsls	r0, r0, #2
10008bf6:	4bd2      	ldr	r3, [pc, #840]	; (10008f40 <system_clock_peripheral_enable+0x354>)
10008bf8:	581b      	ldr	r3, [r3, r0]
10008bfa:	469f      	mov	pc, r3
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008bfc:	4ad1      	ldr	r2, [pc, #836]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008bfe:	68d1      	ldr	r1, [r2, #12]
10008c00:	2302      	movs	r3, #2
10008c02:	430b      	orrs	r3, r1
10008c04:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c06:	2000      	movs	r0, #0
{
	switch (peripheral) {
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_SPIFLASH_CLK_EN;
		break;
10008c08:	e198      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c0a:	4ace      	ldr	r2, [pc, #824]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c0c:	68d1      	ldr	r1, [r2, #12]
10008c0e:	2304      	movs	r3, #4
10008c10:	430b      	orrs	r3, r1
10008c12:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c14:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CORTUS_SPI0_CORE_CLK_EN;
		break;
10008c16:	e191      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c18:	4aca      	ldr	r2, [pc, #808]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c1a:	68d1      	ldr	r1, [r2, #12]
10008c1c:	2308      	movs	r3, #8
10008c1e:	430b      	orrs	r3, r1
10008c20:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c22:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CORTUS_SPI1_CORE_CLK_EN;
		break;
10008c24:	e18a      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c26:	4ac7      	ldr	r2, [pc, #796]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c28:	68d1      	ldr	r1, [r2, #12]
10008c2a:	2310      	movs	r3, #16
10008c2c:	430b      	orrs	r3, r1
10008c2e:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c30:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CORTUS_I2C0_CORE_CLK_EN;
		break;
10008c32:	e183      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c34:	4ac3      	ldr	r2, [pc, #780]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c36:	68d1      	ldr	r1, [r2, #12]
10008c38:	2320      	movs	r3, #32
10008c3a:	430b      	orrs	r3, r1
10008c3c:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c3e:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_DUALTIMER_CLK_EN;
		break;
10008c40:	e17c      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c42:	4ac0      	ldr	r2, [pc, #768]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c44:	68d1      	ldr	r1, [r2, #12]
10008c46:	2380      	movs	r3, #128	; 0x80
10008c48:	430b      	orrs	r3, r1
10008c4a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c4c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_GPIO_CLK_EN;
		break;
10008c4e:	e175      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c50:	4abc      	ldr	r2, [pc, #752]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c52:	68d3      	ldr	r3, [r2, #12]
10008c54:	2180      	movs	r1, #128	; 0x80
10008c56:	0049      	lsls	r1, r1, #1
10008c58:	430b      	orrs	r3, r1
10008c5a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c5c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_COUNTER_0_CLK_EN;
		break;
10008c5e:	e16d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c60:	4ab8      	ldr	r2, [pc, #736]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c62:	68d3      	ldr	r3, [r2, #12]
10008c64:	2180      	movs	r1, #128	; 0x80
10008c66:	0109      	lsls	r1, r1, #4
10008c68:	430b      	orrs	r3, r1
10008c6a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c6c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WATCHDOG_0_CLK_EN;
		break;
10008c6e:	e165      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c70:	4ab4      	ldr	r2, [pc, #720]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c72:	68d3      	ldr	r3, [r2, #12]
10008c74:	2180      	movs	r1, #128	; 0x80
10008c76:	0149      	lsls	r1, r1, #5
10008c78:	430b      	orrs	r3, r1
10008c7a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c7c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_WATCHDOG_1_CLK_EN;
		break;
10008c7e:	e15d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c80:	4ab0      	ldr	r2, [pc, #704]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c82:	68d3      	ldr	r3, [r2, #12]
10008c84:	2180      	movs	r1, #128	; 0x80
10008c86:	0189      	lsls	r1, r1, #6
10008c88:	430b      	orrs	r3, r1
10008c8a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c8c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART_CORE_CLK_EN;
		break;
10008c8e:	e155      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008c90:	4aac      	ldr	r2, [pc, #688]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008c92:	68d3      	ldr	r3, [r2, #12]
10008c94:	2180      	movs	r1, #128	; 0x80
10008c96:	01c9      	lsls	r1, r1, #7
10008c98:	430b      	orrs	r3, r1
10008c9a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008c9c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART_IF_CLK_EN;
		break;
10008c9e:	e14d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008ca0:	4aa8      	ldr	r2, [pc, #672]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008ca2:	68d3      	ldr	r3, [r2, #12]
10008ca4:	2180      	movs	r1, #128	; 0x80
10008ca6:	0209      	lsls	r1, r1, #8
10008ca8:	430b      	orrs	r3, r1
10008caa:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008cac:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART_1_CORE_CLK_EN;
		break;
10008cae:	e145      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008cb0:	4aa4      	ldr	r2, [pc, #656]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008cb2:	68d3      	ldr	r3, [r2, #12]
10008cb4:	2180      	movs	r1, #128	; 0x80
10008cb6:	0249      	lsls	r1, r1, #9
10008cb8:	430b      	orrs	r3, r1
10008cba:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008cbc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_UART_1_IF_CLK_EN;
		break;
10008cbe:	e13d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008cc0:	4aa0      	ldr	r2, [pc, #640]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008cc2:	68d3      	ldr	r3, [r2, #12]
10008cc4:	2180      	movs	r1, #128	; 0x80
10008cc6:	0289      	lsls	r1, r1, #10
10008cc8:	430b      	orrs	r3, r1
10008cca:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008ccc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IRQ_CTRLR_CORE_CLK_EN;
		break;
10008cce:	e135      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008cd0:	4a9c      	ldr	r2, [pc, #624]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008cd2:	68d3      	ldr	r3, [r2, #12]
10008cd4:	2180      	movs	r1, #128	; 0x80
10008cd6:	02c9      	lsls	r1, r1, #11
10008cd8:	430b      	orrs	r3, r1
10008cda:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008cdc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_1_GL_MEM_CLK_EN;
		break;
10008cde:	e12d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008ce0:	4a98      	ldr	r2, [pc, #608]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008ce2:	68d3      	ldr	r3, [r2, #12]
10008ce4:	2180      	movs	r1, #128	; 0x80
10008ce6:	0309      	lsls	r1, r1, #12
10008ce8:	430b      	orrs	r3, r1
10008cea:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008cec:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_IDRAM_2_GL_MEM_CLK_EN;
		break;
10008cee:	e125      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ROM:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008cf0:	4a94      	ldr	r2, [pc, #592]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008cf2:	68d3      	ldr	r3, [r2, #12]
10008cf4:	2180      	movs	r1, #128	; 0x80
10008cf6:	0349      	lsls	r1, r1, #13
10008cf8:	430b      	orrs	r3, r1
10008cfa:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008cfc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ROM:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ROM_MEM_CLK_EN;
		break;
10008cfe:	e11d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_LOW_POWER_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d00:	4a90      	ldr	r2, [pc, #576]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d02:	68d3      	ldr	r3, [r2, #12]
10008d04:	2180      	movs	r1, #128	; 0x80
10008d06:	0389      	lsls	r1, r1, #14
10008d08:	430b      	orrs	r3, r1
10008d0a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d0c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_LOW_POWER_IF:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_XBAR_IF_CLK_EN;
		break;
10008d0e:	e115      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_AON_WRAPPER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d10:	4a8c      	ldr	r2, [pc, #560]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d12:	68d3      	ldr	r3, [r2, #12]
10008d14:	2180      	movs	r1, #128	; 0x80
10008d16:	03c9      	lsls	r1, r1, #15
10008d18:	430b      	orrs	r3, r1
10008d1a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d1c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AON_WRAPPER:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_AON_WRAPPER_CLK_EN;
		break;
10008d1e:	e10d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ARM_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d20:	4a88      	ldr	r2, [pc, #544]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d22:	68d3      	ldr	r3, [r2, #12]
10008d24:	2180      	movs	r1, #128	; 0x80
10008d26:	0409      	lsls	r1, r1, #16
10008d28:	430b      	orrs	r3, r1
10008d2a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d2c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLK_EN;
		break;
10008d2e:	e105      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ARM_GATED_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d30:	4a84      	ldr	r2, [pc, #528]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d32:	68d3      	ldr	r3, [r2, #12]
10008d34:	2180      	movs	r1, #128	; 0x80
10008d36:	0449      	lsls	r1, r1, #17
10008d38:	430b      	orrs	r3, r1
10008d3a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d3c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_GATED_PCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_ARM_PCLKG_EN;
		break;
10008d3e:	e0fd      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ARM_BLE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d40:	4a80      	ldr	r2, [pc, #512]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d42:	68d3      	ldr	r3, [r2, #12]
10008d44:	2180      	movs	r1, #128	; 0x80
10008d46:	0489      	lsls	r1, r1, #18
10008d48:	430b      	orrs	r3, r1
10008d4a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d4c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ARM_BLE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_BLE_MEM_CLK_EN;
		break;
10008d4e:	e0f5      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d50:	4a7c      	ldr	r2, [pc, #496]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d52:	68d3      	ldr	r3, [r2, #12]
10008d54:	2180      	movs	r1, #128	; 0x80
10008d56:	04c9      	lsls	r1, r1, #19
10008d58:	430b      	orrs	r3, r1
10008d5a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d5c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC_1_CLK_EN;
		break;
10008d5e:	e0ed      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d60:	4a78      	ldr	r2, [pc, #480]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d62:	68d3      	ldr	r3, [r2, #12]
10008d64:	2180      	movs	r1, #128	; 0x80
10008d66:	0509      	lsls	r1, r1, #20
10008d68:	430b      	orrs	r3, r1
10008d6a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d6c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC_2_CLK_EN;
		break;
10008d6e:	e0e5      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_QDEC3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d70:	4a74      	ldr	r2, [pc, #464]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d72:	68d3      	ldr	r3, [r2, #12]
10008d74:	2180      	movs	r1, #128	; 0x80
10008d76:	0549      	lsls	r1, r1, #21
10008d78:	430b      	orrs	r3, r1
10008d7a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d7c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_QDEC3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_QUAD_DEC_3_CLK_EN;
		break;
10008d7e:	e0dd      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d80:	4a70      	ldr	r2, [pc, #448]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d82:	68d3      	ldr	r3, [r2, #12]
10008d84:	2180      	movs	r1, #128	; 0x80
10008d86:	0589      	lsls	r1, r1, #22
10008d88:	430b      	orrs	r3, r1
10008d8a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d8c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CORTUS_I2C1_CORE_CLK_EN;
		break;
10008d8e:	e0d5      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
10008d90:	4a6c      	ldr	r2, [pc, #432]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008d92:	68d3      	ldr	r3, [r2, #12]
10008d94:	2180      	movs	r1, #128	; 0x80
10008d96:	05c9      	lsls	r1, r1, #23
10008d98:	430b      	orrs	r3, r1
10008d9a:	60d3      	str	r3, [r2, #12]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008d9c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_0_CALIB_CLK_EN;
		break;
10008d9e:	e0cd      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008da0:	4a68      	ldr	r2, [pc, #416]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008da2:	6911      	ldr	r1, [r2, #16]
10008da4:	2301      	movs	r3, #1
10008da6:	430b      	orrs	r3, r1
10008da8:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008daa:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE_1_CLK_EN;
		break;
10008dac:	e0c6      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008dae:	4a65      	ldr	r2, [pc, #404]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008db0:	6911      	ldr	r1, [r2, #16]
10008db2:	2302      	movs	r3, #2
10008db4:	430b      	orrs	r3, r1
10008db6:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008db8:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE_2_CLK_EN;
		break;
10008dba:	e0bf      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008dbc:	4a61      	ldr	r2, [pc, #388]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008dbe:	6911      	ldr	r1, [r2, #16]
10008dc0:	2304      	movs	r3, #4
10008dc2:	430b      	orrs	r3, r1
10008dc4:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008dc6:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE_3_CLK_EN;
		break;
10008dc8:	e0b8      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008dca:	4a5e      	ldr	r2, [pc, #376]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008dcc:	6911      	ldr	r1, [r2, #16]
10008dce:	2308      	movs	r3, #8
10008dd0:	430b      	orrs	r3, r1
10008dd2:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008dd4:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE_4_CLK_EN;
		break;
10008dd6:	e0b1      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE5:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008dd8:	4a5a      	ldr	r2, [pc, #360]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008dda:	6911      	ldr	r1, [r2, #16]
10008ddc:	2310      	movs	r3, #16
10008dde:	430b      	orrs	r3, r1
10008de0:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008de2:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE5:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE_5_CLK_EN;
		break;
10008de4:	e0aa      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_EFUSE6:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008de6:	4a57      	ldr	r2, [pc, #348]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008de8:	6911      	ldr	r1, [r2, #16]
10008dea:	2320      	movs	r3, #32
10008dec:	430b      	orrs	r3, r1
10008dee:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008df0:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_EFUSE6:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_EFUSE_6_CLK_EN;
		break;
10008df2:	e0a3      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008df4:	4a53      	ldr	r2, [pc, #332]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008df6:	6911      	ldr	r1, [r2, #16]
10008df8:	2340      	movs	r3, #64	; 0x40
10008dfa:	430b      	orrs	r3, r1
10008dfc:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008dfe:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM_1_CLK_EN;
		break;
10008e00:	e09c      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e02:	4a50      	ldr	r2, [pc, #320]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e04:	6911      	ldr	r1, [r2, #16]
10008e06:	2380      	movs	r3, #128	; 0x80
10008e08:	430b      	orrs	r3, r1
10008e0a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e0c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM_2_CLK_EN;
		break;
10008e0e:	e095      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e10:	4a4c      	ldr	r2, [pc, #304]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e12:	6913      	ldr	r3, [r2, #16]
10008e14:	2180      	movs	r1, #128	; 0x80
10008e16:	0049      	lsls	r1, r1, #1
10008e18:	430b      	orrs	r3, r1
10008e1a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e1c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM_3_CLK_EN;
		break;
10008e1e:	e08d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_PWM4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e20:	4a48      	ldr	r2, [pc, #288]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e22:	6913      	ldr	r3, [r2, #16]
10008e24:	2180      	movs	r1, #128	; 0x80
10008e26:	0089      	lsls	r1, r1, #2
10008e28:	430b      	orrs	r3, r1
10008e2a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e2c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_PWM4:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_PWM_4_CLK_EN;
		break;
10008e2e:	e085      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_ADC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e30:	4a44      	ldr	r2, [pc, #272]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e32:	6913      	ldr	r3, [r2, #16]
10008e34:	2180      	movs	r1, #128	; 0x80
10008e36:	00c9      	lsls	r1, r1, #3
10008e38:	430b      	orrs	r3, r1
10008e3a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e3c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_ADC:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SENS_ADC_CLK_EN;
		break;
10008e3e:	e07d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e40:	4a40      	ldr	r2, [pc, #256]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e42:	6913      	ldr	r3, [r2, #16]
10008e44:	2180      	movs	r1, #128	; 0x80
10008e46:	0109      	lsls	r1, r1, #4
10008e48:	430b      	orrs	r3, r1
10008e4a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e4c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI0_SCK_PHASE_INT_CLK_EN;
		break;
10008e4e:	e075      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e50:	4a3c      	ldr	r2, [pc, #240]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e52:	6913      	ldr	r3, [r2, #16]
10008e54:	2180      	movs	r1, #128	; 0x80
10008e56:	0149      	lsls	r1, r1, #5
10008e58:	430b      	orrs	r3, r1
10008e5a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e5c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SPI1_SCK_PHASE_INT_CLK_EN;
		break;
10008e5e:	e06d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_GPIO_GCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e60:	4a38      	ldr	r2, [pc, #224]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e62:	6913      	ldr	r3, [r2, #16]
10008e64:	2180      	movs	r1, #128	; 0x80
10008e66:	0189      	lsls	r1, r1, #6
10008e68:	430b      	orrs	r3, r1
10008e6a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e6c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_GPIO_GCLK:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_GPIO_GCLK_EN;
		break;
10008e6e:	e065      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_TIMER0_GATE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e70:	4a34      	ldr	r2, [pc, #208]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e72:	6913      	ldr	r3, [r2, #16]
10008e74:	2180      	movs	r1, #128	; 0x80
10008e76:	01c9      	lsls	r1, r1, #7
10008e78:	430b      	orrs	r3, r1
10008e7a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e7c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_TIMER0_GATE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_COUNTER_0_PGCLK_EN;
		break;
10008e7e:	e05d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e80:	4a30      	ldr	r2, [pc, #192]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e82:	6913      	ldr	r3, [r2, #16]
10008e84:	2180      	movs	r1, #128	; 0x80
10008e86:	0209      	lsls	r1, r1, #8
10008e88:	430b      	orrs	r3, r1
10008e8a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e8c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_CORE_CLK_EN;
		break;
10008e8e:	e055      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008e90:	4a2c      	ldr	r2, [pc, #176]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008e92:	6913      	ldr	r3, [r2, #16]
10008e94:	2180      	movs	r1, #128	; 0x80
10008e96:	0249      	lsls	r1, r1, #9
10008e98:	430b      	orrs	r3, r1
10008e9a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008e9c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_SHA_AHB_CLK_EN;
		break;
10008e9e:	e04d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008ea0:	4a28      	ldr	r2, [pc, #160]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008ea2:	6913      	ldr	r3, [r2, #16]
10008ea4:	2180      	movs	r1, #128	; 0x80
10008ea6:	0289      	lsls	r1, r1, #10
10008ea8:	430b      	orrs	r3, r1
10008eaa:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008eac:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_CORE_CLK_EN;
		break;
10008eae:	e045      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008eb0:	4a24      	ldr	r2, [pc, #144]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008eb2:	6913      	ldr	r3, [r2, #16]
10008eb4:	2180      	movs	r1, #128	; 0x80
10008eb6:	02c9      	lsls	r1, r1, #11
10008eb8:	430b      	orrs	r3, r1
10008eba:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008ebc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_AES_AHB_CLK_EN;
		break;
10008ebe:	e03d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008ec0:	4a20      	ldr	r2, [pc, #128]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008ec2:	6913      	ldr	r3, [r2, #16]
10008ec4:	2180      	movs	r1, #128	; 0x80
10008ec6:	0309      	lsls	r1, r1, #12
10008ec8:	430b      	orrs	r3, r1
10008eca:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008ecc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_0_MEM_CLK_EN;
		break;
10008ece:	e035      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008ed0:	4a1c      	ldr	r2, [pc, #112]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008ed2:	6913      	ldr	r3, [r2, #16]
10008ed4:	2180      	movs	r1, #128	; 0x80
10008ed6:	0349      	lsls	r1, r1, #13
10008ed8:	430b      	orrs	r3, r1
10008eda:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008edc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_1_MEM_CLK_EN;
		break;
10008ede:	e02d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM1_2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008ee0:	4a18      	ldr	r2, [pc, #96]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008ee2:	6913      	ldr	r3, [r2, #16]
10008ee4:	2180      	movs	r1, #128	; 0x80
10008ee6:	0389      	lsls	r1, r1, #14
10008ee8:	430b      	orrs	r3, r1
10008eea:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008eec:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM1_2:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_1_2_MEM_CLK_EN;
		break;
10008eee:	e025      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM2_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008ef0:	4a14      	ldr	r2, [pc, #80]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008ef2:	6913      	ldr	r3, [r2, #16]
10008ef4:	2180      	movs	r1, #128	; 0x80
10008ef6:	03c9      	lsls	r1, r1, #15
10008ef8:	430b      	orrs	r3, r1
10008efa:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008efc:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2_0:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_0_MEM_CLK_EN;
		break;
10008efe:	e01d      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_IDRAM2_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
10008f00:	4a10      	ldr	r2, [pc, #64]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008f02:	6913      	ldr	r3, [r2, #16]
10008f04:	2180      	movs	r1, #128	; 0x80
10008f06:	0409      	lsls	r1, r1, #16
10008f08:	430b      	orrs	r3, r1
10008f0a:	6113      	str	r3, [r2, #16]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008f0c:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_IDRAM2_1:
			LPMCU_MISC_REGS0->LPMCU_CLOCK_ENABLES_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_CLOCK_ENABLES_1_IDRAM_2_1_MEM_CLK_EN;
		break;
10008f0e:	e015      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_BLE_RXTX:
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
10008f10:	4a0c      	ldr	r2, [pc, #48]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008f12:	7d11      	ldrb	r1, [r2, #20]
10008f14:	2301      	movs	r3, #1
10008f16:	430b      	orrs	r3, r1
10008f18:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008f1a:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_RXTX:
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
				LPMCU_MISC_REGS_BTMCU_CONTROL_RXTX_SEQ_CLK_EN;
		break;
10008f1c:	e00e      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_BLE_AHB:
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
10008f1e:	4a09      	ldr	r2, [pc, #36]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008f20:	7d11      	ldrb	r1, [r2, #20]
10008f22:	2302      	movs	r3, #2
10008f24:	430b      	orrs	r3, r1
10008f26:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008f28:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_AHB:
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
				LPMCU_MISC_REGS_BTMCU_CONTROL_AHB_CLK_EN;
		break;
10008f2a:	e007      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		case PERIPHERAL_BLE_PERIPH_REGS:
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
10008f2c:	4a05      	ldr	r2, [pc, #20]	; (10008f44 <system_clock_peripheral_enable+0x358>)
10008f2e:	7d11      	ldrb	r1, [r2, #20]
10008f30:	2304      	movs	r3, #4
10008f32:	430b      	orrs	r3, r1
10008f34:	7513      	strb	r3, [r2, #20]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008f36:	2000      	movs	r0, #0
		break;

		case PERIPHERAL_BLE_PERIPH_REGS:
			LPMCU_MISC_REGS0->BTMCU_CONTROL.reg |= \
				LPMCU_MISC_REGS_BTMCU_CONTROL_PERIPH_REGS_CLK_EN;
		break;
10008f38:	e000      	b.n	10008f3c <system_clock_peripheral_enable+0x350>

		default:
			return STATUS_ERR_INVALID_ARG;
10008f3a:	2017      	movs	r0, #23
	}

	return STATUS_OK;
}
10008f3c:	bd00      	pop	{pc}
10008f3e:	46c0      	nop			; (mov r8, r8)
10008f40:	1000e720 	.word	0x1000e720
10008f44:	4000b000 	.word	0x4000b000

10008f48 <system_peripheral_reset>:
 * \return Status of operation.
 * \retval STATUS_OK               Clock config correctly
 * \retval STATUS_ERR_INVALID_ARG  If data is invalid
 */
enum status_code system_peripheral_reset(enum system_peripheral peripheral)
{
10008f48:	b500      	push	{lr}
	switch (peripheral) {
10008f4a:	2843      	cmp	r0, #67	; 0x43
10008f4c:	d900      	bls.n	10008f50 <system_peripheral_reset+0x8>
10008f4e:	e223      	b.n	10009398 <system_peripheral_reset+0x450>
10008f50:	0080      	lsls	r0, r0, #2
10008f52:	4be0      	ldr	r3, [pc, #896]	; (100092d4 <system_peripheral_reset+0x38c>)
10008f54:	581b      	ldr	r3, [r3, r0]
10008f56:	469f      	mov	pc, r3
		case PERIPHERAL_LPMCU_CPU:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008f58:	4bdf      	ldr	r3, [pc, #892]	; (100092d8 <system_peripheral_reset+0x390>)
10008f5a:	6859      	ldr	r1, [r3, #4]
10008f5c:	2202      	movs	r2, #2
10008f5e:	4391      	bics	r1, r2
10008f60:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008f62:	6859      	ldr	r1, [r3, #4]
10008f64:	430a      	orrs	r2, r1
10008f66:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008f68:	2000      	movs	r0, #0
		case PERIPHERAL_LPMCU_CPU:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CPU_RSTN;
		break;
10008f6a:	e216      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008f6c:	4bda      	ldr	r3, [pc, #872]	; (100092d8 <system_peripheral_reset+0x390>)
10008f6e:	6859      	ldr	r1, [r3, #4]
10008f70:	2204      	movs	r2, #4
10008f72:	4391      	bics	r1, r2
10008f74:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPIFLASH_SYS_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008f76:	6859      	ldr	r1, [r3, #4]
10008f78:	430a      	orrs	r2, r1
10008f7a:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008f7c:	2000      	movs	r0, #0
		case PERIPHERAL_SPI_FLASH:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPIFLASH_SYS_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPIFLASH_SYS_RSTN;
		break;
10008f7e:	e20c      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI_FLASH_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008f80:	4bd5      	ldr	r3, [pc, #852]	; (100092d8 <system_peripheral_reset+0x390>)
10008f82:	6859      	ldr	r1, [r3, #4]
10008f84:	2208      	movs	r2, #8
10008f86:	4391      	bics	r1, r2
10008f88:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPIFLASH_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008f8a:	6859      	ldr	r1, [r3, #4]
10008f8c:	430a      	orrs	r2, r1
10008f8e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008f90:	2000      	movs	r0, #0
		case PERIPHERAL_SPI_FLASH_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPIFLASH_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_SPIFLASH_RSTN;
		break;
10008f92:	e202      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008f94:	4bd0      	ldr	r3, [pc, #832]	; (100092d8 <system_peripheral_reset+0x390>)
10008f96:	6859      	ldr	r1, [r3, #4]
10008f98:	2210      	movs	r2, #16
10008f9a:	4391      	bics	r1, r2
10008f9c:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008f9e:	6859      	ldr	r1, [r3, #4]
10008fa0:	430a      	orrs	r2, r1
10008fa2:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008fa4:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI0_CORE_RSTN;
		break;
10008fa6:	e1f8      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008fa8:	4bcb      	ldr	r3, [pc, #812]	; (100092d8 <system_peripheral_reset+0x390>)
10008faa:	6859      	ldr	r1, [r3, #4]
10008fac:	2220      	movs	r2, #32
10008fae:	4391      	bics	r1, r2
10008fb0:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008fb2:	6859      	ldr	r1, [r3, #4]
10008fb4:	430a      	orrs	r2, r1
10008fb6:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008fb8:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI0_IF_RSTN;
		break;
10008fba:	e1ee      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008fbc:	4bc6      	ldr	r3, [pc, #792]	; (100092d8 <system_peripheral_reset+0x390>)
10008fbe:	6859      	ldr	r1, [r3, #4]
10008fc0:	2240      	movs	r2, #64	; 0x40
10008fc2:	4391      	bics	r1, r2
10008fc4:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008fc6:	6859      	ldr	r1, [r3, #4]
10008fc8:	430a      	orrs	r2, r1
10008fca:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008fcc:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI1_CORE_RSTN;
		break;
10008fce:	e1e4      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008fd0:	4bc1      	ldr	r3, [pc, #772]	; (100092d8 <system_peripheral_reset+0x390>)
10008fd2:	6859      	ldr	r1, [r3, #4]
10008fd4:	2280      	movs	r2, #128	; 0x80
10008fd6:	4391      	bics	r1, r2
10008fd8:	6059      	str	r1, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008fda:	6859      	ldr	r1, [r3, #4]
10008fdc:	430a      	orrs	r2, r1
10008fde:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008fe0:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_SPI1_IF_RSTN;
		break;
10008fe2:	e1da      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008fe4:	4bbc      	ldr	r3, [pc, #752]	; (100092d8 <system_peripheral_reset+0x390>)
10008fe6:	6859      	ldr	r1, [r3, #4]
10008fe8:	4abc      	ldr	r2, [pc, #752]	; (100092dc <system_peripheral_reset+0x394>)
10008fea:	400a      	ands	r2, r1
10008fec:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_I2C0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10008fee:	685a      	ldr	r2, [r3, #4]
10008ff0:	2180      	movs	r1, #128	; 0x80
10008ff2:	0049      	lsls	r1, r1, #1
10008ff4:	430a      	orrs	r2, r1
10008ff6:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10008ff8:	2000      	movs	r0, #0
		case PERIPHERAL_I2C0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_I2C0_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_I2C0_CORE_RSTN;
		break;
10008ffa:	e1ce      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10008ffc:	4bb6      	ldr	r3, [pc, #728]	; (100092d8 <system_peripheral_reset+0x390>)
10008ffe:	6859      	ldr	r1, [r3, #4]
10009000:	4ab7      	ldr	r2, [pc, #732]	; (100092e0 <system_peripheral_reset+0x398>)
10009002:	400a      	ands	r2, r1
10009004:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_I2C0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009006:	685a      	ldr	r2, [r3, #4]
10009008:	2180      	movs	r1, #128	; 0x80
1000900a:	0089      	lsls	r1, r1, #2
1000900c:	430a      	orrs	r2, r1
1000900e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009010:	2000      	movs	r0, #0
		case PERIPHERAL_I2C0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_I2C0_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CORTUS_I2C0_IF_RSTN;
		break;
10009012:	e1c2      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10009014:	4bb0      	ldr	r3, [pc, #704]	; (100092d8 <system_peripheral_reset+0x390>)
10009016:	6859      	ldr	r1, [r3, #4]
10009018:	4ab2      	ldr	r2, [pc, #712]	; (100092e4 <system_peripheral_reset+0x39c>)
1000901a:	400a      	ands	r2, r1
1000901c:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000901e:	685a      	ldr	r2, [r3, #4]
10009020:	2180      	movs	r1, #128	; 0x80
10009022:	00c9      	lsls	r1, r1, #3
10009024:	430a      	orrs	r2, r1
10009026:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009028:	2000      	movs	r0, #0
		case PERIPHERAL_GPIO_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_GPIO_RSTN;
		break;
1000902a:	e1b6      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000902c:	4baa      	ldr	r3, [pc, #680]	; (100092d8 <system_peripheral_reset+0x390>)
1000902e:	6859      	ldr	r1, [r3, #4]
10009030:	4aad      	ldr	r2, [pc, #692]	; (100092e8 <system_peripheral_reset+0x3a0>)
10009032:	400a      	ands	r2, r1
10009034:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_COUNTER_0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009036:	685a      	ldr	r2, [r3, #4]
10009038:	2180      	movs	r1, #128	; 0x80
1000903a:	0109      	lsls	r1, r1, #4
1000903c:	430a      	orrs	r2, r1
1000903e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009040:	2000      	movs	r0, #0
		case PERIPHERAL_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_COUNTER_0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_COUNTER_0_RSTN;
		break;
10009042:	e1aa      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10009044:	4ba4      	ldr	r3, [pc, #656]	; (100092d8 <system_peripheral_reset+0x390>)
10009046:	6859      	ldr	r1, [r3, #4]
10009048:	4aa8      	ldr	r2, [pc, #672]	; (100092ec <system_peripheral_reset+0x3a4>)
1000904a:	400a      	ands	r2, r1
1000904c:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000904e:	685a      	ldr	r2, [r3, #4]
10009050:	2180      	movs	r1, #128	; 0x80
10009052:	0149      	lsls	r1, r1, #5
10009054:	430a      	orrs	r2, r1
10009056:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009058:	2000      	movs	r0, #0
		case PERIPHERAL_UART0_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_CORE_RSTN;
		break;
1000905a:	e19e      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000905c:	4b9e      	ldr	r3, [pc, #632]	; (100092d8 <system_peripheral_reset+0x390>)
1000905e:	6859      	ldr	r1, [r3, #4]
10009060:	4aa3      	ldr	r2, [pc, #652]	; (100092f0 <system_peripheral_reset+0x3a8>)
10009062:	400a      	ands	r2, r1
10009064:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009066:	685a      	ldr	r2, [r3, #4]
10009068:	2180      	movs	r1, #128	; 0x80
1000906a:	0189      	lsls	r1, r1, #6
1000906c:	430a      	orrs	r2, r1
1000906e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009070:	2000      	movs	r0, #0
		case PERIPHERAL_UART0_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_IF_RSTN;
		break;
10009072:	e192      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10009074:	4b98      	ldr	r3, [pc, #608]	; (100092d8 <system_peripheral_reset+0x390>)
10009076:	6859      	ldr	r1, [r3, #4]
10009078:	4a9e      	ldr	r2, [pc, #632]	; (100092f4 <system_peripheral_reset+0x3ac>)
1000907a:	400a      	ands	r2, r1
1000907c:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000907e:	685a      	ldr	r2, [r3, #4]
10009080:	2180      	movs	r1, #128	; 0x80
10009082:	01c9      	lsls	r1, r1, #7
10009084:	430a      	orrs	r2, r1
10009086:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009088:	2000      	movs	r0, #0
		case PERIPHERAL_UART1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_1_CORE_RSTN;
		break;
1000908a:	e186      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000908c:	4b92      	ldr	r3, [pc, #584]	; (100092d8 <system_peripheral_reset+0x390>)
1000908e:	6859      	ldr	r1, [r3, #4]
10009090:	4a99      	ldr	r2, [pc, #612]	; (100092f8 <system_peripheral_reset+0x3b0>)
10009092:	400a      	ands	r2, r1
10009094:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009096:	685a      	ldr	r2, [r3, #4]
10009098:	2180      	movs	r1, #128	; 0x80
1000909a:	0209      	lsls	r1, r1, #8
1000909c:	430a      	orrs	r2, r1
1000909e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100090a0:	2000      	movs	r0, #0
		case PERIPHERAL_UART1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_UART_1_IF_RSTN;
		break;
100090a2:	e17a      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100090a4:	4b8c      	ldr	r3, [pc, #560]	; (100092d8 <system_peripheral_reset+0x390>)
100090a6:	6859      	ldr	r1, [r3, #4]
100090a8:	4a94      	ldr	r2, [pc, #592]	; (100092fc <system_peripheral_reset+0x3b4>)
100090aa:	400a      	ands	r2, r1
100090ac:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WATCHDOG_0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100090ae:	685a      	ldr	r2, [r3, #4]
100090b0:	2180      	movs	r1, #128	; 0x80
100090b2:	0249      	lsls	r1, r1, #9
100090b4:	430a      	orrs	r2, r1
100090b6:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100090b8:	2000      	movs	r0, #0
		case PERIPHERAL_WDT0:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WATCHDOG_0_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WATCHDOG_0_RSTN;
		break;
100090ba:	e16e      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100090bc:	4b86      	ldr	r3, [pc, #536]	; (100092d8 <system_peripheral_reset+0x390>)
100090be:	6859      	ldr	r1, [r3, #4]
100090c0:	4a8f      	ldr	r2, [pc, #572]	; (10009300 <system_peripheral_reset+0x3b8>)
100090c2:	400a      	ands	r2, r1
100090c4:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WATCHDOG_1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100090c6:	685a      	ldr	r2, [r3, #4]
100090c8:	2180      	movs	r1, #128	; 0x80
100090ca:	0289      	lsls	r1, r1, #10
100090cc:	430a      	orrs	r2, r1
100090ce:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100090d0:	2000      	movs	r0, #0
		case PERIPHERAL_WDT1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WATCHDOG_1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_WATCHDOG_1_RSTN;
		break;
100090d2:	e162      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100090d4:	4b80      	ldr	r3, [pc, #512]	; (100092d8 <system_peripheral_reset+0x390>)
100090d6:	6859      	ldr	r1, [r3, #4]
100090d8:	4a8a      	ldr	r2, [pc, #552]	; (10009304 <system_peripheral_reset+0x3bc>)
100090da:	400a      	ands	r2, r1
100090dc:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100090de:	685a      	ldr	r2, [r3, #4]
100090e0:	2180      	movs	r1, #128	; 0x80
100090e2:	02c9      	lsls	r1, r1, #11
100090e4:	430a      	orrs	r2, r1
100090e6:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100090e8:	2000      	movs	r0, #0
		case PERIPHERAL_NVIC:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_IRQ_CTRLR_CORE_RSTN;
		break;
100090ea:	e156      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_MBIST:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100090ec:	4b7a      	ldr	r3, [pc, #488]	; (100092d8 <system_peripheral_reset+0x390>)
100090ee:	6859      	ldr	r1, [r3, #4]
100090f0:	4a85      	ldr	r2, [pc, #532]	; (10009308 <system_peripheral_reset+0x3c0>)
100090f2:	400a      	ands	r2, r1
100090f4:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100090f6:	685a      	ldr	r2, [r3, #4]
100090f8:	2180      	movs	r1, #128	; 0x80
100090fa:	0309      	lsls	r1, r1, #12
100090fc:	430a      	orrs	r2, r1
100090fe:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009100:	2000      	movs	r0, #0
		case PERIPHERAL_MBIST:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_MBIST_RSTN;
		break;
10009102:	e14a      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10009104:	4b74      	ldr	r3, [pc, #464]	; (100092d8 <system_peripheral_reset+0x390>)
10009106:	6859      	ldr	r1, [r3, #4]
10009108:	4a80      	ldr	r2, [pc, #512]	; (1000930c <system_peripheral_reset+0x3c4>)
1000910a:	400a      	ands	r2, r1
1000910c:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000910e:	685a      	ldr	r2, [r3, #4]
10009110:	2180      	movs	r1, #128	; 0x80
10009112:	0349      	lsls	r1, r1, #13
10009114:	430a      	orrs	r2, r1
10009116:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009118:	2000      	movs	r0, #0
		case PERIPHERAL_LOW_POWER_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_RSTN;
		break;
1000911a:	e13e      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_LOW_POWER_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000911c:	4b6e      	ldr	r3, [pc, #440]	; (100092d8 <system_peripheral_reset+0x390>)
1000911e:	6859      	ldr	r1, [r3, #4]
10009120:	4a7b      	ldr	r2, [pc, #492]	; (10009310 <system_peripheral_reset+0x3c8>)
10009122:	400a      	ands	r2, r1
10009124:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009126:	685a      	ldr	r2, [r3, #4]
10009128:	2180      	movs	r1, #128	; 0x80
1000912a:	0389      	lsls	r1, r1, #14
1000912c:	430a      	orrs	r2, r1
1000912e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009130:	2000      	movs	r0, #0
		case PERIPHERAL_LOW_POWER_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_CALIB_XBAR_IF_RSTN;
		break;
10009132:	e132      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_LPMCU_DEBUG:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10009134:	4b68      	ldr	r3, [pc, #416]	; (100092d8 <system_peripheral_reset+0x390>)
10009136:	6859      	ldr	r1, [r3, #4]
10009138:	4a76      	ldr	r2, [pc, #472]	; (10009314 <system_peripheral_reset+0x3cc>)
1000913a:	400a      	ands	r2, r1
1000913c:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000913e:	685a      	ldr	r2, [r3, #4]
10009140:	2180      	movs	r1, #128	; 0x80
10009142:	03c9      	lsls	r1, r1, #15
10009144:	430a      	orrs	r2, r1
10009146:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009148:	2000      	movs	r0, #0
		case PERIPHERAL_LPMCU_DEBUG:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_DBUG_RSTN;
		break;
1000914a:	e126      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_ARM_FREE_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000914c:	4b62      	ldr	r3, [pc, #392]	; (100092d8 <system_peripheral_reset+0x390>)
1000914e:	6859      	ldr	r1, [r3, #4]
10009150:	4a71      	ldr	r2, [pc, #452]	; (10009318 <system_peripheral_reset+0x3d0>)
10009152:	400a      	ands	r2, r1
10009154:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009156:	685a      	ldr	r2, [r3, #4]
10009158:	2180      	movs	r1, #128	; 0x80
1000915a:	0409      	lsls	r1, r1, #16
1000915c:	430a      	orrs	r2, r1
1000915e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009160:	2000      	movs	r0, #0
		case PERIPHERAL_ARM_FREE_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_FREE_CLK_RSTN;
		break;
10009162:	e11a      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_ARM_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10009164:	4b5c      	ldr	r3, [pc, #368]	; (100092d8 <system_peripheral_reset+0x390>)
10009166:	6859      	ldr	r1, [r3, #4]
10009168:	4a6c      	ldr	r2, [pc, #432]	; (1000931c <system_peripheral_reset+0x3d4>)
1000916a:	400a      	ands	r2, r1
1000916c:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000916e:	685a      	ldr	r2, [r3, #4]
10009170:	2180      	movs	r1, #128	; 0x80
10009172:	0449      	lsls	r1, r1, #17
10009174:	430a      	orrs	r2, r1
10009176:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009178:	2000      	movs	r0, #0
		case PERIPHERAL_ARM_APB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_ARM_PRESETN_RSTN;
		break;
1000917a:	e10e      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000917c:	4b56      	ldr	r3, [pc, #344]	; (100092d8 <system_peripheral_reset+0x390>)
1000917e:	6859      	ldr	r1, [r3, #4]
10009180:	4a67      	ldr	r2, [pc, #412]	; (10009320 <system_peripheral_reset+0x3d8>)
10009182:	400a      	ands	r2, r1
10009184:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009186:	685a      	ldr	r2, [r3, #4]
10009188:	2180      	movs	r1, #128	; 0x80
1000918a:	0489      	lsls	r1, r1, #18
1000918c:	430a      	orrs	r2, r1
1000918e:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009190:	2000      	movs	r0, #0
		case PERIPHERAL_QDEC1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_1_RSTN;
		break;
10009192:	e102      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
10009194:	4b50      	ldr	r3, [pc, #320]	; (100092d8 <system_peripheral_reset+0x390>)
10009196:	6859      	ldr	r1, [r3, #4]
10009198:	4a62      	ldr	r2, [pc, #392]	; (10009324 <system_peripheral_reset+0x3dc>)
1000919a:	400a      	ands	r2, r1
1000919c:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
1000919e:	685a      	ldr	r2, [r3, #4]
100091a0:	2180      	movs	r1, #128	; 0x80
100091a2:	04c9      	lsls	r1, r1, #19
100091a4:	430a      	orrs	r2, r1
100091a6:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100091a8:	2000      	movs	r0, #0
		case PERIPHERAL_QDEC2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_2_RSTN;
		break;
100091aa:	e0f6      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_QDEC3:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100091ac:	4b4a      	ldr	r3, [pc, #296]	; (100092d8 <system_peripheral_reset+0x390>)
100091ae:	6859      	ldr	r1, [r3, #4]
100091b0:	4a5d      	ldr	r2, [pc, #372]	; (10009328 <system_peripheral_reset+0x3e0>)
100091b2:	400a      	ands	r2, r1
100091b4:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_3_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100091b6:	685a      	ldr	r2, [r3, #4]
100091b8:	2180      	movs	r1, #128	; 0x80
100091ba:	0509      	lsls	r1, r1, #20
100091bc:	430a      	orrs	r2, r1
100091be:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100091c0:	2000      	movs	r0, #0
		case PERIPHERAL_QDEC3:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_3_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_QUAD_DEC_3_RSTN;
		break;
100091c2:	e0ea      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100091c4:	4b44      	ldr	r3, [pc, #272]	; (100092d8 <system_peripheral_reset+0x390>)
100091c6:	6859      	ldr	r1, [r3, #4]
100091c8:	4a58      	ldr	r2, [pc, #352]	; (1000932c <system_peripheral_reset+0x3e4>)
100091ca:	400a      	ands	r2, r1
100091cc:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100091ce:	685a      	ldr	r2, [r3, #4]
100091d0:	2180      	movs	r1, #128	; 0x80
100091d2:	0549      	lsls	r1, r1, #21
100091d4:	430a      	orrs	r2, r1
100091d6:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100091d8:	2000      	movs	r0, #0
		case PERIPHERAL_PWM1:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_1_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_1_RSTN;
		break;
100091da:	e0de      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100091dc:	4b3e      	ldr	r3, [pc, #248]	; (100092d8 <system_peripheral_reset+0x390>)
100091de:	6859      	ldr	r1, [r3, #4]
100091e0:	4a53      	ldr	r2, [pc, #332]	; (10009330 <system_peripheral_reset+0x3e8>)
100091e2:	400a      	ands	r2, r1
100091e4:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100091e6:	685a      	ldr	r2, [r3, #4]
100091e8:	2180      	movs	r1, #128	; 0x80
100091ea:	0589      	lsls	r1, r1, #22
100091ec:	430a      	orrs	r2, r1
100091ee:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100091f0:	2000      	movs	r0, #0
		case PERIPHERAL_PWM2:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_2_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_2_RSTN;
		break;
100091f2:	e0d2      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
100091f4:	4b38      	ldr	r3, [pc, #224]	; (100092d8 <system_peripheral_reset+0x390>)
100091f6:	6859      	ldr	r1, [r3, #4]
100091f8:	4a4e      	ldr	r2, [pc, #312]	; (10009334 <system_peripheral_reset+0x3ec>)
100091fa:	400a      	ands	r2, r1
100091fc:	605a      	str	r2, [r3, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_3_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
100091fe:	685a      	ldr	r2, [r3, #4]
10009200:	2180      	movs	r1, #128	; 0x80
10009202:	05c9      	lsls	r1, r1, #23
10009204:	430a      	orrs	r2, r1
10009206:	605a      	str	r2, [r3, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009208:	2000      	movs	r0, #0
		case PERIPHERAL_PWM3:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_3_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_3_RSTN;
		break;
1000920a:	e0c6      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_PWM4:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
1000920c:	4a32      	ldr	r2, [pc, #200]	; (100092d8 <system_peripheral_reset+0x390>)
1000920e:	6853      	ldr	r3, [r2, #4]
10009210:	005b      	lsls	r3, r3, #1
10009212:	085b      	lsrs	r3, r3, #1
10009214:	6053      	str	r3, [r2, #4]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_4_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
10009216:	6853      	ldr	r3, [r2, #4]
10009218:	2180      	movs	r1, #128	; 0x80
1000921a:	0609      	lsls	r1, r1, #24
1000921c:	430b      	orrs	r3, r1
1000921e:	6053      	str	r3, [r2, #4]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009220:	2000      	movs	r0, #0
		case PERIPHERAL_PWM4:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_4_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_0.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_0_PWM_4_RSTN;
		break;
10009222:	e0ba      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009224:	4b2c      	ldr	r3, [pc, #176]	; (100092d8 <system_peripheral_reset+0x390>)
10009226:	891a      	ldrh	r2, [r3, #8]
10009228:	2101      	movs	r1, #1
1000922a:	438a      	bics	r2, r1
1000922c:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000922e:	8919      	ldrh	r1, [r3, #8]
10009230:	2201      	movs	r2, #1
10009232:	430a      	orrs	r2, r1
10009234:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009236:	2000      	movs	r0, #0
		case PERIPHERAL_DUALT_TIMER:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DUALTIMER_RSTN;
		break;
10009238:	e0af      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000923a:	4b27      	ldr	r3, [pc, #156]	; (100092d8 <system_peripheral_reset+0x390>)
1000923c:	891a      	ldrh	r2, [r3, #8]
1000923e:	2102      	movs	r1, #2
10009240:	438a      	bics	r2, r1
10009242:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_I2C1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10009244:	8919      	ldrh	r1, [r3, #8]
10009246:	2202      	movs	r2, #2
10009248:	430a      	orrs	r2, r1
1000924a:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000924c:	2000      	movs	r0, #0
		case PERIPHERAL_I2C1_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_I2C1_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_I2C1_CORE_RSTN;
		break;
1000924e:	e0a4      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_I2C1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009250:	4b21      	ldr	r3, [pc, #132]	; (100092d8 <system_peripheral_reset+0x390>)
10009252:	891a      	ldrh	r2, [r3, #8]
10009254:	2104      	movs	r1, #4
10009256:	438a      	bics	r2, r1
10009258:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_I2C1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000925a:	8919      	ldrh	r1, [r3, #8]
1000925c:	2204      	movs	r2, #4
1000925e:	430a      	orrs	r2, r1
10009260:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009262:	2000      	movs	r0, #0
		case PERIPHERAL_I2C1_IF:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_I2C1_IF_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_I2C1_IF_RSTN;
		break;
10009264:	e099      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009266:	4b1c      	ldr	r3, [pc, #112]	; (100092d8 <system_peripheral_reset+0x390>)
10009268:	891a      	ldrh	r2, [r3, #8]
1000926a:	2108      	movs	r1, #8
1000926c:	438a      	bics	r2, r1
1000926e:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10009270:	8919      	ldrh	r1, [r3, #8]
10009272:	2208      	movs	r2, #8
10009274:	430a      	orrs	r2, r1
10009276:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009278:	2000      	movs	r0, #0
		case PERIPHERAL_SHA_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_CORE_RSTN;
		break;
1000927a:	e08e      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
1000927c:	4b16      	ldr	r3, [pc, #88]	; (100092d8 <system_peripheral_reset+0x390>)
1000927e:	891a      	ldrh	r2, [r3, #8]
10009280:	2110      	movs	r1, #16
10009282:	438a      	bics	r2, r1
10009284:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10009286:	8919      	ldrh	r1, [r3, #8]
10009288:	2210      	movs	r2, #16
1000928a:	430a      	orrs	r2, r1
1000928c:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000928e:	2000      	movs	r0, #0
		case PERIPHERAL_SHA_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_SHA_AHB_RSTN;
		break;
10009290:	e083      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009292:	4b11      	ldr	r3, [pc, #68]	; (100092d8 <system_peripheral_reset+0x390>)
10009294:	891a      	ldrh	r2, [r3, #8]
10009296:	2120      	movs	r1, #32
10009298:	438a      	bics	r2, r1
1000929a:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000929c:	8919      	ldrh	r1, [r3, #8]
1000929e:	2220      	movs	r2, #32
100092a0:	430a      	orrs	r2, r1
100092a2:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100092a4:	2000      	movs	r0, #0
		case PERIPHERAL_AES_CORE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_CORE_RSTN;
		break;
100092a6:	e078      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
100092a8:	4b0b      	ldr	r3, [pc, #44]	; (100092d8 <system_peripheral_reset+0x390>)
100092aa:	891a      	ldrh	r2, [r3, #8]
100092ac:	2140      	movs	r1, #64	; 0x40
100092ae:	438a      	bics	r2, r1
100092b0:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
100092b2:	8919      	ldrh	r1, [r3, #8]
100092b4:	2240      	movs	r2, #64	; 0x40
100092b6:	430a      	orrs	r2, r1
100092b8:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100092ba:	2000      	movs	r0, #0
		case PERIPHERAL_AES_AHB:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_SECURITY_AES_AHB_RSTN;
		break;
100092bc:	e06d      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
100092be:	4b06      	ldr	r3, [pc, #24]	; (100092d8 <system_peripheral_reset+0x390>)
100092c0:	891a      	ldrh	r2, [r3, #8]
100092c2:	2180      	movs	r1, #128	; 0x80
100092c4:	438a      	bics	r2, r1
100092c6:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI0_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
100092c8:	8919      	ldrh	r1, [r3, #8]
100092ca:	2280      	movs	r2, #128	; 0x80
100092cc:	430a      	orrs	r2, r1
100092ce:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
100092d0:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI0_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI0_SCK_CLK_RSTN;
		break;
100092d2:	e062      	b.n	1000939a <system_peripheral_reset+0x452>
100092d4:	1000e7f8 	.word	0x1000e7f8
100092d8:	4000b000 	.word	0x4000b000
100092dc:	fffffeff 	.word	0xfffffeff
100092e0:	fffffdff 	.word	0xfffffdff
100092e4:	fffffbff 	.word	0xfffffbff
100092e8:	fffff7ff 	.word	0xfffff7ff
100092ec:	ffffefff 	.word	0xffffefff
100092f0:	ffffdfff 	.word	0xffffdfff
100092f4:	ffffbfff 	.word	0xffffbfff
100092f8:	ffff7fff 	.word	0xffff7fff
100092fc:	fffeffff 	.word	0xfffeffff
10009300:	fffdffff 	.word	0xfffdffff
10009304:	fffbffff 	.word	0xfffbffff
10009308:	fff7ffff 	.word	0xfff7ffff
1000930c:	ffefffff 	.word	0xffefffff
10009310:	ffdfffff 	.word	0xffdfffff
10009314:	ffbfffff 	.word	0xffbfffff
10009318:	ff7fffff 	.word	0xff7fffff
1000931c:	feffffff 	.word	0xfeffffff
10009320:	fdffffff 	.word	0xfdffffff
10009324:	fbffffff 	.word	0xfbffffff
10009328:	f7ffffff 	.word	0xf7ffffff
1000932c:	efffffff 	.word	0xefffffff
10009330:	dfffffff 	.word	0xdfffffff
10009334:	bfffffff 	.word	0xbfffffff

		case PERIPHERAL_SPI1_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009338:	4b18      	ldr	r3, [pc, #96]	; (1000939c <system_peripheral_reset+0x454>)
1000933a:	8919      	ldrh	r1, [r3, #8]
1000933c:	4a18      	ldr	r2, [pc, #96]	; (100093a0 <system_peripheral_reset+0x458>)
1000933e:	400a      	ands	r2, r1
10009340:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI1_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10009342:	8919      	ldrh	r1, [r3, #8]
10009344:	2280      	movs	r2, #128	; 0x80
10009346:	0052      	lsls	r2, r2, #1
10009348:	430a      	orrs	r2, r1
1000934a:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000934c:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_SCK_CLK:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI1_SCK_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI1_SCK_CLK_RSTN;
		break;
1000934e:	e024      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009350:	4b12      	ldr	r3, [pc, #72]	; (1000939c <system_peripheral_reset+0x454>)
10009352:	8919      	ldrh	r1, [r3, #8]
10009354:	4a13      	ldr	r2, [pc, #76]	; (100093a4 <system_peripheral_reset+0x45c>)
10009356:	400a      	ands	r2, r1
10009358:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI0_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000935a:	8919      	ldrh	r1, [r3, #8]
1000935c:	2280      	movs	r2, #128	; 0x80
1000935e:	0092      	lsls	r2, r2, #2
10009360:	430a      	orrs	r2, r1
10009362:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009364:	2000      	movs	r0, #0
		case PERIPHERAL_SPI0_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI0_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI0_SCK_PHASE_INT_CLK_RSTN;
		break;
10009366:	e018      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009368:	4b0c      	ldr	r3, [pc, #48]	; (1000939c <system_peripheral_reset+0x454>)
1000936a:	8919      	ldrh	r1, [r3, #8]
1000936c:	4a0e      	ldr	r2, [pc, #56]	; (100093a8 <system_peripheral_reset+0x460>)
1000936e:	400a      	ands	r2, r1
10009370:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI1_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
10009372:	8919      	ldrh	r1, [r3, #8]
10009374:	2280      	movs	r2, #128	; 0x80
10009376:	00d2      	lsls	r2, r2, #3
10009378:	430a      	orrs	r2, r1
1000937a:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
1000937c:	2000      	movs	r0, #0
		case PERIPHERAL_SPI1_SCK_PHASE:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI1_SCK_PHASE_INT_CLK_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_CORTUS_SPI1_SCK_PHASE_INT_CLK_RSTN;
		break;
1000937e:	e00c      	b.n	1000939a <system_peripheral_reset+0x452>

		case PERIPHERAL_DMA:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
10009380:	4b06      	ldr	r3, [pc, #24]	; (1000939c <system_peripheral_reset+0x454>)
10009382:	8919      	ldrh	r1, [r3, #8]
10009384:	4a09      	ldr	r2, [pc, #36]	; (100093ac <system_peripheral_reset+0x464>)
10009386:	400a      	ands	r2, r1
10009388:	811a      	strh	r2, [r3, #8]
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DMA_CONTROLLER_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
1000938a:	8919      	ldrh	r1, [r3, #8]
1000938c:	2280      	movs	r2, #128	; 0x80
1000938e:	0112      	lsls	r2, r2, #4
10009390:	430a      	orrs	r2, r1
10009392:	811a      	strh	r2, [r3, #8]

		default:
			return STATUS_ERR_INVALID_ARG;
	}

	return STATUS_OK;
10009394:	2000      	movs	r0, #0
		case PERIPHERAL_DMA:
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg &= \
				~LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DMA_CONTROLLER_RSTN;
			LPMCU_MISC_REGS0->LPMCU_GLOBAL_RESET_1.reg |= \
				LPMCU_MISC_REGS_LPMCU_GLOBAL_RESET_1_DMA_CONTROLLER_RSTN;
		break;
10009396:	e000      	b.n	1000939a <system_peripheral_reset+0x452>

		default:
			return STATUS_ERR_INVALID_ARG;
10009398:	2017      	movs	r0, #23
	}

	return STATUS_OK;
}
1000939a:	bd00      	pop	{pc}
1000939c:	4000b000 	.word	0x4000b000
100093a0:	fffffeff 	.word	0xfffffeff
100093a4:	fffffdff 	.word	0xfffffdff
100093a8:	fffffbff 	.word	0xfffffbff
100093ac:	fffff7ff 	.word	0xfffff7ff

100093b0 <system_register_isr>:
 */
void system_register_isr(enum ram_isr_table_index isr_index,
		uint32_t isr_address)
{
	uint32_t *temp;
	temp = (uint32_t *)(isr_index * 4 + ISR_RAM_MAP_START_ADDRESS);
100093b0:	2380      	movs	r3, #128	; 0x80
100093b2:	04db      	lsls	r3, r3, #19
100093b4:	469c      	mov	ip, r3
100093b6:	4460      	add	r0, ip
	*temp = isr_address;
100093b8:	0080      	lsls	r0, r0, #2
100093ba:	6001      	str	r1, [r0, #0]
}
100093bc:	4770      	bx	lr
100093be:	46c0      	nop			; (mov r8, r8)

100093c0 <uart_rx0_isr_handler>:
	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
}

static void uart_rx0_isr_handler(void)
{
100093c0:	b538      	push	{r3, r4, r5, lr}
	struct uart_module *module = _uart_instances[0];
100093c2:	4b20      	ldr	r3, [pc, #128]	; (10009444 <uart_rx0_isr_handler+0x84>)
100093c4:	681c      	ldr	r4, [r3, #0]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
100093c6:	6823      	ldr	r3, [r4, #0]
100093c8:	7d1d      	ldrb	r5, [r3, #20]
100093ca:	b2ed      	uxtb	r5, r5
	if (flags & UART_RECEIVE_STATUS_FIFO_OVERRUN) {
100093cc:	066a      	lsls	r2, r5, #25
100093ce:	d513      	bpl.n	100093f8 <uart_rx0_isr_handler+0x38>
		/* Store the error code */
		module->status = STATUS_ERR_OVERFLOW;
100093d0:	211e      	movs	r1, #30
100093d2:	2222      	movs	r2, #34	; 0x22
100093d4:	54a1      	strb	r1, [r4, r2]
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
100093d6:	7e1a      	ldrb	r2, [r3, #24]
100093d8:	3123      	adds	r1, #35	; 0x23
100093da:	438a      	bics	r2, r1
100093dc:	761a      	strb	r2, [r3, #24]
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
100093de:	2321      	movs	r3, #33	; 0x21
100093e0:	5ce3      	ldrb	r3, [r4, r3]
100093e2:	071b      	lsls	r3, r3, #28
100093e4:	d506      	bpl.n	100093f4 <uart_rx0_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
100093e6:	2320      	movs	r3, #32
100093e8:	5ce3      	ldrb	r3, [r4, r3]
		module->status = STATUS_ERR_OVERFLOW;
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
100093ea:	071b      	lsls	r3, r3, #28
100093ec:	d502      	bpl.n	100093f4 <uart_rx0_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
100093ee:	1c20      	adds	r0, r4, #0
100093f0:	6923      	ldr	r3, [r4, #16]
100093f2:	4798      	blx	r3
		}
		/* Flush */
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
100093f4:	6823      	ldr	r3, [r4, #0]
100093f6:	7c1b      	ldrb	r3, [r3, #16]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
100093f8:	07eb      	lsls	r3, r5, #31
100093fa:	d522      	bpl.n	10009442 <uart_rx0_isr_handler+0x82>
		struct uart_module *const module)
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	uint16_t received_data = (uart_hw->RECEIVE_DATA.reg & UART_RECEIVE_DATA_MASK);
100093fc:	6823      	ldr	r3, [r4, #0]
100093fe:	7c1b      	ldrb	r3, [r3, #16]
10009400:	b2db      	uxtb	r3, r3

	/* Read value will be at least 8-bits long */
	*(module->rx_buffer_ptr) = received_data;
10009402:	6962      	ldr	r2, [r4, #20]
10009404:	7013      	strb	r3, [r2, #0]
	/* Increment 8-bit pointer */
	module->rx_buffer_ptr += 1;
10009406:	6963      	ldr	r3, [r4, #20]
10009408:	3301      	adds	r3, #1
1000940a:	6163      	str	r3, [r4, #20]

	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
1000940c:	8ba3      	ldrh	r3, [r4, #28]
1000940e:	3b01      	subs	r3, #1
10009410:	b29b      	uxth	r3, r3
10009412:	83a3      	strh	r3, [r4, #28]
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
10009414:	8ba3      	ldrh	r3, [r4, #28]
10009416:	b29b      	uxth	r3, r3
10009418:	2b00      	cmp	r3, #0
1000941a:	d112      	bne.n	10009442 <uart_rx0_isr_handler+0x82>
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
1000941c:	3321      	adds	r3, #33	; 0x21
1000941e:	5ce3      	ldrb	r3, [r4, r3]
10009420:	075b      	lsls	r3, r3, #29
10009422:	d50e      	bpl.n	10009442 <uart_rx0_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
10009424:	2320      	movs	r3, #32
10009426:	5ce3      	ldrb	r3, [r4, r3]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
10009428:	075b      	lsls	r3, r3, #29
1000942a:	d50a      	bpl.n	10009442 <uart_rx0_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
				module->status = STATUS_OK;
1000942c:	2200      	movs	r2, #0
1000942e:	2322      	movs	r3, #34	; 0x22
10009430:	54e2      	strb	r2, [r4, r3]
				module->hw->RX_INTERRUPT_MASK.reg &=
10009432:	6822      	ldr	r2, [r4, #0]
10009434:	7e13      	ldrb	r3, [r2, #24]
10009436:	2101      	movs	r1, #1
10009438:	438b      	bics	r3, r1
1000943a:	7613      	strb	r3, [r2, #24]
					~(UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				(module->callback[UART_RX_COMPLETE])(module);
1000943c:	68e3      	ldr	r3, [r4, #12]
1000943e:	1c20      	adds	r0, r4, #0
10009440:	4798      	blx	r3
			}
		}
	}
}
10009442:	bd38      	pop	{r3, r4, r5, pc}
10009444:	1000ec78 	.word	0x1000ec78

10009448 <uart_tx0_isr_handler>:

static void uart_tx0_isr_handler(void)
{
10009448:	b538      	push	{r3, r4, r5, lr}
	struct uart_module *module = _uart_instances[0];
1000944a:	4b21      	ldr	r3, [pc, #132]	; (100094d0 <uart_tx0_isr_handler+0x88>)
1000944c:	681c      	ldr	r4, [r3, #0]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
1000944e:	6823      	ldr	r3, [r4, #0]
10009450:	791d      	ldrb	r5, [r3, #4]
10009452:	b2ed      	uxtb	r5, r5
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
10009454:	07ea      	lsls	r2, r5, #31
10009456:	d517      	bpl.n	10009488 <uart_tx0_isr_handler+0x40>
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	/* Write value will be at least 8-bits long */
	uint8_t data_to_send = *(module->tx_buffer_ptr);
10009458:	69a2      	ldr	r2, [r4, #24]
1000945a:	7811      	ldrb	r1, [r2, #0]
1000945c:	b2c9      	uxtb	r1, r1
	/* Increment 8-bit pointer */
	(module->tx_buffer_ptr)++;
1000945e:	3201      	adds	r2, #1
10009460:	61a2      	str	r2, [r4, #24]

	/* Write the data to send*/
	uart_hw->TRANSMIT_DATA.reg = data_to_send & UART_TRANSMIT_DATA_MASK;
10009462:	7019      	strb	r1, [r3, #0]

	/* Decrement remaining buffer length */
	(module->remaining_tx_buffer_length)--;
10009464:	8be3      	ldrh	r3, [r4, #30]
10009466:	3b01      	subs	r3, #1
10009468:	b29b      	uxth	r3, r3
1000946a:	83e3      	strh	r3, [r4, #30]
	struct uart_module *module = _uart_instances[0];
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
		_uart_write(module);
		if (module->remaining_tx_buffer_length == 0) {
1000946c:	8be3      	ldrh	r3, [r4, #30]
1000946e:	b29b      	uxth	r3, r3
10009470:	2b00      	cmp	r3, #0
10009472:	d109      	bne.n	10009488 <uart_tx0_isr_handler+0x40>
			module->hw->TX_INTERRUPT_MASK.reg &=
10009474:	6822      	ldr	r2, [r4, #0]
10009476:	7a13      	ldrb	r3, [r2, #8]
10009478:	2101      	movs	r1, #1
1000947a:	438b      	bics	r3, r1
1000947c:	7213      	strb	r3, [r2, #8]
					~UART_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			module->hw->TX_INTERRUPT_MASK.reg |=
1000947e:	6822      	ldr	r2, [r4, #0]
10009480:	7a11      	ldrb	r1, [r2, #8]
10009482:	2310      	movs	r3, #16
10009484:	430b      	orrs	r3, r1
10009486:	7213      	strb	r3, [r2, #8]
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
10009488:	06eb      	lsls	r3, r5, #27
1000948a:	d512      	bpl.n	100094b2 <uart_tx0_isr_handler+0x6a>
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
1000948c:	2321      	movs	r3, #33	; 0x21
1000948e:	5ce3      	ldrb	r3, [r4, r3]
10009490:	07db      	lsls	r3, r3, #31
10009492:	d50e      	bpl.n	100094b2 <uart_tx0_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
10009494:	2320      	movs	r3, #32
10009496:	5ce3      	ldrb	r3, [r4, r3]
			module->hw->TX_INTERRUPT_MASK.reg |=
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
10009498:	07db      	lsls	r3, r3, #31
1000949a:	d50a      	bpl.n	100094b2 <uart_tx0_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
			module->status = STATUS_OK;
1000949c:	2200      	movs	r2, #0
1000949e:	2322      	movs	r3, #34	; 0x22
100094a0:	54e2      	strb	r2, [r4, r3]
			/* Disable interrupt */
			module->hw->TX_INTERRUPT_MASK.reg &=
100094a2:	6822      	ldr	r2, [r4, #0]
100094a4:	7a13      	ldrb	r3, [r2, #8]
100094a6:	2110      	movs	r1, #16
100094a8:	438b      	bics	r3, r1
100094aa:	7213      	strb	r3, [r2, #8]
				~UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			(module->callback[UART_TX_COMPLETE])(module);
100094ac:	1c20      	adds	r0, r4, #0
100094ae:	6863      	ldr	r3, [r4, #4]
100094b0:	4798      	blx	r3
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
100094b2:	06ab      	lsls	r3, r5, #26
100094b4:	d50a      	bpl.n	100094cc <uart_tx0_isr_handler+0x84>
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
100094b6:	2321      	movs	r3, #33	; 0x21
100094b8:	5ce3      	ldrb	r3, [r4, r3]
100094ba:	079b      	lsls	r3, r3, #30
100094bc:	d506      	bpl.n	100094cc <uart_tx0_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
100094be:	2320      	movs	r3, #32
100094c0:	5ce3      	ldrb	r3, [r4, r3]
			(module->callback[UART_TX_COMPLETE])(module);
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
100094c2:	079b      	lsls	r3, r3, #30
100094c4:	d502      	bpl.n	100094cc <uart_tx0_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
			(module->callback[UART_CTS_ACTIVE])(module);
100094c6:	68a3      	ldr	r3, [r4, #8]
100094c8:	1c20      	adds	r0, r4, #0
100094ca:	4798      	blx	r3
		}

	}
}
100094cc:	bd38      	pop	{r3, r4, r5, pc}
100094ce:	46c0      	nop			; (mov r8, r8)
100094d0:	1000ec78 	.word	0x1000ec78

100094d4 <uart_rx1_isr_handler>:

static void uart_rx1_isr_handler(void)
{
100094d4:	b538      	push	{r3, r4, r5, lr}
	struct uart_module *module = _uart_instances[1];
100094d6:	4b20      	ldr	r3, [pc, #128]	; (10009558 <uart_rx1_isr_handler+0x84>)
100094d8:	685c      	ldr	r4, [r3, #4]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->RECEIVE_STATUS.reg;
100094da:	6823      	ldr	r3, [r4, #0]
100094dc:	7d1d      	ldrb	r5, [r3, #20]
100094de:	b2ed      	uxtb	r5, r5
	if (flags & UART_RECEIVE_STATUS_FIFO_OVERRUN) {
100094e0:	066a      	lsls	r2, r5, #25
100094e2:	d513      	bpl.n	1000950c <uart_rx1_isr_handler+0x38>
		/* Store the error code */
		module->status = STATUS_ERR_OVERFLOW;
100094e4:	211e      	movs	r1, #30
100094e6:	2222      	movs	r2, #34	; 0x22
100094e8:	54a1      	strb	r1, [r4, r2]
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
100094ea:	7e1a      	ldrb	r2, [r3, #24]
100094ec:	3123      	adds	r1, #35	; 0x23
100094ee:	438a      	bics	r2, r1
100094f0:	761a      	strb	r2, [r3, #24]
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
100094f2:	2321      	movs	r3, #33	; 0x21
100094f4:	5ce3      	ldrb	r3, [r4, r3]
100094f6:	071b      	lsls	r3, r3, #28
100094f8:	d506      	bpl.n	10009508 <uart_rx1_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
100094fa:	2320      	movs	r3, #32
100094fc:	5ce3      	ldrb	r3, [r4, r3]
		module->status = STATUS_ERR_OVERFLOW;
		/* Disable interrupt */
		module->hw->RX_INTERRUPT_MASK.reg &=
			~(UART_RX_INTERRUPT_MASK_FIFO_OVERRUN_MASK |
			SPI_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
		if ((module->callback_enable_mask & (1 << UART_RX_FIFO_OVERRUN)) &&
100094fe:	071b      	lsls	r3, r3, #28
10009500:	d502      	bpl.n	10009508 <uart_rx1_isr_handler+0x34>
			(module->callback_reg_mask & (1 << UART_RX_FIFO_OVERRUN))) {
			(module->callback[UART_RX_FIFO_OVERRUN])(module);
10009502:	1c20      	adds	r0, r4, #0
10009504:	6923      	ldr	r3, [r4, #16]
10009506:	4798      	blx	r3
		}
		/* Flush */
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
10009508:	6823      	ldr	r3, [r4, #0]
1000950a:	7c1b      	ldrb	r3, [r3, #16]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
1000950c:	07eb      	lsls	r3, r5, #31
1000950e:	d522      	bpl.n	10009556 <uart_rx1_isr_handler+0x82>
		struct uart_module *const module)
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	uint16_t received_data = (uart_hw->RECEIVE_DATA.reg & UART_RECEIVE_DATA_MASK);
10009510:	6823      	ldr	r3, [r4, #0]
10009512:	7c1b      	ldrb	r3, [r3, #16]
10009514:	b2db      	uxtb	r3, r3

	/* Read value will be at least 8-bits long */
	*(module->rx_buffer_ptr) = received_data;
10009516:	6962      	ldr	r2, [r4, #20]
10009518:	7013      	strb	r3, [r2, #0]
	/* Increment 8-bit pointer */
	module->rx_buffer_ptr += 1;
1000951a:	6963      	ldr	r3, [r4, #20]
1000951c:	3301      	adds	r3, #1
1000951e:	6163      	str	r3, [r4, #20]

	/* Decrement length of the remaining buffer */
	module->remaining_rx_buffer_length--;
10009520:	8ba3      	ldrh	r3, [r4, #28]
10009522:	3b01      	subs	r3, #1
10009524:	b29b      	uxth	r3, r3
10009526:	83a3      	strh	r3, [r4, #28]
		uint8_t flush = module->hw->RECEIVE_DATA.reg;
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
10009528:	8ba3      	ldrh	r3, [r4, #28]
1000952a:	b29b      	uxth	r3, r3
1000952c:	2b00      	cmp	r3, #0
1000952e:	d112      	bne.n	10009556 <uart_rx1_isr_handler+0x82>
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
10009530:	3321      	adds	r3, #33	; 0x21
10009532:	5ce3      	ldrb	r3, [r4, r3]
10009534:	075b      	lsls	r3, r3, #29
10009536:	d50e      	bpl.n	10009556 <uart_rx1_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
10009538:	2320      	movs	r3, #32
1000953a:	5ce3      	ldrb	r3, [r4, r3]
		UNUSED(flush);
	}
	if (flags & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
		_uart_read(module);
		if (module->remaining_rx_buffer_length == 0) {
			if ((module->callback_enable_mask & (1 << UART_RX_COMPLETE)) &&
1000953c:	075b      	lsls	r3, r3, #29
1000953e:	d50a      	bpl.n	10009556 <uart_rx1_isr_handler+0x82>
				(module->callback_reg_mask & (1 << UART_RX_COMPLETE))) {
				module->status = STATUS_OK;
10009540:	2200      	movs	r2, #0
10009542:	2322      	movs	r3, #34	; 0x22
10009544:	54e2      	strb	r2, [r4, r3]
				module->hw->RX_INTERRUPT_MASK.reg &=
10009546:	6822      	ldr	r2, [r4, #0]
10009548:	7e13      	ldrb	r3, [r2, #24]
1000954a:	2101      	movs	r1, #1
1000954c:	438b      	bics	r3, r1
1000954e:	7613      	strb	r3, [r2, #24]
					~(UART_RX_INTERRUPT_MASK_RX_FIFO_NOT_EMPTY_MASK);
				(module->callback[UART_RX_COMPLETE])(module);
10009550:	68e3      	ldr	r3, [r4, #12]
10009552:	1c20      	adds	r0, r4, #0
10009554:	4798      	blx	r3
			}
		}
	}
}
10009556:	bd38      	pop	{r3, r4, r5, pc}
10009558:	1000ec78 	.word	0x1000ec78

1000955c <uart_tx1_isr_handler>:

static void uart_tx1_isr_handler(void)
{
1000955c:	b538      	push	{r3, r4, r5, lr}
	struct uart_module *module = _uart_instances[1];
1000955e:	4b21      	ldr	r3, [pc, #132]	; (100095e4 <uart_tx1_isr_handler+0x88>)
10009560:	685c      	ldr	r4, [r3, #4]
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
10009562:	6823      	ldr	r3, [r4, #0]
10009564:	791d      	ldrb	r5, [r3, #4]
10009566:	b2ed      	uxtb	r5, r5
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
10009568:	07ea      	lsls	r2, r5, #31
1000956a:	d517      	bpl.n	1000959c <uart_tx1_isr_handler+0x40>
{
	/* Pointer to the hardware module instance */
	Uart *const uart_hw = module->hw;

	/* Write value will be at least 8-bits long */
	uint8_t data_to_send = *(module->tx_buffer_ptr);
1000956c:	69a2      	ldr	r2, [r4, #24]
1000956e:	7811      	ldrb	r1, [r2, #0]
10009570:	b2c9      	uxtb	r1, r1
	/* Increment 8-bit pointer */
	(module->tx_buffer_ptr)++;
10009572:	3201      	adds	r2, #1
10009574:	61a2      	str	r2, [r4, #24]

	/* Write the data to send*/
	uart_hw->TRANSMIT_DATA.reg = data_to_send & UART_TRANSMIT_DATA_MASK;
10009576:	7019      	strb	r1, [r3, #0]

	/* Decrement remaining buffer length */
	(module->remaining_tx_buffer_length)--;
10009578:	8be3      	ldrh	r3, [r4, #30]
1000957a:	3b01      	subs	r3, #1
1000957c:	b29b      	uxth	r3, r3
1000957e:	83e3      	strh	r3, [r4, #30]
	struct uart_module *module = _uart_instances[1];
	/* get interrupt flags and mask out enabled callbacks */
	uint32_t flags = module->hw->TRANSMIT_STATUS.reg;
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL) {
		_uart_write(module);
		if (module->remaining_tx_buffer_length == 0) {
10009580:	8be3      	ldrh	r3, [r4, #30]
10009582:	b29b      	uxth	r3, r3
10009584:	2b00      	cmp	r3, #0
10009586:	d109      	bne.n	1000959c <uart_tx1_isr_handler+0x40>
			module->hw->TX_INTERRUPT_MASK.reg &=
10009588:	6822      	ldr	r2, [r4, #0]
1000958a:	7a13      	ldrb	r3, [r2, #8]
1000958c:	2101      	movs	r1, #1
1000958e:	438b      	bics	r3, r1
10009590:	7213      	strb	r3, [r2, #8]
					~UART_TX_INTERRUPT_MASK_TX_FIFO_NOT_FULL_MASK;
			module->hw->TX_INTERRUPT_MASK.reg |=
10009592:	6822      	ldr	r2, [r4, #0]
10009594:	7a11      	ldrb	r1, [r2, #8]
10009596:	2310      	movs	r3, #16
10009598:	430b      	orrs	r3, r1
1000959a:	7213      	strb	r3, [r2, #8]
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
1000959c:	06eb      	lsls	r3, r5, #27
1000959e:	d512      	bpl.n	100095c6 <uart_tx1_isr_handler+0x6a>
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
100095a0:	2321      	movs	r3, #33	; 0x21
100095a2:	5ce3      	ldrb	r3, [r4, r3]
100095a4:	07db      	lsls	r3, r3, #31
100095a6:	d50e      	bpl.n	100095c6 <uart_tx1_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
100095a8:	2320      	movs	r3, #32
100095aa:	5ce3      	ldrb	r3, [r4, r3]
			module->hw->TX_INTERRUPT_MASK.reg |=
					UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
		}
	}
	if (flags & UART_TRANSMIT_STATUS_TX_FIFO_EMPTY) {
		if ((module->callback_enable_mask & (1 << UART_TX_COMPLETE)) &&
100095ac:	07db      	lsls	r3, r3, #31
100095ae:	d50a      	bpl.n	100095c6 <uart_tx1_isr_handler+0x6a>
			(module->callback_reg_mask & (1 << UART_TX_COMPLETE))) {
			module->status = STATUS_OK;
100095b0:	2200      	movs	r2, #0
100095b2:	2322      	movs	r3, #34	; 0x22
100095b4:	54e2      	strb	r2, [r4, r3]
			/* Disable interrupt */
			module->hw->TX_INTERRUPT_MASK.reg &=
100095b6:	6822      	ldr	r2, [r4, #0]
100095b8:	7a13      	ldrb	r3, [r2, #8]
100095ba:	2110      	movs	r1, #16
100095bc:	438b      	bics	r3, r1
100095be:	7213      	strb	r3, [r2, #8]
				~UART_TX_INTERRUPT_MASK_TX_FIFO_EMPTY_MASK;
			(module->callback[UART_TX_COMPLETE])(module);
100095c0:	1c20      	adds	r0, r4, #0
100095c2:	6863      	ldr	r3, [r4, #4]
100095c4:	4798      	blx	r3
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
100095c6:	06ab      	lsls	r3, r5, #26
100095c8:	d50a      	bpl.n	100095e0 <uart_tx1_isr_handler+0x84>
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
100095ca:	2321      	movs	r3, #33	; 0x21
100095cc:	5ce3      	ldrb	r3, [r4, r3]
100095ce:	079b      	lsls	r3, r3, #30
100095d0:	d506      	bpl.n	100095e0 <uart_tx1_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
100095d2:	2320      	movs	r3, #32
100095d4:	5ce3      	ldrb	r3, [r4, r3]
			(module->callback[UART_TX_COMPLETE])(module);
		}

	}
	if (flags & UART_TRANSMIT_STATUS_CTS_ACTIVE) {
		if ((module->callback_enable_mask & (1 << UART_CTS_ACTIVE)) &&
100095d6:	079b      	lsls	r3, r3, #30
100095d8:	d502      	bpl.n	100095e0 <uart_tx1_isr_handler+0x84>
			(module->callback_reg_mask & (1 << UART_CTS_ACTIVE))) {
			(module->callback[UART_CTS_ACTIVE])(module);
100095da:	68a3      	ldr	r3, [r4, #8]
100095dc:	1c20      	adds	r0, r4, #0
100095de:	4798      	blx	r3
		}

	}
}
100095e0:	bd38      	pop	{r3, r4, r5, pc}
100095e2:	46c0      	nop			; (mov r8, r8)
100095e4:	1000ec78 	.word	0x1000ec78

100095e8 <uart_get_config_defaults>:
 * \param[out] config  Pointer to configuration structure to be initiated
 */
void uart_get_config_defaults(
		struct uart_config *const config)
{
	config->baud_rate = 115200;
100095e8:	23e1      	movs	r3, #225	; 0xe1
100095ea:	025b      	lsls	r3, r3, #9
100095ec:	6003      	str	r3, [r0, #0]
	config->data_bits = UART_8_BITS;
100095ee:	2300      	movs	r3, #0
100095f0:	7103      	strb	r3, [r0, #4]
	config->stop_bits = UART_1_STOP_BIT;
100095f2:	7143      	strb	r3, [r0, #5]
	config->parity = UART_NO_PARITY;
100095f4:	7183      	strb	r3, [r0, #6]
	config->flow_control = false;
100095f6:	71c3      	strb	r3, [r0, #7]
	config->pin_number_pad[0] = PIN_LP_GPIO_2_MUX2_UART0_RXD;
100095f8:	3302      	adds	r3, #2
100095fa:	6083      	str	r3, [r0, #8]
	config->pin_number_pad[1] = PIN_LP_GPIO_3_MUX2_UART0_TXD;
100095fc:	2203      	movs	r2, #3
100095fe:	60c2      	str	r2, [r0, #12]
	config->pin_number_pad[2] = PIN_LP_GPIO_4_MUX2_UART0_CTS;
10009600:	3201      	adds	r2, #1
10009602:	6102      	str	r2, [r0, #16]
	config->pin_number_pad[3] = PIN_LP_GPIO_5_MUX2_UART0_RTS;
10009604:	3201      	adds	r2, #1
10009606:	6142      	str	r2, [r0, #20]
	
	config->pinmux_sel_pad[0] = MUX_LP_GPIO_2_MUX2_UART0_RXD;
10009608:	6183      	str	r3, [r0, #24]
	config->pinmux_sel_pad[1] = MUX_LP_GPIO_3_MUX2_UART0_TXD;
1000960a:	61c3      	str	r3, [r0, #28]
	config->pinmux_sel_pad[2] = MUX_LP_GPIO_4_MUX2_UART0_CTS;
1000960c:	6203      	str	r3, [r0, #32]
	config->pinmux_sel_pad[3] = MUX_LP_GPIO_5_MUX2_UART0_RTS;
1000960e:	6243      	str	r3, [r0, #36]	; 0x24
}
10009610:	4770      	bx	lr
10009612:	46c0      	nop			; (mov r8, r8)

10009614 <uart_init>:
 *
 * \retval STATUS_OK                       The initialization was successful
 */
enum status_code uart_init(struct uart_module *const module, Uart * const hw,
		const struct uart_config *const config)
{
10009614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10009616:	464f      	mov	r7, r9
10009618:	4646      	mov	r6, r8
1000961a:	b4c0      	push	{r6, r7}
1000961c:	1c05      	adds	r5, r0, #0
1000961e:	1c17      	adds	r7, r2, #0

	uint8_t config_temp = 0;
	uint8_t i,index;

	/* Assign module pointer to software instance struct */
	module->hw = hw;
10009620:	6001      	str	r1, [r0, #0]

	for (i = 0; i < UART_CALLBACK_N; i++) {
		module->callback[i] = NULL;
10009622:	2300      	movs	r3, #0
10009624:	6043      	str	r3, [r0, #4]
10009626:	6083      	str	r3, [r0, #8]
10009628:	60c3      	str	r3, [r0, #12]
1000962a:	6103      	str	r3, [r0, #16]
	}
	module->rx_buffer_ptr = NULL;
1000962c:	6143      	str	r3, [r0, #20]
	module->tx_buffer_ptr = NULL;
1000962e:	6183      	str	r3, [r0, #24]
	module->remaining_rx_buffer_length = 0;
10009630:	2200      	movs	r2, #0
10009632:	8383      	strh	r3, [r0, #28]
	module->remaining_tx_buffer_length = 0;
10009634:	83c3      	strh	r3, [r0, #30]
	module->callback_reg_mask = 0;
10009636:	3320      	adds	r3, #32
10009638:	54c2      	strb	r2, [r0, r3]
	module->callback_enable_mask = 0;
1000963a:	3301      	adds	r3, #1
1000963c:	54c2      	strb	r2, [r0, r3]
	module->status = STATUS_OK;
1000963e:	3301      	adds	r3, #1
10009640:	54c2      	strb	r2, [r0, r3]

	if (hw == UART0) {
10009642:	4b55      	ldr	r3, [pc, #340]	; (10009798 <uart_init+0x184>)
10009644:	4299      	cmp	r1, r3
10009646:	d118      	bne.n	1000967a <uart_init+0x66>
		system_peripheral_reset(PERIPHERAL_UART0_CORE);
10009648:	2009      	movs	r0, #9
1000964a:	4c54      	ldr	r4, [pc, #336]	; (1000979c <uart_init+0x188>)
1000964c:	47a0      	blx	r4
		system_peripheral_reset(PERIPHERAL_UART0_IF);
1000964e:	200a      	movs	r0, #10
10009650:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART0_CORE);
10009652:	2009      	movs	r0, #9
10009654:	4c52      	ldr	r4, [pc, #328]	; (100097a0 <uart_init+0x18c>)
10009656:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART0_IF);
10009658:	200a      	movs	r0, #10
1000965a:	47a0      	blx	r4
		_uart_instances[0] = module;
1000965c:	4b51      	ldr	r3, [pc, #324]	; (100097a4 <uart_init+0x190>)
1000965e:	601d      	str	r5, [r3, #0]
		system_register_isr(RAM_ISR_TABLE_UARTRX0_INDEX, (uint32_t)uart_rx0_isr_handler);
10009660:	2010      	movs	r0, #16
10009662:	4951      	ldr	r1, [pc, #324]	; (100097a8 <uart_init+0x194>)
10009664:	4c51      	ldr	r4, [pc, #324]	; (100097ac <uart_init+0x198>)
10009666:	47a0      	blx	r4
		system_register_isr(RAM_ISR_TABLE_UARTTX0_INDEX, (uint32_t)uart_tx0_isr_handler);
10009668:	2011      	movs	r0, #17
1000966a:	4951      	ldr	r1, [pc, #324]	; (100097b0 <uart_init+0x19c>)
1000966c:	47a0      	blx	r4

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
1000966e:	4b51      	ldr	r3, [pc, #324]	; (100097b4 <uart_init+0x1a0>)
10009670:	2201      	movs	r2, #1
10009672:	601a      	str	r2, [r3, #0]
10009674:	3201      	adds	r2, #1
10009676:	601a      	str	r2, [r3, #0]
10009678:	e01a      	b.n	100096b0 <uart_init+0x9c>
		NVIC_EnableIRQ(UART0_RX_IRQn);
		NVIC_EnableIRQ(UART0_TX_IRQn);
	} else if (hw == UART1) {
1000967a:	4b4f      	ldr	r3, [pc, #316]	; (100097b8 <uart_init+0x1a4>)
1000967c:	4299      	cmp	r1, r3
1000967e:	d117      	bne.n	100096b0 <uart_init+0x9c>
		system_peripheral_reset(PERIPHERAL_UART1_CORE);
10009680:	200b      	movs	r0, #11
10009682:	4c46      	ldr	r4, [pc, #280]	; (1000979c <uart_init+0x188>)
10009684:	47a0      	blx	r4
		system_peripheral_reset(PERIPHERAL_UART1_IF);
10009686:	200c      	movs	r0, #12
10009688:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART1_CORE);
1000968a:	200b      	movs	r0, #11
1000968c:	4c44      	ldr	r4, [pc, #272]	; (100097a0 <uart_init+0x18c>)
1000968e:	47a0      	blx	r4
		system_clock_peripheral_enable(PERIPHERAL_UART1_IF);
10009690:	200c      	movs	r0, #12
10009692:	47a0      	blx	r4
		_uart_instances[1] = module;
10009694:	4b43      	ldr	r3, [pc, #268]	; (100097a4 <uart_init+0x190>)
10009696:	605d      	str	r5, [r3, #4]
		system_register_isr(RAM_ISR_TABLE_UARTRX1_INDEX, (uint32_t)uart_rx1_isr_handler);
10009698:	2012      	movs	r0, #18
1000969a:	4948      	ldr	r1, [pc, #288]	; (100097bc <uart_init+0x1a8>)
1000969c:	4c43      	ldr	r4, [pc, #268]	; (100097ac <uart_init+0x198>)
1000969e:	47a0      	blx	r4
		system_register_isr(RAM_ISR_TABLE_UARTTX1_INDEX, (uint32_t)uart_tx1_isr_handler);
100096a0:	2013      	movs	r0, #19
100096a2:	4947      	ldr	r1, [pc, #284]	; (100097c0 <uart_init+0x1ac>)
100096a4:	47a0      	blx	r4
100096a6:	4b43      	ldr	r3, [pc, #268]	; (100097b4 <uart_init+0x1a0>)
100096a8:	2204      	movs	r2, #4
100096aa:	601a      	str	r2, [r3, #0]
100096ac:	3204      	adds	r2, #4
100096ae:	601a      	str	r2, [r3, #0]
		NVIC_EnableIRQ(UART1_RX_IRQn);
		NVIC_EnableIRQ(UART1_TX_IRQn);
	}

	/* Set the pinmux for this UART module. */
	if(config->flow_control) {
100096b0:	79fb      	ldrb	r3, [r7, #7]
		index = 4;
100096b2:	2204      	movs	r2, #4
100096b4:	4690      	mov	r8, r2
		NVIC_EnableIRQ(UART1_RX_IRQn);
		NVIC_EnableIRQ(UART1_TX_IRQn);
	}

	/* Set the pinmux for this UART module. */
	if(config->flow_control) {
100096b6:	2b00      	cmp	r3, #0
100096b8:	d152      	bne.n	10009760 <uart_init+0x14c>
		index = 4;
	} else {
		index = 2;
100096ba:	3302      	adds	r3, #2
100096bc:	4698      	mov	r8, r3
100096be:	e04f      	b.n	10009760 <uart_init+0x14c>
	}
	for(i = 0; i < index; i++) {
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
100096c0:	7830      	ldrb	r0, [r6, #0]
100096c2:	8a31      	ldrh	r1, [r6, #16]
100096c4:	47c8      	blx	r9
	if(config->flow_control) {
		index = 4;
	} else {
		index = 2;
	}
	for(i = 0; i < index; i++) {
100096c6:	3401      	adds	r4, #1
100096c8:	b2e4      	uxtb	r4, r4
100096ca:	3604      	adds	r6, #4
100096cc:	4544      	cmp	r4, r8
100096ce:	d3f7      	bcc.n	100096c0 <uart_init+0xac>
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
								(uint16_t)(config->pinmux_sel_pad[i]));
	}

	/* empty UART FIFO */
	while (module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
100096d0:	682b      	ldr	r3, [r5, #0]
100096d2:	7d1a      	ldrb	r2, [r3, #20]
100096d4:	07d2      	lsls	r2, r2, #31
100096d6:	d504      	bpl.n	100096e2 <uart_init+0xce>
100096d8:	2101      	movs	r1, #1
		i = module->hw->RECEIVE_DATA.reg;
100096da:	7c1a      	ldrb	r2, [r3, #16]
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
								(uint16_t)(config->pinmux_sel_pad[i]));
	}

	/* empty UART FIFO */
	while (module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY) {
100096dc:	7d1a      	ldrb	r2, [r3, #20]
100096de:	420a      	tst	r2, r1
100096e0:	d1fb      	bne.n	100096da <uart_init+0xc6>
		i = module->hw->RECEIVE_DATA.reg;
	}
	
	/* reset configuration register */
	module->hw->UART_CONFIGURATION.reg = 0;
100096e2:	2100      	movs	r1, #0
100096e4:	2220      	movs	r2, #32
100096e6:	5499      	strb	r1, [r3, r2]

	/* program the uart configuration. */
	if(config->flow_control) {
100096e8:	79fb      	ldrb	r3, [r7, #7]
		config_temp |= UART_UART_CONFIGURATION_CTS_ENABLE_1;
100096ea:	1e59      	subs	r1, r3, #1
100096ec:	418b      	sbcs	r3, r1
100096ee:	0159      	lsls	r1, r3, #5
100096f0:	797b      	ldrb	r3, [r7, #5]
100096f2:	793a      	ldrb	r2, [r7, #4]
100096f4:	4313      	orrs	r3, r2
	}
	config_temp |= config->data_bits;
	config_temp |= config->stop_bits;
100096f6:	430b      	orrs	r3, r1
	switch(config->parity) {
100096f8:	79ba      	ldrb	r2, [r7, #6]
100096fa:	2a02      	cmp	r2, #2
100096fc:	d00d      	beq.n	1000971a <uart_init+0x106>
100096fe:	b2d1      	uxtb	r1, r2
10009700:	2902      	cmp	r1, #2
10009702:	d802      	bhi.n	1000970a <uart_init+0xf6>
10009704:	2a01      	cmp	r2, #1
10009706:	d005      	beq.n	10009714 <uart_init+0x100>
10009708:	e00f      	b.n	1000972a <uart_init+0x116>
1000970a:	2a03      	cmp	r2, #3
1000970c:	d008      	beq.n	10009720 <uart_init+0x10c>
1000970e:	2a04      	cmp	r2, #4
10009710:	d009      	beq.n	10009726 <uart_init+0x112>
10009712:	e00a      	b.n	1000972a <uart_init+0x116>
		case UART_NO_PARITY:
			config_temp |= UART_UART_CONFIGURATION_PARITY_ENABLE_0;
			break;

		case UART_EVEN_PARITY:
			config_temp |= UART_UART_CONFIGURATION_PARITY_ENABLE_1;
10009714:	2202      	movs	r2, #2
10009716:	4313      	orrs	r3, r2
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_0;
			break;
10009718:	e007      	b.n	1000972a <uart_init+0x116>

		case UART_ODD_PARITY:
			config_temp |= UART_UART_CONFIGURATION_PARITY_ENABLE_1;
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_1;
1000971a:	2206      	movs	r2, #6
1000971c:	4313      	orrs	r3, r2
			break;
1000971e:	e004      	b.n	1000972a <uart_init+0x116>

		case UART_SPACE_PARITY:
			config_temp |= UART_UART_CONFIGURATION_PARITY_ENABLE_1;
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_2;
10009720:	220a      	movs	r2, #10
10009722:	4313      	orrs	r3, r2
			break;
10009724:	e001      	b.n	1000972a <uart_init+0x116>

		case UART_MARK_PARITY:
			config_temp |= UART_UART_CONFIGURATION_PARITY_ENABLE_1;
			config_temp |= UART_UART_CONFIGURATION_PARITY_MODE_3;
10009726:	220e      	movs	r2, #14
10009728:	4313      	orrs	r3, r2
			break;

		default:
			break;
	}	
	module->hw->UART_CONFIGURATION.reg = config_temp;
1000972a:	2220      	movs	r2, #32
1000972c:	6829      	ldr	r1, [r5, #0]
1000972e:	548b      	strb	r3, [r1, r2]

	/* Calculate the baud rate. */
	uart_set_baudrate(module, config->baud_rate);
10009730:	683e      	ldr	r6, [r7, #0]
	uint16_t integerpart = 0;
	uint8_t fractionalpart = 0;
	uint32_t diff;
	uint8_t i = 0;

	clock = system_clock_get_value();
10009732:	4b24      	ldr	r3, [pc, #144]	; (100097c4 <uart_init+0x1b0>)
10009734:	4798      	blx	r3
10009736:	1c04      	adds	r4, r0, #0
	integerpart = clock / baud_rate;
10009738:	1c31      	adds	r1, r6, #0
1000973a:	4b23      	ldr	r3, [pc, #140]	; (100097c8 <uart_init+0x1b4>)
1000973c:	4798      	blx	r3
1000973e:	b282      	uxth	r2, r0
	diff = clock - (baud_rate * integerpart);
10009740:	0400      	lsls	r0, r0, #16
10009742:	0c00      	lsrs	r0, r0, #16
10009744:	4370      	muls	r0, r6
10009746:	1a20      	subs	r0, r4, r0
	i = 0;
	while(diff > (baud_rate / 16)) {
10009748:	0931      	lsrs	r1, r6, #4
1000974a:	4288      	cmp	r0, r1
1000974c:	d906      	bls.n	1000975c <uart_init+0x148>
1000974e:	2300      	movs	r3, #0
		i++;
10009750:	3301      	adds	r3, #1
10009752:	b2db      	uxtb	r3, r3
		diff -= (baud_rate / 16);
10009754:	1a40      	subs	r0, r0, r1

	clock = system_clock_get_value();
	integerpart = clock / baud_rate;
	diff = clock - (baud_rate * integerpart);
	i = 0;
	while(diff > (baud_rate / 16)) {
10009756:	4288      	cmp	r0, r1
10009758:	d8fa      	bhi.n	10009750 <uart_init+0x13c>
1000975a:	e007      	b.n	1000976c <uart_init+0x158>
	uint8_t i = 0;

	clock = system_clock_get_value();
	integerpart = clock / baud_rate;
	diff = clock - (baud_rate * integerpart);
	i = 0;
1000975c:	2300      	movs	r3, #0
1000975e:	e005      	b.n	1000976c <uart_init+0x158>
10009760:	1c3e      	adds	r6, r7, #0
10009762:	3608      	adds	r6, #8
 *
 * \retval STATUS_OK                       The initialization was successful
 */
enum status_code uart_init(struct uart_module *const module, Uart * const hw,
		const struct uart_config *const config)
{
10009764:	2400      	movs	r4, #0
		index = 4;
	} else {
		index = 2;
	}
	for(i = 0; i < index; i++) {
		gpio_pinmux_cofiguration(config->pin_number_pad[i], \
10009766:	4b19      	ldr	r3, [pc, #100]	; (100097cc <uart_init+0x1b8>)
10009768:	4699      	mov	r9, r3
1000976a:	e7a9      	b.n	100096c0 <uart_init+0xac>
		i++;
		diff -= (baud_rate / 16);
	}
	fractionalpart = (i + 1) / 2;

	module->hw->UART_CLOCK_SOURCE.reg = UART_UART_CLOCK_SOURCE_CLOCK_SELECT_0;
1000976c:	2100      	movs	r1, #0
1000976e:	2028      	movs	r0, #40	; 0x28
10009770:	682c      	ldr	r4, [r5, #0]
10009772:	5421      	strb	r1, [r4, r0]
	i = 0;
	while(diff > (baud_rate / 16)) {
		i++;
		diff -= (baud_rate / 16);
	}
	fractionalpart = (i + 1) / 2;
10009774:	3301      	adds	r3, #1

	module->hw->UART_CLOCK_SOURCE.reg = UART_UART_CLOCK_SOURCE_CLOCK_SELECT_0;
	module->hw->UART_BAUD_RATE.reg =
10009776:	071b      	lsls	r3, r3, #28
10009778:	0f5b      	lsrs	r3, r3, #29
1000977a:	00d2      	lsls	r2, r2, #3
1000977c:	4313      	orrs	r3, r2
1000977e:	b29b      	uxth	r3, r3
10009780:	682a      	ldr	r2, [r5, #0]
10009782:	8493      	strh	r3, [r2, #36]	; 0x24
	module->hw->UART_CONFIGURATION.reg = config_temp;

	/* Calculate the baud rate. */
	uart_set_baudrate(module, config->baud_rate);

	module->hw->RX_INTERRUPT_MASK.reg = 0;	// disable int at initialization, enable it at read time
10009784:	682b      	ldr	r3, [r5, #0]
10009786:	7619      	strb	r1, [r3, #24]
	module->hw->TX_INTERRUPT_MASK.reg = 0;	// disable int at initialization, enable it at write time
10009788:	682b      	ldr	r3, [r5, #0]
1000978a:	7219      	strb	r1, [r3, #8]
	
	return STATUS_OK;
}
1000978c:	2000      	movs	r0, #0
1000978e:	bc0c      	pop	{r2, r3}
10009790:	4690      	mov	r8, r2
10009792:	4699      	mov	r9, r3
10009794:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10009796:	46c0      	nop			; (mov r8, r8)
10009798:	40004000 	.word	0x40004000
1000979c:	10008f49 	.word	0x10008f49
100097a0:	10008bed 	.word	0x10008bed
100097a4:	1000ec78 	.word	0x1000ec78
100097a8:	100093c1 	.word	0x100093c1
100097ac:	100093b1 	.word	0x100093b1
100097b0:	10009449 	.word	0x10009449
100097b4:	e000e100 	.word	0xe000e100
100097b8:	40005000 	.word	0x40005000
100097bc:	100094d5 	.word	0x100094d5
100097c0:	1000955d 	.word	0x1000955d
100097c4:	10008be1 	.word	0x10008be1
100097c8:	10009c95 	.word	0x10009c95
100097cc:	10008a05 	.word	0x10008a05

100097d0 <uart_write_wait>:
* \retval STATUS_OK         If the operation was completed
*/
enum status_code uart_write_wait(struct uart_module *const module,
		const uint8_t tx_data)
{
	while (!(module->hw->TRANSMIT_STATUS.reg & UART_TRANSMIT_STATUS_TX_FIFO_NOT_FULL));
100097d0:	6802      	ldr	r2, [r0, #0]
100097d2:	2001      	movs	r0, #1
100097d4:	7913      	ldrb	r3, [r2, #4]
100097d6:	4203      	tst	r3, r0
100097d8:	d0fc      	beq.n	100097d4 <uart_write_wait+0x4>

	module->hw->TRANSMIT_DATA.reg = tx_data;
100097da:	7011      	strb	r1, [r2, #0]
	
	return STATUS_OK;
}
100097dc:	2000      	movs	r0, #0
100097de:	4770      	bx	lr

100097e0 <uart_read_wait>:
* \retval STATUS_OK                If the operation was completed
*/
enum status_code uart_read_wait(struct uart_module *const module,
		uint8_t *const rx_data)
{
	while (!(module->hw->RECEIVE_STATUS.reg & UART_RECEIVE_STATUS_RX_FIFO_NOT_EMPTY));
100097e0:	6802      	ldr	r2, [r0, #0]
100097e2:	2001      	movs	r0, #1
100097e4:	7d13      	ldrb	r3, [r2, #20]
100097e6:	4203      	tst	r3, r0
100097e8:	d0fc      	beq.n	100097e4 <uart_read_wait+0x4>

	*rx_data = module->hw->RECEIVE_DATA.reg;
100097ea:	7c13      	ldrb	r3, [r2, #16]
100097ec:	700b      	strb	r3, [r1, #0]
	
	return STATUS_OK;
}
100097ee:	2000      	movs	r0, #0
100097f0:	4770      	bx	lr
100097f2:	46c0      	nop			; (mov r8, r8)

100097f4 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
100097f4:	1c03      	adds	r3, r0, #0
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
100097f6:	4a06      	ldr	r2, [pc, #24]	; (10009810 <_sbrk+0x1c>)
100097f8:	6812      	ldr	r2, [r2, #0]
100097fa:	2a00      	cmp	r2, #0
100097fc:	d102      	bne.n	10009804 <_sbrk+0x10>
		heap = (unsigned char *)&_end;
100097fe:	4905      	ldr	r1, [pc, #20]	; (10009814 <_sbrk+0x20>)
10009800:	4a03      	ldr	r2, [pc, #12]	; (10009810 <_sbrk+0x1c>)
10009802:	6011      	str	r1, [r2, #0]
	}
	prev_heap = heap;
10009804:	4a02      	ldr	r2, [pc, #8]	; (10009810 <_sbrk+0x1c>)
10009806:	6810      	ldr	r0, [r2, #0]

	heap += incr;
10009808:	18c3      	adds	r3, r0, r3
1000980a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
1000980c:	4770      	bx	lr
1000980e:	46c0      	nop			; (mov r8, r8)
10009810:	1000ec30 	.word	0x1000ec30
10009814:	1000f680 	.word	0x1000f680

10009818 <_close>:
}

extern int _close(int file)
{
	return -1;
}
10009818:	2001      	movs	r0, #1
1000981a:	4240      	negs	r0, r0
1000981c:	4770      	bx	lr
1000981e:	46c0      	nop			; (mov r8, r8)

10009820 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
10009820:	2380      	movs	r3, #128	; 0x80
10009822:	019b      	lsls	r3, r3, #6
10009824:	604b      	str	r3, [r1, #4]

	return 0;
}
10009826:	2000      	movs	r0, #0
10009828:	4770      	bx	lr
1000982a:	46c0      	nop			; (mov r8, r8)

1000982c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
1000982c:	2001      	movs	r0, #1
1000982e:	4770      	bx	lr

10009830 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
10009830:	2000      	movs	r0, #0
10009832:	4770      	bx	lr

10009834 <timer_callback>:

#define CONF_TIMER_RELOAD_VALUE 26000000/1000

static void timer_callback(void)
{
	task_1++;
10009834:	4a04      	ldr	r2, [pc, #16]	; (10009848 <timer_callback+0x14>)
10009836:	6813      	ldr	r3, [r2, #0]
10009838:	3301      	adds	r3, #1
1000983a:	6013      	str	r3, [r2, #0]
	task_2++;
1000983c:	4a03      	ldr	r2, [pc, #12]	; (1000984c <timer_callback+0x18>)
1000983e:	6813      	ldr	r3, [r2, #0]
10009840:	3301      	adds	r3, #1
10009842:	6013      	str	r3, [r2, #0]
}
10009844:	4770      	bx	lr
10009846:	46c0      	nop			; (mov r8, r8)
10009848:	1000ec34 	.word	0x1000ec34
1000984c:	1000ec38 	.word	0x1000ec38

10009850 <usart_serial_getchar>:
 * \param[out]    c       Destination for the read character.
 */
static inline void usart_serial_getchar(
		struct uart_module *const module,
		uint8_t *c)
{
10009850:	b570      	push	{r4, r5, r6, lr}
10009852:	1c06      	adds	r6, r0, #0
10009854:	1c0d      	adds	r5, r1, #0
	while(STATUS_OK != uart_read_wait(module, c));
10009856:	4c03      	ldr	r4, [pc, #12]	; (10009864 <usart_serial_getchar+0x14>)
10009858:	1c30      	adds	r0, r6, #0
1000985a:	1c29      	adds	r1, r5, #0
1000985c:	47a0      	blx	r4
1000985e:	2800      	cmp	r0, #0
10009860:	d1fa      	bne.n	10009858 <usart_serial_getchar+0x8>
}
10009862:	bd70      	pop	{r4, r5, r6, pc}
10009864:	100097e1 	.word	0x100097e1

10009868 <usart_serial_putchar>:
 * \return Status code
 */
static inline enum status_code usart_serial_putchar(
		struct uart_module *const module,
		uint8_t c)
{
10009868:	b570      	push	{r4, r5, r6, lr}
1000986a:	1c06      	adds	r6, r0, #0
1000986c:	1c0d      	adds	r5, r1, #0
	while(STATUS_OK !=uart_write_wait(module, c));
1000986e:	4c03      	ldr	r4, [pc, #12]	; (1000987c <usart_serial_putchar+0x14>)
10009870:	1c30      	adds	r0, r6, #0
10009872:	1c29      	adds	r1, r5, #0
10009874:	47a0      	blx	r4
10009876:	2800      	cmp	r0, #0
10009878:	d1fa      	bne.n	10009870 <usart_serial_putchar+0x8>

	return STATUS_OK;
}
1000987a:	bd70      	pop	{r4, r5, r6, pc}
1000987c:	100097d1 	.word	0x100097d1

10009880 <readSentralData>:
int16_t accelCount[3];
float ax, ay, az;
int16_t gyroCount[3];
float gx, gy, gz;

void readSentralData(float * destination){
10009880:	b5f0      	push	{r4, r5, r6, r7, lr}
10009882:	4657      	mov	r7, sl
10009884:	464e      	mov	r6, r9
10009886:	4645      	mov	r5, r8
10009888:	b4e0      	push	{r5, r6, r7}
1000988a:	b08c      	sub	sp, #48	; 0x30
1000988c:	1c06      	adds	r6, r0, #0
1000988e:	2400      	movs	r4, #0
	uint8_t rawData[40];
	uint32_t data;
	for(uint8_t i = 0; i < 40; i++) {
		rawData[i] = i2c_sentral_read_reg(0x00 + i);
10009890:	4d61      	ldr	r5, [pc, #388]	; (10009a18 <readSentralData+0x198>)
10009892:	b2e0      	uxtb	r0, r4
10009894:	47a8      	blx	r5
10009896:	ab02      	add	r3, sp, #8
10009898:	54e0      	strb	r0, [r4, r3]
1000989a:	3401      	adds	r4, #1
float gx, gy, gz;

void readSentralData(float * destination){
	uint8_t rawData[40];
	uint32_t data;
	for(uint8_t i = 0; i < 40; i++) {
1000989c:	2c28      	cmp	r4, #40	; 0x28
1000989e:	d1f8      	bne.n	10009892 <readSentralData+0x12>
		rawData[i] = i2c_sentral_read_reg(0x00 + i);
	}
	
	// Quaternion data
	data = ((rawData[3] << 24)|(rawData[2] << 16)|(rawData[1] << 8) | rawData[0]) ;
100098a0:	1c1c      	adds	r4, r3, #0
100098a2:	78db      	ldrb	r3, [r3, #3]
100098a4:	061a      	lsls	r2, r3, #24
100098a6:	78a3      	ldrb	r3, [r4, #2]
100098a8:	041b      	lsls	r3, r3, #16
100098aa:	4313      	orrs	r3, r2
100098ac:	7822      	ldrb	r2, [r4, #0]
100098ae:	4313      	orrs	r3, r2
100098b0:	7862      	ldrb	r2, [r4, #1]
100098b2:	0212      	lsls	r2, r2, #8
100098b4:	4313      	orrs	r3, r2
100098b6:	9301      	str	r3, [sp, #4]
	memcpy(&destination[0], &data, 4);
100098b8:	1c30      	adds	r0, r6, #0
100098ba:	a901      	add	r1, sp, #4
100098bc:	2204      	movs	r2, #4
100098be:	4d57      	ldr	r5, [pc, #348]	; (10009a1c <readSentralData+0x19c>)
100098c0:	47a8      	blx	r5
	data = ((rawData[7] << 24)|(rawData[6] << 16)|(rawData[5] << 8) | rawData[4]) ;
100098c2:	79e3      	ldrb	r3, [r4, #7]
100098c4:	061a      	lsls	r2, r3, #24
100098c6:	79a3      	ldrb	r3, [r4, #6]
100098c8:	041b      	lsls	r3, r3, #16
100098ca:	4313      	orrs	r3, r2
100098cc:	7922      	ldrb	r2, [r4, #4]
100098ce:	4313      	orrs	r3, r2
100098d0:	7962      	ldrb	r2, [r4, #5]
100098d2:	0212      	lsls	r2, r2, #8
100098d4:	4313      	orrs	r3, r2
100098d6:	9301      	str	r3, [sp, #4]
	memcpy(&destination[1], &data, 4);
100098d8:	1d30      	adds	r0, r6, #4
100098da:	a901      	add	r1, sp, #4
100098dc:	2204      	movs	r2, #4
100098de:	47a8      	blx	r5
	data = ((rawData[11] << 24)|(rawData[10] << 16)|(rawData[9] << 8) | rawData[8]) ;
100098e0:	7ae3      	ldrb	r3, [r4, #11]
100098e2:	061a      	lsls	r2, r3, #24
100098e4:	7aa3      	ldrb	r3, [r4, #10]
100098e6:	041b      	lsls	r3, r3, #16
100098e8:	4313      	orrs	r3, r2
100098ea:	7a22      	ldrb	r2, [r4, #8]
100098ec:	4313      	orrs	r3, r2
100098ee:	7a62      	ldrb	r2, [r4, #9]
100098f0:	0212      	lsls	r2, r2, #8
100098f2:	4313      	orrs	r3, r2
100098f4:	9301      	str	r3, [sp, #4]
	memcpy(&destination[2], &data, 4);
100098f6:	1c30      	adds	r0, r6, #0
100098f8:	3008      	adds	r0, #8
100098fa:	a901      	add	r1, sp, #4
100098fc:	2204      	movs	r2, #4
100098fe:	47a8      	blx	r5
	data = ((rawData[15] << 24)|(rawData[14] << 16)|(rawData[13] << 8) | rawData[12]) ;
10009900:	7be3      	ldrb	r3, [r4, #15]
10009902:	061a      	lsls	r2, r3, #24
10009904:	7ba3      	ldrb	r3, [r4, #14]
10009906:	041b      	lsls	r3, r3, #16
10009908:	4313      	orrs	r3, r2
1000990a:	7b22      	ldrb	r2, [r4, #12]
1000990c:	4313      	orrs	r3, r2
1000990e:	7b62      	ldrb	r2, [r4, #13]
10009910:	0212      	lsls	r2, r2, #8
10009912:	4313      	orrs	r3, r2
10009914:	9301      	str	r3, [sp, #4]
	memcpy(&destination[3], &data, 4);
10009916:	1c30      	adds	r0, r6, #0
10009918:	300c      	adds	r0, #12
1000991a:	a901      	add	r1, sp, #4
1000991c:	2204      	movs	r2, #4
1000991e:	47a8      	blx	r5
	
	// Magnetometer - +-1000 uT ------> 200/65536 uT = 1 * 10/32.768 milli Gauss
	destination[4] = (float)((rawData[19] << 8) | rawData[18]) * 10.0 / 32.768;
10009920:	7ce0      	ldrb	r0, [r4, #19]
10009922:	0200      	lsls	r0, r0, #8
10009924:	7ca3      	ldrb	r3, [r4, #18]
10009926:	4318      	orrs	r0, r3
10009928:	4d3d      	ldr	r5, [pc, #244]	; (10009a20 <readSentralData+0x1a0>)
1000992a:	47a8      	blx	r5
1000992c:	4b3d      	ldr	r3, [pc, #244]	; (10009a24 <readSentralData+0x1a4>)
1000992e:	4699      	mov	r9, r3
10009930:	4798      	blx	r3
10009932:	4b3d      	ldr	r3, [pc, #244]	; (10009a28 <readSentralData+0x1a8>)
10009934:	469a      	mov	sl, r3
10009936:	2200      	movs	r2, #0
10009938:	4b3c      	ldr	r3, [pc, #240]	; (10009a2c <readSentralData+0x1ac>)
1000993a:	47d0      	blx	sl
1000993c:	4b3c      	ldr	r3, [pc, #240]	; (10009a30 <readSentralData+0x1b0>)
1000993e:	4698      	mov	r8, r3
10009940:	4a3c      	ldr	r2, [pc, #240]	; (10009a34 <readSentralData+0x1b4>)
10009942:	4b3d      	ldr	r3, [pc, #244]	; (10009a38 <readSentralData+0x1b8>)
10009944:	47c0      	blx	r8
10009946:	4f3d      	ldr	r7, [pc, #244]	; (10009a3c <readSentralData+0x1bc>)
10009948:	47b8      	blx	r7
1000994a:	6130      	str	r0, [r6, #16]
	destination[5] = (float)((rawData[21] << 8) | rawData[20]) * 10.0 / 32.768;
1000994c:	7d60      	ldrb	r0, [r4, #21]
1000994e:	0200      	lsls	r0, r0, #8
10009950:	7d23      	ldrb	r3, [r4, #20]
10009952:	4318      	orrs	r0, r3
10009954:	47a8      	blx	r5
10009956:	47c8      	blx	r9
10009958:	2200      	movs	r2, #0
1000995a:	4b34      	ldr	r3, [pc, #208]	; (10009a2c <readSentralData+0x1ac>)
1000995c:	47d0      	blx	sl
1000995e:	4a35      	ldr	r2, [pc, #212]	; (10009a34 <readSentralData+0x1b4>)
10009960:	4b35      	ldr	r3, [pc, #212]	; (10009a38 <readSentralData+0x1b8>)
10009962:	47c0      	blx	r8
10009964:	47b8      	blx	r7
10009966:	6170      	str	r0, [r6, #20]
	destination[6] = (float)((rawData[23] << 8) | rawData[22]) * 10.0 / 32.768;
10009968:	7de0      	ldrb	r0, [r4, #23]
1000996a:	0200      	lsls	r0, r0, #8
1000996c:	7da3      	ldrb	r3, [r4, #22]
1000996e:	4318      	orrs	r0, r3
10009970:	47a8      	blx	r5
10009972:	47c8      	blx	r9
10009974:	2200      	movs	r2, #0
10009976:	4b2d      	ldr	r3, [pc, #180]	; (10009a2c <readSentralData+0x1ac>)
10009978:	47d0      	blx	sl
1000997a:	4a2e      	ldr	r2, [pc, #184]	; (10009a34 <readSentralData+0x1b4>)
1000997c:	4b2e      	ldr	r3, [pc, #184]	; (10009a38 <readSentralData+0x1b8>)
1000997e:	47c0      	blx	r8
10009980:	47b8      	blx	r7
10009982:	61b0      	str	r0, [r6, #24]
	
	// Accelerometer
	destination[7] = (float)((rawData[27] << 8) | rawData[26]) / 16384.0;
10009984:	7ee0      	ldrb	r0, [r4, #27]
10009986:	0200      	lsls	r0, r0, #8
10009988:	7ea3      	ldrb	r3, [r4, #26]
1000998a:	4318      	orrs	r0, r3
1000998c:	47a8      	blx	r5
1000998e:	4b2c      	ldr	r3, [pc, #176]	; (10009a40 <readSentralData+0x1c0>)
10009990:	469a      	mov	sl, r3
10009992:	21e2      	movs	r1, #226	; 0xe2
10009994:	0589      	lsls	r1, r1, #22
10009996:	4798      	blx	r3
10009998:	61f0      	str	r0, [r6, #28]
	destination[8] = (float)((rawData[29] << 8) | rawData[28]) / 16384.0;
1000999a:	7f60      	ldrb	r0, [r4, #29]
1000999c:	0200      	lsls	r0, r0, #8
1000999e:	7f23      	ldrb	r3, [r4, #28]
100099a0:	4318      	orrs	r0, r3
100099a2:	47a8      	blx	r5
100099a4:	21e2      	movs	r1, #226	; 0xe2
100099a6:	0589      	lsls	r1, r1, #22
100099a8:	47d0      	blx	sl
100099aa:	6230      	str	r0, [r6, #32]
	destination[9] = (float)((rawData[31] << 8) | rawData[30]) / 16384.0;
100099ac:	7fe0      	ldrb	r0, [r4, #31]
100099ae:	0200      	lsls	r0, r0, #8
100099b0:	7fa3      	ldrb	r3, [r4, #30]
100099b2:	4318      	orrs	r0, r3
100099b4:	47a8      	blx	r5
100099b6:	21e2      	movs	r1, #226	; 0xe2
100099b8:	0589      	lsls	r1, r1, #22
100099ba:	47d0      	blx	sl
100099bc:	6270      	str	r0, [r6, #36]	; 0x24
	
	// Gyroscope
	destination[10] = (float)((rawData[35] << 8) | rawData[34]) / 16.38;
100099be:	2323      	movs	r3, #35	; 0x23
100099c0:	5ce0      	ldrb	r0, [r4, r3]
100099c2:	0200      	lsls	r0, r0, #8
100099c4:	3b01      	subs	r3, #1
100099c6:	5ce3      	ldrb	r3, [r4, r3]
100099c8:	4318      	orrs	r0, r3
100099ca:	47a8      	blx	r5
100099cc:	47c8      	blx	r9
100099ce:	4a1d      	ldr	r2, [pc, #116]	; (10009a44 <readSentralData+0x1c4>)
100099d0:	4b1d      	ldr	r3, [pc, #116]	; (10009a48 <readSentralData+0x1c8>)
100099d2:	47c0      	blx	r8
100099d4:	47b8      	blx	r7
100099d6:	62b0      	str	r0, [r6, #40]	; 0x28
	destination[11] = (float)((rawData[37] << 8) | rawData[36]) / 16.38;
100099d8:	2325      	movs	r3, #37	; 0x25
100099da:	5ce0      	ldrb	r0, [r4, r3]
100099dc:	0200      	lsls	r0, r0, #8
100099de:	3b01      	subs	r3, #1
100099e0:	5ce3      	ldrb	r3, [r4, r3]
100099e2:	4318      	orrs	r0, r3
100099e4:	47a8      	blx	r5
100099e6:	47c8      	blx	r9
100099e8:	4a16      	ldr	r2, [pc, #88]	; (10009a44 <readSentralData+0x1c4>)
100099ea:	4b17      	ldr	r3, [pc, #92]	; (10009a48 <readSentralData+0x1c8>)
100099ec:	47c0      	blx	r8
100099ee:	47b8      	blx	r7
100099f0:	62f0      	str	r0, [r6, #44]	; 0x2c
	destination[12] = (float)((rawData[39] << 8) | rawData[38]) / 16.38;	
100099f2:	2327      	movs	r3, #39	; 0x27
100099f4:	5ce0      	ldrb	r0, [r4, r3]
100099f6:	0200      	lsls	r0, r0, #8
100099f8:	3b01      	subs	r3, #1
100099fa:	5ce3      	ldrb	r3, [r4, r3]
100099fc:	4318      	orrs	r0, r3
100099fe:	47a8      	blx	r5
10009a00:	47c8      	blx	r9
10009a02:	4a10      	ldr	r2, [pc, #64]	; (10009a44 <readSentralData+0x1c4>)
10009a04:	4b10      	ldr	r3, [pc, #64]	; (10009a48 <readSentralData+0x1c8>)
10009a06:	47c0      	blx	r8
10009a08:	47b8      	blx	r7
10009a0a:	6330      	str	r0, [r6, #48]	; 0x30
}
10009a0c:	b00c      	add	sp, #48	; 0x30
10009a0e:	bc1c      	pop	{r2, r3, r4}
10009a10:	4690      	mov	r8, r2
10009a12:	4699      	mov	r9, r3
10009a14:	46a2      	mov	sl, r4
10009a16:	bdf0      	pop	{r4, r5, r6, r7, pc}
10009a18:	1000819d 	.word	0x1000819d
10009a1c:	1000beb5 	.word	0x1000beb5
10009a20:	1000a099 	.word	0x1000a099
10009a24:	1000bc1d 	.word	0x1000bc1d
10009a28:	1000aff5 	.word	0x1000aff5
10009a2c:	40240000 	.word	0x40240000
10009a30:	1000a779 	.word	0x1000a779
10009a34:	d2f1a9fc 	.word	0xd2f1a9fc
10009a38:	4040624d 	.word	0x4040624d
10009a3c:	1000bcc5 	.word	0x1000bcc5
10009a40:	10009e35 	.word	0x10009e35
10009a44:	ae147ae1 	.word	0xae147ae1
10009a48:	40306147 	.word	0x40306147

10009a4c <main>:
	aef[1] = quat[2];
	aef[2] = quat[3];
}

int main(void)
{
10009a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
10009a4e:	465f      	mov	r7, fp
10009a50:	464e      	mov	r6, r9
10009a52:	4645      	mov	r5, r8
10009a54:	b4e0      	push	{r5, r6, r7}
10009a56:	b08a      	sub	sp, #40	; 0x28
	 * Should not do it if you want the BLE functions.
	 */
	
	//SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;

	system_clock_config(CLOCK_RESOURCE_XO_26_MHZ, CLOCK_FREQ_26_MHZ);
10009a58:	2000      	movs	r0, #0
10009a5a:	2100      	movs	r1, #0
10009a5c:	4b6b      	ldr	r3, [pc, #428]	; (10009c0c <main+0x1c0>)
10009a5e:	4798      	blx	r3
}

static void configure_gpio_pins(void)
{
	struct gpio_config config_gpio_pin;
	gpio_get_config_defaults(&config_gpio_pin);
10009a60:	4668      	mov	r0, sp
10009a62:	4b6b      	ldr	r3, [pc, #428]	; (10009c10 <main+0x1c4>)
10009a64:	4798      	blx	r3
	config_gpio_pin.direction = GPIO_PIN_DIR_OUTPUT;
10009a66:	2301      	movs	r3, #1
10009a68:	466a      	mov	r2, sp
10009a6a:	7013      	strb	r3, [r2, #0]
	gpio_pin_set_config(LED_0_PIN, &config_gpio_pin);
10009a6c:	2016      	movs	r0, #22
10009a6e:	4669      	mov	r1, sp
10009a70:	4b68      	ldr	r3, [pc, #416]	; (10009c14 <main+0x1c8>)
10009a72:	4798      	blx	r3

static void configure_uart(void)
{
	struct uart_config config_uart;

	uart_get_config_defaults(&config_uart);
10009a74:	4668      	mov	r0, sp
10009a76:	4b68      	ldr	r3, [pc, #416]	; (10009c18 <main+0x1cc>)
10009a78:	4798      	blx	r3

	config_uart.baud_rate = 115200;
10009a7a:	23e1      	movs	r3, #225	; 0xe1
10009a7c:	025b      	lsls	r3, r3, #9
10009a7e:	9300      	str	r3, [sp, #0]
	config_uart.pin_number_pad[0] = EDBG_CDC_SERCOM_PIN_PAD0;
10009a80:	2302      	movs	r3, #2
10009a82:	9302      	str	r3, [sp, #8]
	config_uart.pin_number_pad[1] = EDBG_CDC_SERCOM_PIN_PAD1;
10009a84:	2203      	movs	r2, #3
10009a86:	9203      	str	r2, [sp, #12]
	config_uart.pin_number_pad[2] = EDBG_CDC_SERCOM_PIN_PAD2;
10009a88:	3201      	adds	r2, #1
10009a8a:	9204      	str	r2, [sp, #16]
	config_uart.pin_number_pad[3] = EDBG_CDC_SERCOM_PIN_PAD3;
10009a8c:	3201      	adds	r2, #1
10009a8e:	9205      	str	r2, [sp, #20]
	
	config_uart.pinmux_sel_pad[0] = EDBG_CDC_SERCOM_MUX_PAD0;
10009a90:	9306      	str	r3, [sp, #24]
	config_uart.pinmux_sel_pad[1] = EDBG_CDC_SERCOM_MUX_PAD1;
10009a92:	9307      	str	r3, [sp, #28]
	config_uart.pinmux_sel_pad[2] = EDBG_CDC_SERCOM_MUX_PAD2;
10009a94:	9308      	str	r3, [sp, #32]
	config_uart.pinmux_sel_pad[3] = EDBG_CDC_SERCOM_MUX_PAD3;
10009a96:	9309      	str	r3, [sp, #36]	; 0x24

	while (uart_init(&uart_instance,
10009a98:	4e60      	ldr	r6, [pc, #384]	; (10009c1c <main+0x1d0>)
10009a9a:	4d61      	ldr	r5, [pc, #388]	; (10009c20 <main+0x1d4>)
10009a9c:	4c61      	ldr	r4, [pc, #388]	; (10009c24 <main+0x1d8>)
10009a9e:	1c30      	adds	r0, r6, #0
10009aa0:	1c29      	adds	r1, r5, #0
10009aa2:	466a      	mov	r2, sp
10009aa4:	47a0      	blx	r4
10009aa6:	2800      	cmp	r0, #0
10009aa8:	d1f9      	bne.n	10009a9e <main+0x52>
static inline void stdio_serial_init(
		struct uart_module *const module,
		Uart * const hw,
		const struct uart_config *const config)
{
	stdio_base = (void *)module;
10009aaa:	485c      	ldr	r0, [pc, #368]	; (10009c1c <main+0x1d0>)
10009aac:	4b5e      	ldr	r3, [pc, #376]	; (10009c28 <main+0x1dc>)
10009aae:	6018      	str	r0, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
10009ab0:	4a5e      	ldr	r2, [pc, #376]	; (10009c2c <main+0x1e0>)
10009ab2:	4b5f      	ldr	r3, [pc, #380]	; (10009c30 <main+0x1e4>)
10009ab4:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
10009ab6:	4a5f      	ldr	r2, [pc, #380]	; (10009c34 <main+0x1e8>)
10009ab8:	4b5f      	ldr	r3, [pc, #380]	; (10009c38 <main+0x1ec>)
10009aba:	601a      	str	r2, [r3, #0]
static inline bool usart_serial_init(
		struct uart_module *const module,
		Uart * const hw,
		const struct uart_config *const config)
{
	if (uart_init(module, hw, config) == STATUS_OK) {
10009abc:	4958      	ldr	r1, [pc, #352]	; (10009c20 <main+0x1d4>)
10009abe:	466a      	mov	r2, sp
10009ac0:	4b58      	ldr	r3, [pc, #352]	; (10009c24 <main+0x1d8>)
10009ac2:	4798      	blx	r3

	usart_serial_init(module, hw, config);
# if defined(__GNUC__)
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
10009ac4:	4d5d      	ldr	r5, [pc, #372]	; (10009c3c <main+0x1f0>)
10009ac6:	682b      	ldr	r3, [r5, #0]
10009ac8:	6898      	ldr	r0, [r3, #8]
10009aca:	2100      	movs	r1, #0
10009acc:	4c5c      	ldr	r4, [pc, #368]	; (10009c40 <main+0x1f4>)
10009ace:	47a0      	blx	r4
	setbuf(stdin, NULL);
10009ad0:	682b      	ldr	r3, [r5, #0]
10009ad2:	6858      	ldr	r0, [r3, #4]
10009ad4:	2100      	movs	r1, #0
10009ad6:	47a0      	blx	r4
}

static void configure_timer(void)
{
	struct timer_config config_timer;
	timer_get_config_defaults(&config_timer);
10009ad8:	4668      	mov	r0, sp
10009ada:	4b5a      	ldr	r3, [pc, #360]	; (10009c44 <main+0x1f8>)
10009adc:	4798      	blx	r3
	config_timer.reload_value = CONF_TIMER_RELOAD_VALUE;
10009ade:	4b5a      	ldr	r3, [pc, #360]	; (10009c48 <main+0x1fc>)
10009ae0:	9300      	str	r3, [sp, #0]
	timer_init(&config_timer);
10009ae2:	4668      	mov	r0, sp
10009ae4:	4b59      	ldr	r3, [pc, #356]	; (10009c4c <main+0x200>)
10009ae6:	4798      	blx	r3
	timer_enable();
10009ae8:	4b59      	ldr	r3, [pc, #356]	; (10009c50 <main+0x204>)
10009aea:	4798      	blx	r3
}

static void configure_timer_callback(void)
{
	timer_register_callback(timer_callback);
10009aec:	4859      	ldr	r0, [pc, #356]	; (10009c54 <main+0x208>)
10009aee:	4b5a      	ldr	r3, [pc, #360]	; (10009c58 <main+0x20c>)
10009af0:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
10009af2:	2280      	movs	r2, #128	; 0x80
10009af4:	04d2      	lsls	r2, r2, #19
10009af6:	4b59      	ldr	r3, [pc, #356]	; (10009c5c <main+0x210>)
10009af8:	601a      	str	r2, [r3, #0]
	
	configure_timer();
	
	configure_timer_callback();
	
	i2c_init_sentral();
10009afa:	4b59      	ldr	r3, [pc, #356]	; (10009c60 <main+0x214>)
10009afc:	4798      	blx	r3
	
	init_sentral();
10009afe:	4b59      	ldr	r3, [pc, #356]	; (10009c64 <main+0x218>)
10009b00:	4798      	blx	r3
	
	while (true)
	{
		if(task_1 > 100)
10009b02:	4f59      	ldr	r7, [pc, #356]	; (10009c68 <main+0x21c>)
		{
			gpio_pin_toggle_output_level(LED_0_PIN);
10009b04:	4b59      	ldr	r3, [pc, #356]	; (10009c6c <main+0x220>)
10009b06:	4698      	mov	r8, r3
			task_1 = 0;
10009b08:	46bb      	mov	fp, r7
	
	init_sentral();
	
	while (true)
	{
		if(task_1 > 100)
10009b0a:	683b      	ldr	r3, [r7, #0]
10009b0c:	2b64      	cmp	r3, #100	; 0x64
10009b0e:	d904      	bls.n	10009b1a <main+0xce>
		{
			gpio_pin_toggle_output_level(LED_0_PIN);
10009b10:	2016      	movs	r0, #22
10009b12:	47c0      	blx	r8
			task_1 = 0;
10009b14:	2300      	movs	r3, #0
10009b16:	465a      	mov	r2, fp
10009b18:	6013      	str	r3, [r2, #0]
		}
		if(task_2 > 50)
10009b1a:	4b55      	ldr	r3, [pc, #340]	; (10009c70 <main+0x224>)
10009b1c:	681b      	ldr	r3, [r3, #0]
10009b1e:	2b32      	cmp	r3, #50	; 0x32
10009b20:	d9f3      	bls.n	10009b0a <main+0xbe>
		{
			readSentralData(&sentralData);
10009b22:	4d54      	ldr	r5, [pc, #336]	; (10009c74 <main+0x228>)
10009b24:	1c28      	adds	r0, r5, #0
10009b26:	4b54      	ldr	r3, [pc, #336]	; (10009c78 <main+0x22c>)
10009b28:	4798      	blx	r3
			gcvt(sentralData[0], 5, bufferSentral);
10009b2a:	4b54      	ldr	r3, [pc, #336]	; (10009c7c <main+0x230>)
10009b2c:	4699      	mov	r9, r3
10009b2e:	6828      	ldr	r0, [r5, #0]
10009b30:	4798      	blx	r3
10009b32:	2205      	movs	r2, #5
10009b34:	4b52      	ldr	r3, [pc, #328]	; (10009c80 <main+0x234>)
10009b36:	4c53      	ldr	r4, [pc, #332]	; (10009c84 <main+0x238>)
10009b38:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009b3a:	4853      	ldr	r0, [pc, #332]	; (10009c88 <main+0x23c>)
10009b3c:	4950      	ldr	r1, [pc, #320]	; (10009c80 <main+0x234>)
10009b3e:	4e53      	ldr	r6, [pc, #332]	; (10009c8c <main+0x240>)
10009b40:	47b0      	blx	r6
			gcvt(sentralData[1], 5, bufferSentral);
10009b42:	6868      	ldr	r0, [r5, #4]
10009b44:	47c8      	blx	r9
10009b46:	2205      	movs	r2, #5
10009b48:	4b4d      	ldr	r3, [pc, #308]	; (10009c80 <main+0x234>)
10009b4a:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009b4c:	484e      	ldr	r0, [pc, #312]	; (10009c88 <main+0x23c>)
10009b4e:	494c      	ldr	r1, [pc, #304]	; (10009c80 <main+0x234>)
10009b50:	47b0      	blx	r6
			gcvt(sentralData[2], 5, bufferSentral);
10009b52:	68a8      	ldr	r0, [r5, #8]
10009b54:	47c8      	blx	r9
10009b56:	2205      	movs	r2, #5
10009b58:	4b49      	ldr	r3, [pc, #292]	; (10009c80 <main+0x234>)
10009b5a:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009b5c:	484a      	ldr	r0, [pc, #296]	; (10009c88 <main+0x23c>)
10009b5e:	4948      	ldr	r1, [pc, #288]	; (10009c80 <main+0x234>)
10009b60:	47b0      	blx	r6
			gcvt(sentralData[3], 5, bufferSentral);
10009b62:	68e8      	ldr	r0, [r5, #12]
10009b64:	47c8      	blx	r9
10009b66:	2205      	movs	r2, #5
10009b68:	4b45      	ldr	r3, [pc, #276]	; (10009c80 <main+0x234>)
10009b6a:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009b6c:	4846      	ldr	r0, [pc, #280]	; (10009c88 <main+0x23c>)
10009b6e:	4944      	ldr	r1, [pc, #272]	; (10009c80 <main+0x234>)
10009b70:	47b0      	blx	r6
			gcvt(sentralData[4], 5, bufferSentral);
10009b72:	6928      	ldr	r0, [r5, #16]
10009b74:	47c8      	blx	r9
10009b76:	2205      	movs	r2, #5
10009b78:	4b41      	ldr	r3, [pc, #260]	; (10009c80 <main+0x234>)
10009b7a:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009b7c:	4842      	ldr	r0, [pc, #264]	; (10009c88 <main+0x23c>)
10009b7e:	4940      	ldr	r1, [pc, #256]	; (10009c80 <main+0x234>)
10009b80:	47b0      	blx	r6
			gcvt(sentralData[5], 5, bufferSentral);
10009b82:	6968      	ldr	r0, [r5, #20]
10009b84:	47c8      	blx	r9
10009b86:	2205      	movs	r2, #5
10009b88:	4b3d      	ldr	r3, [pc, #244]	; (10009c80 <main+0x234>)
10009b8a:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009b8c:	483e      	ldr	r0, [pc, #248]	; (10009c88 <main+0x23c>)
10009b8e:	493c      	ldr	r1, [pc, #240]	; (10009c80 <main+0x234>)
10009b90:	47b0      	blx	r6
			gcvt(sentralData[6], 5, bufferSentral);
10009b92:	69a8      	ldr	r0, [r5, #24]
10009b94:	47c8      	blx	r9
10009b96:	2205      	movs	r2, #5
10009b98:	4b39      	ldr	r3, [pc, #228]	; (10009c80 <main+0x234>)
10009b9a:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009b9c:	483a      	ldr	r0, [pc, #232]	; (10009c88 <main+0x23c>)
10009b9e:	4938      	ldr	r1, [pc, #224]	; (10009c80 <main+0x234>)
10009ba0:	47b0      	blx	r6
			gcvt(sentralData[7], 5, bufferSentral);
10009ba2:	69e8      	ldr	r0, [r5, #28]
10009ba4:	47c8      	blx	r9
10009ba6:	2205      	movs	r2, #5
10009ba8:	4b35      	ldr	r3, [pc, #212]	; (10009c80 <main+0x234>)
10009baa:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009bac:	4836      	ldr	r0, [pc, #216]	; (10009c88 <main+0x23c>)
10009bae:	4934      	ldr	r1, [pc, #208]	; (10009c80 <main+0x234>)
10009bb0:	47b0      	blx	r6
			gcvt(sentralData[8], 5, bufferSentral);
10009bb2:	6a28      	ldr	r0, [r5, #32]
10009bb4:	47c8      	blx	r9
10009bb6:	2205      	movs	r2, #5
10009bb8:	4b31      	ldr	r3, [pc, #196]	; (10009c80 <main+0x234>)
10009bba:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009bbc:	4832      	ldr	r0, [pc, #200]	; (10009c88 <main+0x23c>)
10009bbe:	4930      	ldr	r1, [pc, #192]	; (10009c80 <main+0x234>)
10009bc0:	47b0      	blx	r6
			gcvt(sentralData[9], 5, bufferSentral);
10009bc2:	6a68      	ldr	r0, [r5, #36]	; 0x24
10009bc4:	47c8      	blx	r9
10009bc6:	2205      	movs	r2, #5
10009bc8:	4b2d      	ldr	r3, [pc, #180]	; (10009c80 <main+0x234>)
10009bca:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009bcc:	482e      	ldr	r0, [pc, #184]	; (10009c88 <main+0x23c>)
10009bce:	492c      	ldr	r1, [pc, #176]	; (10009c80 <main+0x234>)
10009bd0:	47b0      	blx	r6
			gcvt(sentralData[10], 5, bufferSentral);
10009bd2:	6aa8      	ldr	r0, [r5, #40]	; 0x28
10009bd4:	47c8      	blx	r9
10009bd6:	2205      	movs	r2, #5
10009bd8:	4b29      	ldr	r3, [pc, #164]	; (10009c80 <main+0x234>)
10009bda:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009bdc:	482a      	ldr	r0, [pc, #168]	; (10009c88 <main+0x23c>)
10009bde:	4928      	ldr	r1, [pc, #160]	; (10009c80 <main+0x234>)
10009be0:	47b0      	blx	r6
			gcvt(sentralData[11], 5, bufferSentral);
10009be2:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
10009be4:	47c8      	blx	r9
10009be6:	2205      	movs	r2, #5
10009be8:	4b25      	ldr	r3, [pc, #148]	; (10009c80 <main+0x234>)
10009bea:	47a0      	blx	r4
			printf("%s:", bufferSentral);
10009bec:	4826      	ldr	r0, [pc, #152]	; (10009c88 <main+0x23c>)
10009bee:	4924      	ldr	r1, [pc, #144]	; (10009c80 <main+0x234>)
10009bf0:	47b0      	blx	r6
			gcvt(sentralData[12], 5, bufferSentral);
10009bf2:	6b28      	ldr	r0, [r5, #48]	; 0x30
10009bf4:	47c8      	blx	r9
10009bf6:	2205      	movs	r2, #5
10009bf8:	4b21      	ldr	r3, [pc, #132]	; (10009c80 <main+0x234>)
10009bfa:	47a0      	blx	r4
			printf("%s\n\r", bufferSentral);
10009bfc:	4824      	ldr	r0, [pc, #144]	; (10009c90 <main+0x244>)
10009bfe:	4920      	ldr	r1, [pc, #128]	; (10009c80 <main+0x234>)
10009c00:	47b0      	blx	r6
// 			gcvt(acc_mag_filter,5,temp_acc_mag);
// 			gcvt(stationary, 2, temp_stationary);
// 			
// 			printf("%s:%s:%s:%s:%s:%s:%s:%s\n\r", temp_acc_mag,temp_stationary,temp_vel_x,temp_vel_y,temp_vel_z,temp_pos_x,temp_pos_y,temp_pos_z);
			
			task_2 = 0;
10009c02:	2200      	movs	r2, #0
10009c04:	4b1a      	ldr	r3, [pc, #104]	; (10009c70 <main+0x224>)
10009c06:	601a      	str	r2, [r3, #0]
10009c08:	e77f      	b.n	10009b0a <main+0xbe>
10009c0a:	46c0      	nop			; (mov r8, r8)
10009c0c:	10008b5d 	.word	0x10008b5d
10009c10:	100087d9 	.word	0x100087d9
10009c14:	100087e9 	.word	0x100087e9
10009c18:	100095e9 	.word	0x100095e9
10009c1c:	1000ecbc 	.word	0x1000ecbc
10009c20:	40004000 	.word	0x40004000
10009c24:	10009615 	.word	0x10009615
10009c28:	1000ec70 	.word	0x1000ec70
10009c2c:	10009869 	.word	0x10009869
10009c30:	1000ec6c 	.word	0x1000ec6c
10009c34:	10009851 	.word	0x10009851
10009c38:	1000ec68 	.word	0x1000ec68
10009c3c:	1000ec08 	.word	0x1000ec08
10009c40:	1000bf0d 	.word	0x1000bf0d
10009c44:	100086a9 	.word	0x100086a9
10009c48:	00006590 	.word	0x00006590
10009c4c:	10008709 	.word	0x10008709
10009c50:	100086ed 	.word	0x100086ed
10009c54:	10009835 	.word	0x10009835
10009c58:	100086fd 	.word	0x100086fd
10009c5c:	e000e100 	.word	0xe000e100
10009c60:	100080e9 	.word	0x100080e9
10009c64:	10008279 	.word	0x10008279
10009c68:	1000ec34 	.word	0x1000ec34
10009c6c:	100089b1 	.word	0x100089b1
10009c70:	1000ec38 	.word	0x1000ec38
10009c74:	1000ed48 	.word	0x1000ed48
10009c78:	10009881 	.word	0x10009881
10009c7c:	1000bc1d 	.word	0x1000bc1d
10009c80:	1000ee04 	.word	0x1000ee04
10009c84:	1000be21 	.word	0x1000be21
10009c88:	1000e914 	.word	0x1000e914
10009c8c:	1000bed9 	.word	0x1000bed9
10009c90:	1000e918 	.word	0x1000e918

10009c94 <__aeabi_uidiv>:
10009c94:	2200      	movs	r2, #0
10009c96:	0843      	lsrs	r3, r0, #1
10009c98:	428b      	cmp	r3, r1
10009c9a:	d374      	bcc.n	10009d86 <__aeabi_uidiv+0xf2>
10009c9c:	0903      	lsrs	r3, r0, #4
10009c9e:	428b      	cmp	r3, r1
10009ca0:	d35f      	bcc.n	10009d62 <__aeabi_uidiv+0xce>
10009ca2:	0a03      	lsrs	r3, r0, #8
10009ca4:	428b      	cmp	r3, r1
10009ca6:	d344      	bcc.n	10009d32 <__aeabi_uidiv+0x9e>
10009ca8:	0b03      	lsrs	r3, r0, #12
10009caa:	428b      	cmp	r3, r1
10009cac:	d328      	bcc.n	10009d00 <__aeabi_uidiv+0x6c>
10009cae:	0c03      	lsrs	r3, r0, #16
10009cb0:	428b      	cmp	r3, r1
10009cb2:	d30d      	bcc.n	10009cd0 <__aeabi_uidiv+0x3c>
10009cb4:	22ff      	movs	r2, #255	; 0xff
10009cb6:	0209      	lsls	r1, r1, #8
10009cb8:	ba12      	rev	r2, r2
10009cba:	0c03      	lsrs	r3, r0, #16
10009cbc:	428b      	cmp	r3, r1
10009cbe:	d302      	bcc.n	10009cc6 <__aeabi_uidiv+0x32>
10009cc0:	1212      	asrs	r2, r2, #8
10009cc2:	0209      	lsls	r1, r1, #8
10009cc4:	d065      	beq.n	10009d92 <__aeabi_uidiv+0xfe>
10009cc6:	0b03      	lsrs	r3, r0, #12
10009cc8:	428b      	cmp	r3, r1
10009cca:	d319      	bcc.n	10009d00 <__aeabi_uidiv+0x6c>
10009ccc:	e000      	b.n	10009cd0 <__aeabi_uidiv+0x3c>
10009cce:	0a09      	lsrs	r1, r1, #8
10009cd0:	0bc3      	lsrs	r3, r0, #15
10009cd2:	428b      	cmp	r3, r1
10009cd4:	d301      	bcc.n	10009cda <__aeabi_uidiv+0x46>
10009cd6:	03cb      	lsls	r3, r1, #15
10009cd8:	1ac0      	subs	r0, r0, r3
10009cda:	4152      	adcs	r2, r2
10009cdc:	0b83      	lsrs	r3, r0, #14
10009cde:	428b      	cmp	r3, r1
10009ce0:	d301      	bcc.n	10009ce6 <__aeabi_uidiv+0x52>
10009ce2:	038b      	lsls	r3, r1, #14
10009ce4:	1ac0      	subs	r0, r0, r3
10009ce6:	4152      	adcs	r2, r2
10009ce8:	0b43      	lsrs	r3, r0, #13
10009cea:	428b      	cmp	r3, r1
10009cec:	d301      	bcc.n	10009cf2 <__aeabi_uidiv+0x5e>
10009cee:	034b      	lsls	r3, r1, #13
10009cf0:	1ac0      	subs	r0, r0, r3
10009cf2:	4152      	adcs	r2, r2
10009cf4:	0b03      	lsrs	r3, r0, #12
10009cf6:	428b      	cmp	r3, r1
10009cf8:	d301      	bcc.n	10009cfe <__aeabi_uidiv+0x6a>
10009cfa:	030b      	lsls	r3, r1, #12
10009cfc:	1ac0      	subs	r0, r0, r3
10009cfe:	4152      	adcs	r2, r2
10009d00:	0ac3      	lsrs	r3, r0, #11
10009d02:	428b      	cmp	r3, r1
10009d04:	d301      	bcc.n	10009d0a <__aeabi_uidiv+0x76>
10009d06:	02cb      	lsls	r3, r1, #11
10009d08:	1ac0      	subs	r0, r0, r3
10009d0a:	4152      	adcs	r2, r2
10009d0c:	0a83      	lsrs	r3, r0, #10
10009d0e:	428b      	cmp	r3, r1
10009d10:	d301      	bcc.n	10009d16 <__aeabi_uidiv+0x82>
10009d12:	028b      	lsls	r3, r1, #10
10009d14:	1ac0      	subs	r0, r0, r3
10009d16:	4152      	adcs	r2, r2
10009d18:	0a43      	lsrs	r3, r0, #9
10009d1a:	428b      	cmp	r3, r1
10009d1c:	d301      	bcc.n	10009d22 <__aeabi_uidiv+0x8e>
10009d1e:	024b      	lsls	r3, r1, #9
10009d20:	1ac0      	subs	r0, r0, r3
10009d22:	4152      	adcs	r2, r2
10009d24:	0a03      	lsrs	r3, r0, #8
10009d26:	428b      	cmp	r3, r1
10009d28:	d301      	bcc.n	10009d2e <__aeabi_uidiv+0x9a>
10009d2a:	020b      	lsls	r3, r1, #8
10009d2c:	1ac0      	subs	r0, r0, r3
10009d2e:	4152      	adcs	r2, r2
10009d30:	d2cd      	bcs.n	10009cce <__aeabi_uidiv+0x3a>
10009d32:	09c3      	lsrs	r3, r0, #7
10009d34:	428b      	cmp	r3, r1
10009d36:	d301      	bcc.n	10009d3c <__aeabi_uidiv+0xa8>
10009d38:	01cb      	lsls	r3, r1, #7
10009d3a:	1ac0      	subs	r0, r0, r3
10009d3c:	4152      	adcs	r2, r2
10009d3e:	0983      	lsrs	r3, r0, #6
10009d40:	428b      	cmp	r3, r1
10009d42:	d301      	bcc.n	10009d48 <__aeabi_uidiv+0xb4>
10009d44:	018b      	lsls	r3, r1, #6
10009d46:	1ac0      	subs	r0, r0, r3
10009d48:	4152      	adcs	r2, r2
10009d4a:	0943      	lsrs	r3, r0, #5
10009d4c:	428b      	cmp	r3, r1
10009d4e:	d301      	bcc.n	10009d54 <__aeabi_uidiv+0xc0>
10009d50:	014b      	lsls	r3, r1, #5
10009d52:	1ac0      	subs	r0, r0, r3
10009d54:	4152      	adcs	r2, r2
10009d56:	0903      	lsrs	r3, r0, #4
10009d58:	428b      	cmp	r3, r1
10009d5a:	d301      	bcc.n	10009d60 <__aeabi_uidiv+0xcc>
10009d5c:	010b      	lsls	r3, r1, #4
10009d5e:	1ac0      	subs	r0, r0, r3
10009d60:	4152      	adcs	r2, r2
10009d62:	08c3      	lsrs	r3, r0, #3
10009d64:	428b      	cmp	r3, r1
10009d66:	d301      	bcc.n	10009d6c <__aeabi_uidiv+0xd8>
10009d68:	00cb      	lsls	r3, r1, #3
10009d6a:	1ac0      	subs	r0, r0, r3
10009d6c:	4152      	adcs	r2, r2
10009d6e:	0883      	lsrs	r3, r0, #2
10009d70:	428b      	cmp	r3, r1
10009d72:	d301      	bcc.n	10009d78 <__aeabi_uidiv+0xe4>
10009d74:	008b      	lsls	r3, r1, #2
10009d76:	1ac0      	subs	r0, r0, r3
10009d78:	4152      	adcs	r2, r2
10009d7a:	0843      	lsrs	r3, r0, #1
10009d7c:	428b      	cmp	r3, r1
10009d7e:	d301      	bcc.n	10009d84 <__aeabi_uidiv+0xf0>
10009d80:	004b      	lsls	r3, r1, #1
10009d82:	1ac0      	subs	r0, r0, r3
10009d84:	4152      	adcs	r2, r2
10009d86:	1a41      	subs	r1, r0, r1
10009d88:	d200      	bcs.n	10009d8c <__aeabi_uidiv+0xf8>
10009d8a:	4601      	mov	r1, r0
10009d8c:	4152      	adcs	r2, r2
10009d8e:	4610      	mov	r0, r2
10009d90:	4770      	bx	lr
10009d92:	e7ff      	b.n	10009d94 <__aeabi_uidiv+0x100>
10009d94:	b501      	push	{r0, lr}
10009d96:	2000      	movs	r0, #0
10009d98:	f000 f80c 	bl	10009db4 <__aeabi_idiv0>
10009d9c:	bd02      	pop	{r1, pc}
10009d9e:	46c0      	nop			; (mov r8, r8)

10009da0 <__aeabi_uidivmod>:
10009da0:	2900      	cmp	r1, #0
10009da2:	d0f7      	beq.n	10009d94 <__aeabi_uidiv+0x100>
10009da4:	b503      	push	{r0, r1, lr}
10009da6:	f7ff ff75 	bl	10009c94 <__aeabi_uidiv>
10009daa:	bc0e      	pop	{r1, r2, r3}
10009dac:	4342      	muls	r2, r0
10009dae:	1a89      	subs	r1, r1, r2
10009db0:	4718      	bx	r3
10009db2:	46c0      	nop			; (mov r8, r8)

10009db4 <__aeabi_idiv0>:
10009db4:	4770      	bx	lr
10009db6:	46c0      	nop			; (mov r8, r8)

10009db8 <__aeabi_cdrcmple>:
10009db8:	4684      	mov	ip, r0
10009dba:	1c10      	adds	r0, r2, #0
10009dbc:	4662      	mov	r2, ip
10009dbe:	468c      	mov	ip, r1
10009dc0:	1c19      	adds	r1, r3, #0
10009dc2:	4663      	mov	r3, ip
10009dc4:	e000      	b.n	10009dc8 <__aeabi_cdcmpeq>
10009dc6:	46c0      	nop			; (mov r8, r8)

10009dc8 <__aeabi_cdcmpeq>:
10009dc8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10009dca:	f001 f8ad 	bl	1000af28 <__ledf2>
10009dce:	2800      	cmp	r0, #0
10009dd0:	d401      	bmi.n	10009dd6 <__aeabi_cdcmpeq+0xe>
10009dd2:	2100      	movs	r1, #0
10009dd4:	42c8      	cmn	r0, r1
10009dd6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

10009dd8 <__aeabi_dcmpeq>:
10009dd8:	b510      	push	{r4, lr}
10009dda:	f000 fff1 	bl	1000adc0 <__eqdf2>
10009dde:	4240      	negs	r0, r0
10009de0:	3001      	adds	r0, #1
10009de2:	bd10      	pop	{r4, pc}

10009de4 <__aeabi_dcmplt>:
10009de4:	b510      	push	{r4, lr}
10009de6:	f001 f89f 	bl	1000af28 <__ledf2>
10009dea:	2800      	cmp	r0, #0
10009dec:	db01      	blt.n	10009df2 <__aeabi_dcmplt+0xe>
10009dee:	2000      	movs	r0, #0
10009df0:	bd10      	pop	{r4, pc}
10009df2:	2001      	movs	r0, #1
10009df4:	bd10      	pop	{r4, pc}
10009df6:	46c0      	nop			; (mov r8, r8)

10009df8 <__aeabi_dcmple>:
10009df8:	b510      	push	{r4, lr}
10009dfa:	f001 f895 	bl	1000af28 <__ledf2>
10009dfe:	2800      	cmp	r0, #0
10009e00:	dd01      	ble.n	10009e06 <__aeabi_dcmple+0xe>
10009e02:	2000      	movs	r0, #0
10009e04:	bd10      	pop	{r4, pc}
10009e06:	2001      	movs	r0, #1
10009e08:	bd10      	pop	{r4, pc}
10009e0a:	46c0      	nop			; (mov r8, r8)

10009e0c <__aeabi_dcmpgt>:
10009e0c:	b510      	push	{r4, lr}
10009e0e:	f001 f81b 	bl	1000ae48 <__gedf2>
10009e12:	2800      	cmp	r0, #0
10009e14:	dc01      	bgt.n	10009e1a <__aeabi_dcmpgt+0xe>
10009e16:	2000      	movs	r0, #0
10009e18:	bd10      	pop	{r4, pc}
10009e1a:	2001      	movs	r0, #1
10009e1c:	bd10      	pop	{r4, pc}
10009e1e:	46c0      	nop			; (mov r8, r8)

10009e20 <__aeabi_dcmpge>:
10009e20:	b510      	push	{r4, lr}
10009e22:	f001 f811 	bl	1000ae48 <__gedf2>
10009e26:	2800      	cmp	r0, #0
10009e28:	da01      	bge.n	10009e2e <__aeabi_dcmpge+0xe>
10009e2a:	2000      	movs	r0, #0
10009e2c:	bd10      	pop	{r4, pc}
10009e2e:	2001      	movs	r0, #1
10009e30:	bd10      	pop	{r4, pc}
10009e32:	46c0      	nop			; (mov r8, r8)

10009e34 <__aeabi_fmul>:
10009e34:	b5f0      	push	{r4, r5, r6, r7, lr}
10009e36:	465f      	mov	r7, fp
10009e38:	4656      	mov	r6, sl
10009e3a:	464d      	mov	r5, r9
10009e3c:	4644      	mov	r4, r8
10009e3e:	b4f0      	push	{r4, r5, r6, r7}
10009e40:	0245      	lsls	r5, r0, #9
10009e42:	0046      	lsls	r6, r0, #1
10009e44:	0fc4      	lsrs	r4, r0, #31
10009e46:	b083      	sub	sp, #12
10009e48:	1c0f      	adds	r7, r1, #0
10009e4a:	0a6d      	lsrs	r5, r5, #9
10009e4c:	0e36      	lsrs	r6, r6, #24
10009e4e:	46a3      	mov	fp, r4
10009e50:	d045      	beq.n	10009ede <__aeabi_fmul+0xaa>
10009e52:	2eff      	cmp	r6, #255	; 0xff
10009e54:	d025      	beq.n	10009ea2 <__aeabi_fmul+0x6e>
10009e56:	2380      	movs	r3, #128	; 0x80
10009e58:	041b      	lsls	r3, r3, #16
10009e5a:	431d      	orrs	r5, r3
10009e5c:	2300      	movs	r3, #0
10009e5e:	469a      	mov	sl, r3
10009e60:	00ed      	lsls	r5, r5, #3
10009e62:	3e7f      	subs	r6, #127	; 0x7f
10009e64:	9301      	str	r3, [sp, #4]
10009e66:	027b      	lsls	r3, r7, #9
10009e68:	0a5b      	lsrs	r3, r3, #9
10009e6a:	4698      	mov	r8, r3
10009e6c:	0078      	lsls	r0, r7, #1
10009e6e:	0ffb      	lsrs	r3, r7, #31
10009e70:	0e00      	lsrs	r0, r0, #24
10009e72:	4699      	mov	r9, r3
10009e74:	d040      	beq.n	10009ef8 <__aeabi_fmul+0xc4>
10009e76:	28ff      	cmp	r0, #255	; 0xff
10009e78:	d038      	beq.n	10009eec <__aeabi_fmul+0xb8>
10009e7a:	2380      	movs	r3, #128	; 0x80
10009e7c:	4642      	mov	r2, r8
10009e7e:	041b      	lsls	r3, r3, #16
10009e80:	4313      	orrs	r3, r2
10009e82:	00db      	lsls	r3, r3, #3
10009e84:	4698      	mov	r8, r3
10009e86:	2300      	movs	r3, #0
10009e88:	387f      	subs	r0, #127	; 0x7f
10009e8a:	464a      	mov	r2, r9
10009e8c:	9f01      	ldr	r7, [sp, #4]
10009e8e:	1830      	adds	r0, r6, r0
10009e90:	4062      	eors	r2, r4
10009e92:	1c41      	adds	r1, r0, #1
10009e94:	431f      	orrs	r7, r3
10009e96:	2f0f      	cmp	r7, #15
10009e98:	d869      	bhi.n	10009f6e <__aeabi_fmul+0x13a>
10009e9a:	4e7d      	ldr	r6, [pc, #500]	; (1000a090 <__aeabi_fmul+0x25c>)
10009e9c:	00bf      	lsls	r7, r7, #2
10009e9e:	59f6      	ldr	r6, [r6, r7]
10009ea0:	46b7      	mov	pc, r6
10009ea2:	2d00      	cmp	r5, #0
10009ea4:	d145      	bne.n	10009f32 <__aeabi_fmul+0xfe>
10009ea6:	2308      	movs	r3, #8
10009ea8:	9301      	str	r3, [sp, #4]
10009eaa:	3b06      	subs	r3, #6
10009eac:	469a      	mov	sl, r3
10009eae:	e7da      	b.n	10009e66 <__aeabi_fmul+0x32>
10009eb0:	4693      	mov	fp, r2
10009eb2:	4653      	mov	r3, sl
10009eb4:	2b02      	cmp	r3, #2
10009eb6:	d12f      	bne.n	10009f18 <__aeabi_fmul+0xe4>
10009eb8:	465b      	mov	r3, fp
10009eba:	2401      	movs	r4, #1
10009ebc:	2500      	movs	r5, #0
10009ebe:	401c      	ands	r4, r3
10009ec0:	23ff      	movs	r3, #255	; 0xff
10009ec2:	026d      	lsls	r5, r5, #9
10009ec4:	05db      	lsls	r3, r3, #23
10009ec6:	0a6d      	lsrs	r5, r5, #9
10009ec8:	07e4      	lsls	r4, r4, #31
10009eca:	431d      	orrs	r5, r3
10009ecc:	4325      	orrs	r5, r4
10009ece:	1c28      	adds	r0, r5, #0
10009ed0:	b003      	add	sp, #12
10009ed2:	bc3c      	pop	{r2, r3, r4, r5}
10009ed4:	4690      	mov	r8, r2
10009ed6:	4699      	mov	r9, r3
10009ed8:	46a2      	mov	sl, r4
10009eda:	46ab      	mov	fp, r5
10009edc:	bdf0      	pop	{r4, r5, r6, r7, pc}
10009ede:	2d00      	cmp	r5, #0
10009ee0:	d12c      	bne.n	10009f3c <__aeabi_fmul+0x108>
10009ee2:	2304      	movs	r3, #4
10009ee4:	9301      	str	r3, [sp, #4]
10009ee6:	3b03      	subs	r3, #3
10009ee8:	469a      	mov	sl, r3
10009eea:	e7bc      	b.n	10009e66 <__aeabi_fmul+0x32>
10009eec:	4643      	mov	r3, r8
10009eee:	425a      	negs	r2, r3
10009ef0:	4153      	adcs	r3, r2
10009ef2:	2203      	movs	r2, #3
10009ef4:	1ad3      	subs	r3, r2, r3
10009ef6:	e7c8      	b.n	10009e8a <__aeabi_fmul+0x56>
10009ef8:	4642      	mov	r2, r8
10009efa:	2301      	movs	r3, #1
10009efc:	2a00      	cmp	r2, #0
10009efe:	d0c4      	beq.n	10009e8a <__aeabi_fmul+0x56>
10009f00:	4640      	mov	r0, r8
10009f02:	f001 ff6f 	bl	1000bde4 <__clzsi2>
10009f06:	4642      	mov	r2, r8
10009f08:	1f43      	subs	r3, r0, #5
10009f0a:	409a      	lsls	r2, r3
10009f0c:	2376      	movs	r3, #118	; 0x76
10009f0e:	425b      	negs	r3, r3
10009f10:	1a18      	subs	r0, r3, r0
10009f12:	4690      	mov	r8, r2
10009f14:	2300      	movs	r3, #0
10009f16:	e7b8      	b.n	10009e8a <__aeabi_fmul+0x56>
10009f18:	2b03      	cmp	r3, #3
10009f1a:	d100      	bne.n	10009f1e <__aeabi_fmul+0xea>
10009f1c:	e0ad      	b.n	1000a07a <__aeabi_fmul+0x246>
10009f1e:	2b01      	cmp	r3, #1
10009f20:	d000      	beq.n	10009f24 <__aeabi_fmul+0xf0>
10009f22:	e08c      	b.n	1000a03e <__aeabi_fmul+0x20a>
10009f24:	465b      	mov	r3, fp
10009f26:	4654      	mov	r4, sl
10009f28:	401c      	ands	r4, r3
10009f2a:	b2e4      	uxtb	r4, r4
10009f2c:	2300      	movs	r3, #0
10009f2e:	2500      	movs	r5, #0
10009f30:	e7c7      	b.n	10009ec2 <__aeabi_fmul+0x8e>
10009f32:	230c      	movs	r3, #12
10009f34:	9301      	str	r3, [sp, #4]
10009f36:	3b09      	subs	r3, #9
10009f38:	469a      	mov	sl, r3
10009f3a:	e794      	b.n	10009e66 <__aeabi_fmul+0x32>
10009f3c:	1c28      	adds	r0, r5, #0
10009f3e:	f001 ff51 	bl	1000bde4 <__clzsi2>
10009f42:	2676      	movs	r6, #118	; 0x76
10009f44:	1f43      	subs	r3, r0, #5
10009f46:	409d      	lsls	r5, r3
10009f48:	2300      	movs	r3, #0
10009f4a:	4276      	negs	r6, r6
10009f4c:	1a36      	subs	r6, r6, r0
10009f4e:	9301      	str	r3, [sp, #4]
10009f50:	469a      	mov	sl, r3
10009f52:	e788      	b.n	10009e66 <__aeabi_fmul+0x32>
10009f54:	2580      	movs	r5, #128	; 0x80
10009f56:	2400      	movs	r4, #0
10009f58:	03ed      	lsls	r5, r5, #15
10009f5a:	23ff      	movs	r3, #255	; 0xff
10009f5c:	e7b1      	b.n	10009ec2 <__aeabi_fmul+0x8e>
10009f5e:	4645      	mov	r5, r8
10009f60:	46cb      	mov	fp, r9
10009f62:	469a      	mov	sl, r3
10009f64:	e7a5      	b.n	10009eb2 <__aeabi_fmul+0x7e>
10009f66:	4645      	mov	r5, r8
10009f68:	4693      	mov	fp, r2
10009f6a:	469a      	mov	sl, r3
10009f6c:	e7a1      	b.n	10009eb2 <__aeabi_fmul+0x7e>
10009f6e:	4643      	mov	r3, r8
10009f70:	042c      	lsls	r4, r5, #16
10009f72:	0c1b      	lsrs	r3, r3, #16
10009f74:	469c      	mov	ip, r3
10009f76:	0c23      	lsrs	r3, r4, #16
10009f78:	4644      	mov	r4, r8
10009f7a:	0426      	lsls	r6, r4, #16
10009f7c:	1c1c      	adds	r4, r3, #0
10009f7e:	0c36      	lsrs	r6, r6, #16
10009f80:	0c2f      	lsrs	r7, r5, #16
10009f82:	4374      	muls	r4, r6
10009f84:	1c35      	adds	r5, r6, #0
10009f86:	4666      	mov	r6, ip
10009f88:	437d      	muls	r5, r7
10009f8a:	4373      	muls	r3, r6
10009f8c:	4377      	muls	r7, r6
10009f8e:	18eb      	adds	r3, r5, r3
10009f90:	0c26      	lsrs	r6, r4, #16
10009f92:	199e      	adds	r6, r3, r6
10009f94:	42b5      	cmp	r5, r6
10009f96:	d903      	bls.n	10009fa0 <__aeabi_fmul+0x16c>
10009f98:	2380      	movs	r3, #128	; 0x80
10009f9a:	025b      	lsls	r3, r3, #9
10009f9c:	469c      	mov	ip, r3
10009f9e:	4467      	add	r7, ip
10009fa0:	0424      	lsls	r4, r4, #16
10009fa2:	0433      	lsls	r3, r6, #16
10009fa4:	0c24      	lsrs	r4, r4, #16
10009fa6:	191b      	adds	r3, r3, r4
10009fa8:	019d      	lsls	r5, r3, #6
10009faa:	1e6c      	subs	r4, r5, #1
10009fac:	41a5      	sbcs	r5, r4
10009fae:	0e9b      	lsrs	r3, r3, #26
10009fb0:	0c36      	lsrs	r6, r6, #16
10009fb2:	432b      	orrs	r3, r5
10009fb4:	19bd      	adds	r5, r7, r6
10009fb6:	01ad      	lsls	r5, r5, #6
10009fb8:	431d      	orrs	r5, r3
10009fba:	012b      	lsls	r3, r5, #4
10009fbc:	d504      	bpl.n	10009fc8 <__aeabi_fmul+0x194>
10009fbe:	2301      	movs	r3, #1
10009fc0:	0868      	lsrs	r0, r5, #1
10009fc2:	401d      	ands	r5, r3
10009fc4:	4305      	orrs	r5, r0
10009fc6:	1c08      	adds	r0, r1, #0
10009fc8:	1c03      	adds	r3, r0, #0
10009fca:	337f      	adds	r3, #127	; 0x7f
10009fcc:	2b00      	cmp	r3, #0
10009fce:	dd2c      	ble.n	1000a02a <__aeabi_fmul+0x1f6>
10009fd0:	0769      	lsls	r1, r5, #29
10009fd2:	d004      	beq.n	10009fde <__aeabi_fmul+0x1aa>
10009fd4:	210f      	movs	r1, #15
10009fd6:	4029      	ands	r1, r5
10009fd8:	2904      	cmp	r1, #4
10009fda:	d000      	beq.n	10009fde <__aeabi_fmul+0x1aa>
10009fdc:	3504      	adds	r5, #4
10009fde:	0129      	lsls	r1, r5, #4
10009fe0:	d503      	bpl.n	10009fea <__aeabi_fmul+0x1b6>
10009fe2:	4b2c      	ldr	r3, [pc, #176]	; (1000a094 <__aeabi_fmul+0x260>)
10009fe4:	401d      	ands	r5, r3
10009fe6:	1c03      	adds	r3, r0, #0
10009fe8:	3380      	adds	r3, #128	; 0x80
10009fea:	2bfe      	cmp	r3, #254	; 0xfe
10009fec:	dd17      	ble.n	1000a01e <__aeabi_fmul+0x1ea>
10009fee:	2401      	movs	r4, #1
10009ff0:	23ff      	movs	r3, #255	; 0xff
10009ff2:	4014      	ands	r4, r2
10009ff4:	2500      	movs	r5, #0
10009ff6:	e764      	b.n	10009ec2 <__aeabi_fmul+0x8e>
10009ff8:	2080      	movs	r0, #128	; 0x80
10009ffa:	03c0      	lsls	r0, r0, #15
10009ffc:	4205      	tst	r5, r0
10009ffe:	d009      	beq.n	1000a014 <__aeabi_fmul+0x1e0>
1000a000:	4643      	mov	r3, r8
1000a002:	4203      	tst	r3, r0
1000a004:	d106      	bne.n	1000a014 <__aeabi_fmul+0x1e0>
1000a006:	4645      	mov	r5, r8
1000a008:	4305      	orrs	r5, r0
1000a00a:	026d      	lsls	r5, r5, #9
1000a00c:	0a6d      	lsrs	r5, r5, #9
1000a00e:	464c      	mov	r4, r9
1000a010:	23ff      	movs	r3, #255	; 0xff
1000a012:	e756      	b.n	10009ec2 <__aeabi_fmul+0x8e>
1000a014:	4305      	orrs	r5, r0
1000a016:	026d      	lsls	r5, r5, #9
1000a018:	0a6d      	lsrs	r5, r5, #9
1000a01a:	23ff      	movs	r3, #255	; 0xff
1000a01c:	e751      	b.n	10009ec2 <__aeabi_fmul+0x8e>
1000a01e:	2401      	movs	r4, #1
1000a020:	01ad      	lsls	r5, r5, #6
1000a022:	0a6d      	lsrs	r5, r5, #9
1000a024:	b2db      	uxtb	r3, r3
1000a026:	4014      	ands	r4, r2
1000a028:	e74b      	b.n	10009ec2 <__aeabi_fmul+0x8e>
1000a02a:	237e      	movs	r3, #126	; 0x7e
1000a02c:	425b      	negs	r3, r3
1000a02e:	1a1b      	subs	r3, r3, r0
1000a030:	2b1b      	cmp	r3, #27
1000a032:	dd07      	ble.n	1000a044 <__aeabi_fmul+0x210>
1000a034:	2401      	movs	r4, #1
1000a036:	2300      	movs	r3, #0
1000a038:	4014      	ands	r4, r2
1000a03a:	2500      	movs	r5, #0
1000a03c:	e741      	b.n	10009ec2 <__aeabi_fmul+0x8e>
1000a03e:	1c08      	adds	r0, r1, #0
1000a040:	465a      	mov	r2, fp
1000a042:	e7c1      	b.n	10009fc8 <__aeabi_fmul+0x194>
1000a044:	309e      	adds	r0, #158	; 0x9e
1000a046:	1c29      	adds	r1, r5, #0
1000a048:	4085      	lsls	r5, r0
1000a04a:	40d9      	lsrs	r1, r3
1000a04c:	1e68      	subs	r0, r5, #1
1000a04e:	4185      	sbcs	r5, r0
1000a050:	430d      	orrs	r5, r1
1000a052:	076b      	lsls	r3, r5, #29
1000a054:	d004      	beq.n	1000a060 <__aeabi_fmul+0x22c>
1000a056:	230f      	movs	r3, #15
1000a058:	402b      	ands	r3, r5
1000a05a:	2b04      	cmp	r3, #4
1000a05c:	d000      	beq.n	1000a060 <__aeabi_fmul+0x22c>
1000a05e:	3504      	adds	r5, #4
1000a060:	016b      	lsls	r3, r5, #5
1000a062:	d504      	bpl.n	1000a06e <__aeabi_fmul+0x23a>
1000a064:	2401      	movs	r4, #1
1000a066:	2301      	movs	r3, #1
1000a068:	4014      	ands	r4, r2
1000a06a:	2500      	movs	r5, #0
1000a06c:	e729      	b.n	10009ec2 <__aeabi_fmul+0x8e>
1000a06e:	2401      	movs	r4, #1
1000a070:	01ad      	lsls	r5, r5, #6
1000a072:	0a6d      	lsrs	r5, r5, #9
1000a074:	4014      	ands	r4, r2
1000a076:	2300      	movs	r3, #0
1000a078:	e723      	b.n	10009ec2 <__aeabi_fmul+0x8e>
1000a07a:	2380      	movs	r3, #128	; 0x80
1000a07c:	03db      	lsls	r3, r3, #15
1000a07e:	431d      	orrs	r5, r3
1000a080:	2401      	movs	r4, #1
1000a082:	465b      	mov	r3, fp
1000a084:	026d      	lsls	r5, r5, #9
1000a086:	4023      	ands	r3, r4
1000a088:	1c1c      	adds	r4, r3, #0
1000a08a:	0a6d      	lsrs	r5, r5, #9
1000a08c:	23ff      	movs	r3, #255	; 0xff
1000a08e:	e718      	b.n	10009ec2 <__aeabi_fmul+0x8e>
1000a090:	1000e920 	.word	0x1000e920
1000a094:	f7ffffff 	.word	0xf7ffffff

1000a098 <__aeabi_i2f>:
1000a098:	b570      	push	{r4, r5, r6, lr}
1000a09a:	1e04      	subs	r4, r0, #0
1000a09c:	d039      	beq.n	1000a112 <__aeabi_i2f+0x7a>
1000a09e:	0fc5      	lsrs	r5, r0, #31
1000a0a0:	d000      	beq.n	1000a0a4 <__aeabi_i2f+0xc>
1000a0a2:	4244      	negs	r4, r0
1000a0a4:	1c20      	adds	r0, r4, #0
1000a0a6:	f001 fe9d 	bl	1000bde4 <__clzsi2>
1000a0aa:	239e      	movs	r3, #158	; 0x9e
1000a0ac:	1c26      	adds	r6, r4, #0
1000a0ae:	1a1b      	subs	r3, r3, r0
1000a0b0:	2b96      	cmp	r3, #150	; 0x96
1000a0b2:	dc07      	bgt.n	1000a0c4 <__aeabi_i2f+0x2c>
1000a0b4:	2808      	cmp	r0, #8
1000a0b6:	dd01      	ble.n	1000a0bc <__aeabi_i2f+0x24>
1000a0b8:	3808      	subs	r0, #8
1000a0ba:	4084      	lsls	r4, r0
1000a0bc:	0264      	lsls	r4, r4, #9
1000a0be:	0a64      	lsrs	r4, r4, #9
1000a0c0:	b2d8      	uxtb	r0, r3
1000a0c2:	e01e      	b.n	1000a102 <__aeabi_i2f+0x6a>
1000a0c4:	2b99      	cmp	r3, #153	; 0x99
1000a0c6:	dd0a      	ble.n	1000a0de <__aeabi_i2f+0x46>
1000a0c8:	2205      	movs	r2, #5
1000a0ca:	1c21      	adds	r1, r4, #0
1000a0cc:	1a12      	subs	r2, r2, r0
1000a0ce:	40d1      	lsrs	r1, r2
1000a0d0:	1c0a      	adds	r2, r1, #0
1000a0d2:	1c01      	adds	r1, r0, #0
1000a0d4:	311b      	adds	r1, #27
1000a0d6:	408e      	lsls	r6, r1
1000a0d8:	1e71      	subs	r1, r6, #1
1000a0da:	418e      	sbcs	r6, r1
1000a0dc:	4316      	orrs	r6, r2
1000a0de:	2805      	cmp	r0, #5
1000a0e0:	dd01      	ble.n	1000a0e6 <__aeabi_i2f+0x4e>
1000a0e2:	1f42      	subs	r2, r0, #5
1000a0e4:	4096      	lsls	r6, r2
1000a0e6:	4c0f      	ldr	r4, [pc, #60]	; (1000a124 <__aeabi_i2f+0x8c>)
1000a0e8:	4034      	ands	r4, r6
1000a0ea:	0772      	lsls	r2, r6, #29
1000a0ec:	d004      	beq.n	1000a0f8 <__aeabi_i2f+0x60>
1000a0ee:	220f      	movs	r2, #15
1000a0f0:	4016      	ands	r6, r2
1000a0f2:	2e04      	cmp	r6, #4
1000a0f4:	d000      	beq.n	1000a0f8 <__aeabi_i2f+0x60>
1000a0f6:	3404      	adds	r4, #4
1000a0f8:	0162      	lsls	r2, r4, #5
1000a0fa:	d40e      	bmi.n	1000a11a <__aeabi_i2f+0x82>
1000a0fc:	01a4      	lsls	r4, r4, #6
1000a0fe:	0a64      	lsrs	r4, r4, #9
1000a100:	b2d8      	uxtb	r0, r3
1000a102:	0264      	lsls	r4, r4, #9
1000a104:	05c0      	lsls	r0, r0, #23
1000a106:	0a64      	lsrs	r4, r4, #9
1000a108:	07ed      	lsls	r5, r5, #31
1000a10a:	4304      	orrs	r4, r0
1000a10c:	432c      	orrs	r4, r5
1000a10e:	1c20      	adds	r0, r4, #0
1000a110:	bd70      	pop	{r4, r5, r6, pc}
1000a112:	2500      	movs	r5, #0
1000a114:	2000      	movs	r0, #0
1000a116:	2400      	movs	r4, #0
1000a118:	e7f3      	b.n	1000a102 <__aeabi_i2f+0x6a>
1000a11a:	4b02      	ldr	r3, [pc, #8]	; (1000a124 <__aeabi_i2f+0x8c>)
1000a11c:	401c      	ands	r4, r3
1000a11e:	239f      	movs	r3, #159	; 0x9f
1000a120:	1a1b      	subs	r3, r3, r0
1000a122:	e7eb      	b.n	1000a0fc <__aeabi_i2f+0x64>
1000a124:	fbffffff 	.word	0xfbffffff

1000a128 <__aeabi_dadd>:
1000a128:	b5f0      	push	{r4, r5, r6, r7, lr}
1000a12a:	4645      	mov	r5, r8
1000a12c:	4657      	mov	r7, sl
1000a12e:	464e      	mov	r6, r9
1000a130:	4694      	mov	ip, r2
1000a132:	004c      	lsls	r4, r1, #1
1000a134:	030a      	lsls	r2, r1, #12
1000a136:	0fc9      	lsrs	r1, r1, #31
1000a138:	b4e0      	push	{r5, r6, r7}
1000a13a:	4688      	mov	r8, r1
1000a13c:	1c0e      	adds	r6, r1, #0
1000a13e:	0319      	lsls	r1, r3, #12
1000a140:	0f47      	lsrs	r7, r0, #29
1000a142:	00c5      	lsls	r5, r0, #3
1000a144:	0a48      	lsrs	r0, r1, #9
1000a146:	4661      	mov	r1, ip
1000a148:	0f49      	lsrs	r1, r1, #29
1000a14a:	4301      	orrs	r1, r0
1000a14c:	4660      	mov	r0, ip
1000a14e:	0a52      	lsrs	r2, r2, #9
1000a150:	4317      	orrs	r7, r2
1000a152:	00c0      	lsls	r0, r0, #3
1000a154:	005a      	lsls	r2, r3, #1
1000a156:	0d64      	lsrs	r4, r4, #21
1000a158:	0d52      	lsrs	r2, r2, #21
1000a15a:	0fdb      	lsrs	r3, r3, #31
1000a15c:	4684      	mov	ip, r0
1000a15e:	4598      	cmp	r8, r3
1000a160:	d100      	bne.n	1000a164 <__aeabi_dadd+0x3c>
1000a162:	e0a7      	b.n	1000a2b4 <__aeabi_dadd+0x18c>
1000a164:	1aa0      	subs	r0, r4, r2
1000a166:	2800      	cmp	r0, #0
1000a168:	dc00      	bgt.n	1000a16c <__aeabi_dadd+0x44>
1000a16a:	e101      	b.n	1000a370 <__aeabi_dadd+0x248>
1000a16c:	2a00      	cmp	r2, #0
1000a16e:	d13d      	bne.n	1000a1ec <__aeabi_dadd+0xc4>
1000a170:	4663      	mov	r3, ip
1000a172:	430b      	orrs	r3, r1
1000a174:	d000      	beq.n	1000a178 <__aeabi_dadd+0x50>
1000a176:	e0d4      	b.n	1000a322 <__aeabi_dadd+0x1fa>
1000a178:	076b      	lsls	r3, r5, #29
1000a17a:	d100      	bne.n	1000a17e <__aeabi_dadd+0x56>
1000a17c:	e088      	b.n	1000a290 <__aeabi_dadd+0x168>
1000a17e:	230f      	movs	r3, #15
1000a180:	402b      	ands	r3, r5
1000a182:	2b04      	cmp	r3, #4
1000a184:	d100      	bne.n	1000a188 <__aeabi_dadd+0x60>
1000a186:	e083      	b.n	1000a290 <__aeabi_dadd+0x168>
1000a188:	1d2a      	adds	r2, r5, #4
1000a18a:	42aa      	cmp	r2, r5
1000a18c:	41ad      	sbcs	r5, r5
1000a18e:	2380      	movs	r3, #128	; 0x80
1000a190:	426d      	negs	r5, r5
1000a192:	197f      	adds	r7, r7, r5
1000a194:	041b      	lsls	r3, r3, #16
1000a196:	403b      	ands	r3, r7
1000a198:	4646      	mov	r6, r8
1000a19a:	1c15      	adds	r5, r2, #0
1000a19c:	2b00      	cmp	r3, #0
1000a19e:	d100      	bne.n	1000a1a2 <__aeabi_dadd+0x7a>
1000a1a0:	e07c      	b.n	1000a29c <__aeabi_dadd+0x174>
1000a1a2:	4bcc      	ldr	r3, [pc, #816]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a1a4:	3401      	adds	r4, #1
1000a1a6:	429c      	cmp	r4, r3
1000a1a8:	d100      	bne.n	1000a1ac <__aeabi_dadd+0x84>
1000a1aa:	e0fd      	b.n	1000a3a8 <__aeabi_dadd+0x280>
1000a1ac:	1c3a      	adds	r2, r7, #0
1000a1ae:	4bca      	ldr	r3, [pc, #808]	; (1000a4d8 <__aeabi_dadd+0x3b0>)
1000a1b0:	08ed      	lsrs	r5, r5, #3
1000a1b2:	401a      	ands	r2, r3
1000a1b4:	0750      	lsls	r0, r2, #29
1000a1b6:	0564      	lsls	r4, r4, #21
1000a1b8:	0252      	lsls	r2, r2, #9
1000a1ba:	4305      	orrs	r5, r0
1000a1bc:	0b12      	lsrs	r2, r2, #12
1000a1be:	0d64      	lsrs	r4, r4, #21
1000a1c0:	2100      	movs	r1, #0
1000a1c2:	0312      	lsls	r2, r2, #12
1000a1c4:	0d0b      	lsrs	r3, r1, #20
1000a1c6:	051b      	lsls	r3, r3, #20
1000a1c8:	0564      	lsls	r4, r4, #21
1000a1ca:	0b12      	lsrs	r2, r2, #12
1000a1cc:	431a      	orrs	r2, r3
1000a1ce:	0863      	lsrs	r3, r4, #1
1000a1d0:	4cc2      	ldr	r4, [pc, #776]	; (1000a4dc <__aeabi_dadd+0x3b4>)
1000a1d2:	07f6      	lsls	r6, r6, #31
1000a1d4:	4014      	ands	r4, r2
1000a1d6:	431c      	orrs	r4, r3
1000a1d8:	0064      	lsls	r4, r4, #1
1000a1da:	0864      	lsrs	r4, r4, #1
1000a1dc:	4334      	orrs	r4, r6
1000a1de:	1c28      	adds	r0, r5, #0
1000a1e0:	1c21      	adds	r1, r4, #0
1000a1e2:	bc1c      	pop	{r2, r3, r4}
1000a1e4:	4690      	mov	r8, r2
1000a1e6:	4699      	mov	r9, r3
1000a1e8:	46a2      	mov	sl, r4
1000a1ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000a1ec:	4bb9      	ldr	r3, [pc, #740]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a1ee:	429c      	cmp	r4, r3
1000a1f0:	d0c2      	beq.n	1000a178 <__aeabi_dadd+0x50>
1000a1f2:	2380      	movs	r3, #128	; 0x80
1000a1f4:	041b      	lsls	r3, r3, #16
1000a1f6:	4319      	orrs	r1, r3
1000a1f8:	2838      	cmp	r0, #56	; 0x38
1000a1fa:	dd00      	ble.n	1000a1fe <__aeabi_dadd+0xd6>
1000a1fc:	e0ec      	b.n	1000a3d8 <__aeabi_dadd+0x2b0>
1000a1fe:	281f      	cmp	r0, #31
1000a200:	dd00      	ble.n	1000a204 <__aeabi_dadd+0xdc>
1000a202:	e121      	b.n	1000a448 <__aeabi_dadd+0x320>
1000a204:	2220      	movs	r2, #32
1000a206:	1c0e      	adds	r6, r1, #0
1000a208:	4663      	mov	r3, ip
1000a20a:	1a12      	subs	r2, r2, r0
1000a20c:	4096      	lsls	r6, r2
1000a20e:	40c3      	lsrs	r3, r0
1000a210:	4333      	orrs	r3, r6
1000a212:	4666      	mov	r6, ip
1000a214:	4096      	lsls	r6, r2
1000a216:	1c32      	adds	r2, r6, #0
1000a218:	1e56      	subs	r6, r2, #1
1000a21a:	41b2      	sbcs	r2, r6
1000a21c:	4313      	orrs	r3, r2
1000a21e:	1c0a      	adds	r2, r1, #0
1000a220:	40c2      	lsrs	r2, r0
1000a222:	1aeb      	subs	r3, r5, r3
1000a224:	429d      	cmp	r5, r3
1000a226:	41b6      	sbcs	r6, r6
1000a228:	1c1d      	adds	r5, r3, #0
1000a22a:	1aba      	subs	r2, r7, r2
1000a22c:	4276      	negs	r6, r6
1000a22e:	1b97      	subs	r7, r2, r6
1000a230:	023b      	lsls	r3, r7, #8
1000a232:	d400      	bmi.n	1000a236 <__aeabi_dadd+0x10e>
1000a234:	e097      	b.n	1000a366 <__aeabi_dadd+0x23e>
1000a236:	027a      	lsls	r2, r7, #9
1000a238:	0a56      	lsrs	r6, r2, #9
1000a23a:	2e00      	cmp	r6, #0
1000a23c:	d100      	bne.n	1000a240 <__aeabi_dadd+0x118>
1000a23e:	e0b6      	b.n	1000a3ae <__aeabi_dadd+0x286>
1000a240:	1c30      	adds	r0, r6, #0
1000a242:	f001 fdcf 	bl	1000bde4 <__clzsi2>
1000a246:	1c03      	adds	r3, r0, #0
1000a248:	3b08      	subs	r3, #8
1000a24a:	2b1f      	cmp	r3, #31
1000a24c:	dd00      	ble.n	1000a250 <__aeabi_dadd+0x128>
1000a24e:	e0b7      	b.n	1000a3c0 <__aeabi_dadd+0x298>
1000a250:	409e      	lsls	r6, r3
1000a252:	1c37      	adds	r7, r6, #0
1000a254:	2628      	movs	r6, #40	; 0x28
1000a256:	1c2a      	adds	r2, r5, #0
1000a258:	1a36      	subs	r6, r6, r0
1000a25a:	40f2      	lsrs	r2, r6
1000a25c:	1c16      	adds	r6, r2, #0
1000a25e:	409d      	lsls	r5, r3
1000a260:	433e      	orrs	r6, r7
1000a262:	429c      	cmp	r4, r3
1000a264:	dd00      	ble.n	1000a268 <__aeabi_dadd+0x140>
1000a266:	e0b2      	b.n	1000a3ce <__aeabi_dadd+0x2a6>
1000a268:	1b1c      	subs	r4, r3, r4
1000a26a:	1c62      	adds	r2, r4, #1
1000a26c:	2a1f      	cmp	r2, #31
1000a26e:	dd00      	ble.n	1000a272 <__aeabi_dadd+0x14a>
1000a270:	e0d8      	b.n	1000a424 <__aeabi_dadd+0x2fc>
1000a272:	231f      	movs	r3, #31
1000a274:	1c29      	adds	r1, r5, #0
1000a276:	1b1c      	subs	r4, r3, r4
1000a278:	1c33      	adds	r3, r6, #0
1000a27a:	40a5      	lsls	r5, r4
1000a27c:	40a3      	lsls	r3, r4
1000a27e:	40d1      	lsrs	r1, r2
1000a280:	1e6c      	subs	r4, r5, #1
1000a282:	41a5      	sbcs	r5, r4
1000a284:	40d6      	lsrs	r6, r2
1000a286:	4319      	orrs	r1, r3
1000a288:	430d      	orrs	r5, r1
1000a28a:	1c37      	adds	r7, r6, #0
1000a28c:	2400      	movs	r4, #0
1000a28e:	e773      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a290:	2380      	movs	r3, #128	; 0x80
1000a292:	041b      	lsls	r3, r3, #16
1000a294:	403b      	ands	r3, r7
1000a296:	4646      	mov	r6, r8
1000a298:	d000      	beq.n	1000a29c <__aeabi_dadd+0x174>
1000a29a:	e782      	b.n	1000a1a2 <__aeabi_dadd+0x7a>
1000a29c:	4b8d      	ldr	r3, [pc, #564]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a29e:	08ed      	lsrs	r5, r5, #3
1000a2a0:	0778      	lsls	r0, r7, #29
1000a2a2:	4305      	orrs	r5, r0
1000a2a4:	08fa      	lsrs	r2, r7, #3
1000a2a6:	429c      	cmp	r4, r3
1000a2a8:	d032      	beq.n	1000a310 <__aeabi_dadd+0x1e8>
1000a2aa:	0312      	lsls	r2, r2, #12
1000a2ac:	0564      	lsls	r4, r4, #21
1000a2ae:	0b12      	lsrs	r2, r2, #12
1000a2b0:	0d64      	lsrs	r4, r4, #21
1000a2b2:	e785      	b.n	1000a1c0 <__aeabi_dadd+0x98>
1000a2b4:	1aa3      	subs	r3, r4, r2
1000a2b6:	2b00      	cmp	r3, #0
1000a2b8:	dc00      	bgt.n	1000a2bc <__aeabi_dadd+0x194>
1000a2ba:	e094      	b.n	1000a3e6 <__aeabi_dadd+0x2be>
1000a2bc:	2a00      	cmp	r2, #0
1000a2be:	d03c      	beq.n	1000a33a <__aeabi_dadd+0x212>
1000a2c0:	4a84      	ldr	r2, [pc, #528]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a2c2:	4294      	cmp	r4, r2
1000a2c4:	d100      	bne.n	1000a2c8 <__aeabi_dadd+0x1a0>
1000a2c6:	e757      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a2c8:	2280      	movs	r2, #128	; 0x80
1000a2ca:	0412      	lsls	r2, r2, #16
1000a2cc:	4311      	orrs	r1, r2
1000a2ce:	2b38      	cmp	r3, #56	; 0x38
1000a2d0:	dc00      	bgt.n	1000a2d4 <__aeabi_dadd+0x1ac>
1000a2d2:	e105      	b.n	1000a4e0 <__aeabi_dadd+0x3b8>
1000a2d4:	4663      	mov	r3, ip
1000a2d6:	4319      	orrs	r1, r3
1000a2d8:	1e48      	subs	r0, r1, #1
1000a2da:	4181      	sbcs	r1, r0
1000a2dc:	2200      	movs	r2, #0
1000a2de:	b2c8      	uxtb	r0, r1
1000a2e0:	1940      	adds	r0, r0, r5
1000a2e2:	42a8      	cmp	r0, r5
1000a2e4:	419b      	sbcs	r3, r3
1000a2e6:	1c05      	adds	r5, r0, #0
1000a2e8:	19d2      	adds	r2, r2, r7
1000a2ea:	425b      	negs	r3, r3
1000a2ec:	18d7      	adds	r7, r2, r3
1000a2ee:	023b      	lsls	r3, r7, #8
1000a2f0:	d539      	bpl.n	1000a366 <__aeabi_dadd+0x23e>
1000a2f2:	4b78      	ldr	r3, [pc, #480]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a2f4:	3401      	adds	r4, #1
1000a2f6:	429c      	cmp	r4, r3
1000a2f8:	d100      	bne.n	1000a2fc <__aeabi_dadd+0x1d4>
1000a2fa:	e14c      	b.n	1000a596 <__aeabi_dadd+0x46e>
1000a2fc:	2001      	movs	r0, #1
1000a2fe:	4a76      	ldr	r2, [pc, #472]	; (1000a4d8 <__aeabi_dadd+0x3b0>)
1000a300:	086b      	lsrs	r3, r5, #1
1000a302:	403a      	ands	r2, r7
1000a304:	4028      	ands	r0, r5
1000a306:	4318      	orrs	r0, r3
1000a308:	07d5      	lsls	r5, r2, #31
1000a30a:	4305      	orrs	r5, r0
1000a30c:	0857      	lsrs	r7, r2, #1
1000a30e:	e733      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a310:	1c2b      	adds	r3, r5, #0
1000a312:	4313      	orrs	r3, r2
1000a314:	d048      	beq.n	1000a3a8 <__aeabi_dadd+0x280>
1000a316:	2380      	movs	r3, #128	; 0x80
1000a318:	031b      	lsls	r3, r3, #12
1000a31a:	431a      	orrs	r2, r3
1000a31c:	0312      	lsls	r2, r2, #12
1000a31e:	0b12      	lsrs	r2, r2, #12
1000a320:	e74e      	b.n	1000a1c0 <__aeabi_dadd+0x98>
1000a322:	3801      	subs	r0, #1
1000a324:	2800      	cmp	r0, #0
1000a326:	d178      	bne.n	1000a41a <__aeabi_dadd+0x2f2>
1000a328:	4663      	mov	r3, ip
1000a32a:	1aee      	subs	r6, r5, r3
1000a32c:	42b5      	cmp	r5, r6
1000a32e:	419b      	sbcs	r3, r3
1000a330:	1a7a      	subs	r2, r7, r1
1000a332:	425b      	negs	r3, r3
1000a334:	1ad7      	subs	r7, r2, r3
1000a336:	1c35      	adds	r5, r6, #0
1000a338:	e77a      	b.n	1000a230 <__aeabi_dadd+0x108>
1000a33a:	1c02      	adds	r2, r0, #0
1000a33c:	430a      	orrs	r2, r1
1000a33e:	d100      	bne.n	1000a342 <__aeabi_dadd+0x21a>
1000a340:	e71a      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a342:	3b01      	subs	r3, #1
1000a344:	2b00      	cmp	r3, #0
1000a346:	d000      	beq.n	1000a34a <__aeabi_dadd+0x222>
1000a348:	e0f2      	b.n	1000a530 <__aeabi_dadd+0x408>
1000a34a:	1940      	adds	r0, r0, r5
1000a34c:	42a8      	cmp	r0, r5
1000a34e:	419b      	sbcs	r3, r3
1000a350:	19ca      	adds	r2, r1, r7
1000a352:	425b      	negs	r3, r3
1000a354:	18d7      	adds	r7, r2, r3
1000a356:	1c05      	adds	r5, r0, #0
1000a358:	e7c9      	b.n	1000a2ee <__aeabi_dadd+0x1c6>
1000a35a:	1c13      	adds	r3, r2, #0
1000a35c:	4333      	orrs	r3, r6
1000a35e:	d100      	bne.n	1000a362 <__aeabi_dadd+0x23a>
1000a360:	e118      	b.n	1000a594 <__aeabi_dadd+0x46c>
1000a362:	1c17      	adds	r7, r2, #0
1000a364:	1c35      	adds	r5, r6, #0
1000a366:	4646      	mov	r6, r8
1000a368:	076b      	lsls	r3, r5, #29
1000a36a:	d000      	beq.n	1000a36e <__aeabi_dadd+0x246>
1000a36c:	e707      	b.n	1000a17e <__aeabi_dadd+0x56>
1000a36e:	e795      	b.n	1000a29c <__aeabi_dadd+0x174>
1000a370:	2800      	cmp	r0, #0
1000a372:	d17a      	bne.n	1000a46a <__aeabi_dadd+0x342>
1000a374:	1c62      	adds	r2, r4, #1
1000a376:	0552      	lsls	r2, r2, #21
1000a378:	0d52      	lsrs	r2, r2, #21
1000a37a:	2a01      	cmp	r2, #1
1000a37c:	dc00      	bgt.n	1000a380 <__aeabi_dadd+0x258>
1000a37e:	e0fb      	b.n	1000a578 <__aeabi_dadd+0x450>
1000a380:	4662      	mov	r2, ip
1000a382:	1aaa      	subs	r2, r5, r2
1000a384:	4295      	cmp	r5, r2
1000a386:	41b6      	sbcs	r6, r6
1000a388:	4691      	mov	r9, r2
1000a38a:	1a78      	subs	r0, r7, r1
1000a38c:	4272      	negs	r2, r6
1000a38e:	1a86      	subs	r6, r0, r2
1000a390:	0232      	lsls	r2, r6, #8
1000a392:	d400      	bmi.n	1000a396 <__aeabi_dadd+0x26e>
1000a394:	e093      	b.n	1000a4be <__aeabi_dadd+0x396>
1000a396:	4662      	mov	r2, ip
1000a398:	1b55      	subs	r5, r2, r5
1000a39a:	45ac      	cmp	ip, r5
1000a39c:	4180      	sbcs	r0, r0
1000a39e:	1bcf      	subs	r7, r1, r7
1000a3a0:	4240      	negs	r0, r0
1000a3a2:	1a3e      	subs	r6, r7, r0
1000a3a4:	4698      	mov	r8, r3
1000a3a6:	e748      	b.n	1000a23a <__aeabi_dadd+0x112>
1000a3a8:	2200      	movs	r2, #0
1000a3aa:	2500      	movs	r5, #0
1000a3ac:	e708      	b.n	1000a1c0 <__aeabi_dadd+0x98>
1000a3ae:	1c28      	adds	r0, r5, #0
1000a3b0:	f001 fd18 	bl	1000bde4 <__clzsi2>
1000a3b4:	3020      	adds	r0, #32
1000a3b6:	1c03      	adds	r3, r0, #0
1000a3b8:	3b08      	subs	r3, #8
1000a3ba:	2b1f      	cmp	r3, #31
1000a3bc:	dc00      	bgt.n	1000a3c0 <__aeabi_dadd+0x298>
1000a3be:	e747      	b.n	1000a250 <__aeabi_dadd+0x128>
1000a3c0:	3828      	subs	r0, #40	; 0x28
1000a3c2:	4085      	lsls	r5, r0
1000a3c4:	1c2e      	adds	r6, r5, #0
1000a3c6:	2500      	movs	r5, #0
1000a3c8:	429c      	cmp	r4, r3
1000a3ca:	dc00      	bgt.n	1000a3ce <__aeabi_dadd+0x2a6>
1000a3cc:	e74c      	b.n	1000a268 <__aeabi_dadd+0x140>
1000a3ce:	4a42      	ldr	r2, [pc, #264]	; (1000a4d8 <__aeabi_dadd+0x3b0>)
1000a3d0:	1ae4      	subs	r4, r4, r3
1000a3d2:	4016      	ands	r6, r2
1000a3d4:	1c37      	adds	r7, r6, #0
1000a3d6:	e6cf      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a3d8:	4663      	mov	r3, ip
1000a3da:	4319      	orrs	r1, r3
1000a3dc:	1e4b      	subs	r3, r1, #1
1000a3de:	4199      	sbcs	r1, r3
1000a3e0:	2200      	movs	r2, #0
1000a3e2:	b2cb      	uxtb	r3, r1
1000a3e4:	e71d      	b.n	1000a222 <__aeabi_dadd+0xfa>
1000a3e6:	2b00      	cmp	r3, #0
1000a3e8:	d000      	beq.n	1000a3ec <__aeabi_dadd+0x2c4>
1000a3ea:	e0f2      	b.n	1000a5d2 <__aeabi_dadd+0x4aa>
1000a3ec:	1c60      	adds	r0, r4, #1
1000a3ee:	0543      	lsls	r3, r0, #21
1000a3f0:	0d5b      	lsrs	r3, r3, #21
1000a3f2:	2b01      	cmp	r3, #1
1000a3f4:	dc00      	bgt.n	1000a3f8 <__aeabi_dadd+0x2d0>
1000a3f6:	e0a4      	b.n	1000a542 <__aeabi_dadd+0x41a>
1000a3f8:	4b36      	ldr	r3, [pc, #216]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a3fa:	4298      	cmp	r0, r3
1000a3fc:	d100      	bne.n	1000a400 <__aeabi_dadd+0x2d8>
1000a3fe:	e121      	b.n	1000a644 <__aeabi_dadd+0x51c>
1000a400:	4663      	mov	r3, ip
1000a402:	195c      	adds	r4, r3, r5
1000a404:	42ac      	cmp	r4, r5
1000a406:	419b      	sbcs	r3, r3
1000a408:	19cf      	adds	r7, r1, r7
1000a40a:	425b      	negs	r3, r3
1000a40c:	18fa      	adds	r2, r7, r3
1000a40e:	0864      	lsrs	r4, r4, #1
1000a410:	07d5      	lsls	r5, r2, #31
1000a412:	4325      	orrs	r5, r4
1000a414:	0857      	lsrs	r7, r2, #1
1000a416:	1c04      	adds	r4, r0, #0
1000a418:	e6ae      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a41a:	4b2e      	ldr	r3, [pc, #184]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a41c:	429c      	cmp	r4, r3
1000a41e:	d000      	beq.n	1000a422 <__aeabi_dadd+0x2fa>
1000a420:	e6ea      	b.n	1000a1f8 <__aeabi_dadd+0xd0>
1000a422:	e6a9      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a424:	1c21      	adds	r1, r4, #0
1000a426:	1c33      	adds	r3, r6, #0
1000a428:	391f      	subs	r1, #31
1000a42a:	40cb      	lsrs	r3, r1
1000a42c:	1c19      	adds	r1, r3, #0
1000a42e:	2a20      	cmp	r2, #32
1000a430:	d100      	bne.n	1000a434 <__aeabi_dadd+0x30c>
1000a432:	e082      	b.n	1000a53a <__aeabi_dadd+0x412>
1000a434:	233f      	movs	r3, #63	; 0x3f
1000a436:	1b1c      	subs	r4, r3, r4
1000a438:	40a6      	lsls	r6, r4
1000a43a:	4335      	orrs	r5, r6
1000a43c:	1e6e      	subs	r6, r5, #1
1000a43e:	41b5      	sbcs	r5, r6
1000a440:	2700      	movs	r7, #0
1000a442:	430d      	orrs	r5, r1
1000a444:	2400      	movs	r4, #0
1000a446:	e78e      	b.n	1000a366 <__aeabi_dadd+0x23e>
1000a448:	1c03      	adds	r3, r0, #0
1000a44a:	1c0e      	adds	r6, r1, #0
1000a44c:	3b20      	subs	r3, #32
1000a44e:	40de      	lsrs	r6, r3
1000a450:	2820      	cmp	r0, #32
1000a452:	d074      	beq.n	1000a53e <__aeabi_dadd+0x416>
1000a454:	2340      	movs	r3, #64	; 0x40
1000a456:	1a1b      	subs	r3, r3, r0
1000a458:	4099      	lsls	r1, r3
1000a45a:	1c0b      	adds	r3, r1, #0
1000a45c:	4662      	mov	r2, ip
1000a45e:	4313      	orrs	r3, r2
1000a460:	1e59      	subs	r1, r3, #1
1000a462:	418b      	sbcs	r3, r1
1000a464:	2200      	movs	r2, #0
1000a466:	4333      	orrs	r3, r6
1000a468:	e6db      	b.n	1000a222 <__aeabi_dadd+0xfa>
1000a46a:	2c00      	cmp	r4, #0
1000a46c:	d050      	beq.n	1000a510 <__aeabi_dadd+0x3e8>
1000a46e:	4c19      	ldr	r4, [pc, #100]	; (1000a4d4 <__aeabi_dadd+0x3ac>)
1000a470:	42a2      	cmp	r2, r4
1000a472:	d100      	bne.n	1000a476 <__aeabi_dadd+0x34e>
1000a474:	e0a8      	b.n	1000a5c8 <__aeabi_dadd+0x4a0>
1000a476:	2480      	movs	r4, #128	; 0x80
1000a478:	0424      	lsls	r4, r4, #16
1000a47a:	4240      	negs	r0, r0
1000a47c:	4327      	orrs	r7, r4
1000a47e:	2838      	cmp	r0, #56	; 0x38
1000a480:	dd00      	ble.n	1000a484 <__aeabi_dadd+0x35c>
1000a482:	e0d9      	b.n	1000a638 <__aeabi_dadd+0x510>
1000a484:	281f      	cmp	r0, #31
1000a486:	dd00      	ble.n	1000a48a <__aeabi_dadd+0x362>
1000a488:	e139      	b.n	1000a6fe <__aeabi_dadd+0x5d6>
1000a48a:	2420      	movs	r4, #32
1000a48c:	1c3e      	adds	r6, r7, #0
1000a48e:	1a24      	subs	r4, r4, r0
1000a490:	40a6      	lsls	r6, r4
1000a492:	46b0      	mov	r8, r6
1000a494:	1c2e      	adds	r6, r5, #0
1000a496:	46a1      	mov	r9, r4
1000a498:	40c6      	lsrs	r6, r0
1000a49a:	4644      	mov	r4, r8
1000a49c:	4326      	orrs	r6, r4
1000a49e:	464c      	mov	r4, r9
1000a4a0:	40a5      	lsls	r5, r4
1000a4a2:	1e6c      	subs	r4, r5, #1
1000a4a4:	41a5      	sbcs	r5, r4
1000a4a6:	40c7      	lsrs	r7, r0
1000a4a8:	4335      	orrs	r5, r6
1000a4aa:	4660      	mov	r0, ip
1000a4ac:	1b45      	subs	r5, r0, r5
1000a4ae:	1bcf      	subs	r7, r1, r7
1000a4b0:	45ac      	cmp	ip, r5
1000a4b2:	4189      	sbcs	r1, r1
1000a4b4:	4249      	negs	r1, r1
1000a4b6:	1a7f      	subs	r7, r7, r1
1000a4b8:	1c14      	adds	r4, r2, #0
1000a4ba:	4698      	mov	r8, r3
1000a4bc:	e6b8      	b.n	1000a230 <__aeabi_dadd+0x108>
1000a4be:	464b      	mov	r3, r9
1000a4c0:	464d      	mov	r5, r9
1000a4c2:	4333      	orrs	r3, r6
1000a4c4:	d000      	beq.n	1000a4c8 <__aeabi_dadd+0x3a0>
1000a4c6:	e6b8      	b.n	1000a23a <__aeabi_dadd+0x112>
1000a4c8:	2600      	movs	r6, #0
1000a4ca:	2700      	movs	r7, #0
1000a4cc:	2400      	movs	r4, #0
1000a4ce:	2500      	movs	r5, #0
1000a4d0:	e6e4      	b.n	1000a29c <__aeabi_dadd+0x174>
1000a4d2:	46c0      	nop			; (mov r8, r8)
1000a4d4:	000007ff 	.word	0x000007ff
1000a4d8:	ff7fffff 	.word	0xff7fffff
1000a4dc:	800fffff 	.word	0x800fffff
1000a4e0:	2b1f      	cmp	r3, #31
1000a4e2:	dc5b      	bgt.n	1000a59c <__aeabi_dadd+0x474>
1000a4e4:	2220      	movs	r2, #32
1000a4e6:	1c08      	adds	r0, r1, #0
1000a4e8:	1ad2      	subs	r2, r2, r3
1000a4ea:	4090      	lsls	r0, r2
1000a4ec:	4681      	mov	r9, r0
1000a4ee:	4660      	mov	r0, ip
1000a4f0:	4692      	mov	sl, r2
1000a4f2:	40d8      	lsrs	r0, r3
1000a4f4:	464a      	mov	r2, r9
1000a4f6:	4310      	orrs	r0, r2
1000a4f8:	4681      	mov	r9, r0
1000a4fa:	4652      	mov	r2, sl
1000a4fc:	4660      	mov	r0, ip
1000a4fe:	4090      	lsls	r0, r2
1000a500:	1c02      	adds	r2, r0, #0
1000a502:	1e50      	subs	r0, r2, #1
1000a504:	4182      	sbcs	r2, r0
1000a506:	4648      	mov	r0, r9
1000a508:	4310      	orrs	r0, r2
1000a50a:	1c0a      	adds	r2, r1, #0
1000a50c:	40da      	lsrs	r2, r3
1000a50e:	e6e7      	b.n	1000a2e0 <__aeabi_dadd+0x1b8>
1000a510:	1c3c      	adds	r4, r7, #0
1000a512:	432c      	orrs	r4, r5
1000a514:	d058      	beq.n	1000a5c8 <__aeabi_dadd+0x4a0>
1000a516:	43c0      	mvns	r0, r0
1000a518:	2800      	cmp	r0, #0
1000a51a:	d151      	bne.n	1000a5c0 <__aeabi_dadd+0x498>
1000a51c:	4660      	mov	r0, ip
1000a51e:	1b45      	subs	r5, r0, r5
1000a520:	45ac      	cmp	ip, r5
1000a522:	4180      	sbcs	r0, r0
1000a524:	1bcf      	subs	r7, r1, r7
1000a526:	4240      	negs	r0, r0
1000a528:	1a3f      	subs	r7, r7, r0
1000a52a:	1c14      	adds	r4, r2, #0
1000a52c:	4698      	mov	r8, r3
1000a52e:	e67f      	b.n	1000a230 <__aeabi_dadd+0x108>
1000a530:	4a8f      	ldr	r2, [pc, #572]	; (1000a770 <__aeabi_dadd+0x648>)
1000a532:	4294      	cmp	r4, r2
1000a534:	d000      	beq.n	1000a538 <__aeabi_dadd+0x410>
1000a536:	e6ca      	b.n	1000a2ce <__aeabi_dadd+0x1a6>
1000a538:	e61e      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a53a:	2600      	movs	r6, #0
1000a53c:	e77d      	b.n	1000a43a <__aeabi_dadd+0x312>
1000a53e:	2300      	movs	r3, #0
1000a540:	e78c      	b.n	1000a45c <__aeabi_dadd+0x334>
1000a542:	1c3b      	adds	r3, r7, #0
1000a544:	432b      	orrs	r3, r5
1000a546:	2c00      	cmp	r4, #0
1000a548:	d000      	beq.n	1000a54c <__aeabi_dadd+0x424>
1000a54a:	e0bd      	b.n	1000a6c8 <__aeabi_dadd+0x5a0>
1000a54c:	2b00      	cmp	r3, #0
1000a54e:	d100      	bne.n	1000a552 <__aeabi_dadd+0x42a>
1000a550:	e0f5      	b.n	1000a73e <__aeabi_dadd+0x616>
1000a552:	4663      	mov	r3, ip
1000a554:	430b      	orrs	r3, r1
1000a556:	d100      	bne.n	1000a55a <__aeabi_dadd+0x432>
1000a558:	e60e      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a55a:	4663      	mov	r3, ip
1000a55c:	195b      	adds	r3, r3, r5
1000a55e:	42ab      	cmp	r3, r5
1000a560:	4180      	sbcs	r0, r0
1000a562:	19ca      	adds	r2, r1, r7
1000a564:	4240      	negs	r0, r0
1000a566:	1817      	adds	r7, r2, r0
1000a568:	023a      	lsls	r2, r7, #8
1000a56a:	d400      	bmi.n	1000a56e <__aeabi_dadd+0x446>
1000a56c:	e0fc      	b.n	1000a768 <__aeabi_dadd+0x640>
1000a56e:	4a81      	ldr	r2, [pc, #516]	; (1000a774 <__aeabi_dadd+0x64c>)
1000a570:	1c1d      	adds	r5, r3, #0
1000a572:	4017      	ands	r7, r2
1000a574:	3401      	adds	r4, #1
1000a576:	e5ff      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a578:	1c3a      	adds	r2, r7, #0
1000a57a:	432a      	orrs	r2, r5
1000a57c:	2c00      	cmp	r4, #0
1000a57e:	d151      	bne.n	1000a624 <__aeabi_dadd+0x4fc>
1000a580:	2a00      	cmp	r2, #0
1000a582:	d000      	beq.n	1000a586 <__aeabi_dadd+0x45e>
1000a584:	e085      	b.n	1000a692 <__aeabi_dadd+0x56a>
1000a586:	4662      	mov	r2, ip
1000a588:	430a      	orrs	r2, r1
1000a58a:	d003      	beq.n	1000a594 <__aeabi_dadd+0x46c>
1000a58c:	1c0f      	adds	r7, r1, #0
1000a58e:	4665      	mov	r5, ip
1000a590:	4698      	mov	r8, r3
1000a592:	e5f1      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a594:	2600      	movs	r6, #0
1000a596:	2700      	movs	r7, #0
1000a598:	2500      	movs	r5, #0
1000a59a:	e67f      	b.n	1000a29c <__aeabi_dadd+0x174>
1000a59c:	1c18      	adds	r0, r3, #0
1000a59e:	1c0a      	adds	r2, r1, #0
1000a5a0:	3820      	subs	r0, #32
1000a5a2:	40c2      	lsrs	r2, r0
1000a5a4:	2b20      	cmp	r3, #32
1000a5a6:	d100      	bne.n	1000a5aa <__aeabi_dadd+0x482>
1000a5a8:	e0a7      	b.n	1000a6fa <__aeabi_dadd+0x5d2>
1000a5aa:	2040      	movs	r0, #64	; 0x40
1000a5ac:	1ac0      	subs	r0, r0, r3
1000a5ae:	4081      	lsls	r1, r0
1000a5b0:	1c08      	adds	r0, r1, #0
1000a5b2:	4663      	mov	r3, ip
1000a5b4:	4318      	orrs	r0, r3
1000a5b6:	1e41      	subs	r1, r0, #1
1000a5b8:	4188      	sbcs	r0, r1
1000a5ba:	4310      	orrs	r0, r2
1000a5bc:	2200      	movs	r2, #0
1000a5be:	e68f      	b.n	1000a2e0 <__aeabi_dadd+0x1b8>
1000a5c0:	4c6b      	ldr	r4, [pc, #428]	; (1000a770 <__aeabi_dadd+0x648>)
1000a5c2:	42a2      	cmp	r2, r4
1000a5c4:	d000      	beq.n	1000a5c8 <__aeabi_dadd+0x4a0>
1000a5c6:	e75a      	b.n	1000a47e <__aeabi_dadd+0x356>
1000a5c8:	1c0f      	adds	r7, r1, #0
1000a5ca:	4665      	mov	r5, ip
1000a5cc:	1c14      	adds	r4, r2, #0
1000a5ce:	4698      	mov	r8, r3
1000a5d0:	e5d2      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a5d2:	2c00      	cmp	r4, #0
1000a5d4:	d13a      	bne.n	1000a64c <__aeabi_dadd+0x524>
1000a5d6:	1c38      	adds	r0, r7, #0
1000a5d8:	4328      	orrs	r0, r5
1000a5da:	d071      	beq.n	1000a6c0 <__aeabi_dadd+0x598>
1000a5dc:	43db      	mvns	r3, r3
1000a5de:	2b00      	cmp	r3, #0
1000a5e0:	d018      	beq.n	1000a614 <__aeabi_dadd+0x4ec>
1000a5e2:	4863      	ldr	r0, [pc, #396]	; (1000a770 <__aeabi_dadd+0x648>)
1000a5e4:	4282      	cmp	r2, r0
1000a5e6:	d06b      	beq.n	1000a6c0 <__aeabi_dadd+0x598>
1000a5e8:	2b38      	cmp	r3, #56	; 0x38
1000a5ea:	dd00      	ble.n	1000a5ee <__aeabi_dadd+0x4c6>
1000a5ec:	e09d      	b.n	1000a72a <__aeabi_dadd+0x602>
1000a5ee:	2b1f      	cmp	r3, #31
1000a5f0:	dd00      	ble.n	1000a5f4 <__aeabi_dadd+0x4cc>
1000a5f2:	e0a7      	b.n	1000a744 <__aeabi_dadd+0x61c>
1000a5f4:	2020      	movs	r0, #32
1000a5f6:	1c3c      	adds	r4, r7, #0
1000a5f8:	1ac0      	subs	r0, r0, r3
1000a5fa:	4084      	lsls	r4, r0
1000a5fc:	46a1      	mov	r9, r4
1000a5fe:	1c2c      	adds	r4, r5, #0
1000a600:	4682      	mov	sl, r0
1000a602:	40dc      	lsrs	r4, r3
1000a604:	4648      	mov	r0, r9
1000a606:	4304      	orrs	r4, r0
1000a608:	4650      	mov	r0, sl
1000a60a:	4085      	lsls	r5, r0
1000a60c:	1e68      	subs	r0, r5, #1
1000a60e:	4185      	sbcs	r5, r0
1000a610:	40df      	lsrs	r7, r3
1000a612:	4325      	orrs	r5, r4
1000a614:	4465      	add	r5, ip
1000a616:	4565      	cmp	r5, ip
1000a618:	419b      	sbcs	r3, r3
1000a61a:	187f      	adds	r7, r7, r1
1000a61c:	425b      	negs	r3, r3
1000a61e:	18ff      	adds	r7, r7, r3
1000a620:	1c14      	adds	r4, r2, #0
1000a622:	e664      	b.n	1000a2ee <__aeabi_dadd+0x1c6>
1000a624:	2a00      	cmp	r2, #0
1000a626:	d119      	bne.n	1000a65c <__aeabi_dadd+0x534>
1000a628:	4662      	mov	r2, ip
1000a62a:	430a      	orrs	r2, r1
1000a62c:	d077      	beq.n	1000a71e <__aeabi_dadd+0x5f6>
1000a62e:	1c0f      	adds	r7, r1, #0
1000a630:	4665      	mov	r5, ip
1000a632:	4698      	mov	r8, r3
1000a634:	4c4e      	ldr	r4, [pc, #312]	; (1000a770 <__aeabi_dadd+0x648>)
1000a636:	e59f      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a638:	433d      	orrs	r5, r7
1000a63a:	1e6f      	subs	r7, r5, #1
1000a63c:	41bd      	sbcs	r5, r7
1000a63e:	2700      	movs	r7, #0
1000a640:	b2ed      	uxtb	r5, r5
1000a642:	e732      	b.n	1000a4aa <__aeabi_dadd+0x382>
1000a644:	1c04      	adds	r4, r0, #0
1000a646:	2700      	movs	r7, #0
1000a648:	2500      	movs	r5, #0
1000a64a:	e627      	b.n	1000a29c <__aeabi_dadd+0x174>
1000a64c:	4848      	ldr	r0, [pc, #288]	; (1000a770 <__aeabi_dadd+0x648>)
1000a64e:	4282      	cmp	r2, r0
1000a650:	d036      	beq.n	1000a6c0 <__aeabi_dadd+0x598>
1000a652:	2080      	movs	r0, #128	; 0x80
1000a654:	0400      	lsls	r0, r0, #16
1000a656:	425b      	negs	r3, r3
1000a658:	4307      	orrs	r7, r0
1000a65a:	e7c5      	b.n	1000a5e8 <__aeabi_dadd+0x4c0>
1000a65c:	4662      	mov	r2, ip
1000a65e:	430a      	orrs	r2, r1
1000a660:	d049      	beq.n	1000a6f6 <__aeabi_dadd+0x5ce>
1000a662:	2480      	movs	r4, #128	; 0x80
1000a664:	08ed      	lsrs	r5, r5, #3
1000a666:	0778      	lsls	r0, r7, #29
1000a668:	08fa      	lsrs	r2, r7, #3
1000a66a:	0324      	lsls	r4, r4, #12
1000a66c:	4328      	orrs	r0, r5
1000a66e:	4222      	tst	r2, r4
1000a670:	d009      	beq.n	1000a686 <__aeabi_dadd+0x55e>
1000a672:	08ce      	lsrs	r6, r1, #3
1000a674:	4226      	tst	r6, r4
1000a676:	d106      	bne.n	1000a686 <__aeabi_dadd+0x55e>
1000a678:	4662      	mov	r2, ip
1000a67a:	074f      	lsls	r7, r1, #29
1000a67c:	1c38      	adds	r0, r7, #0
1000a67e:	08d2      	lsrs	r2, r2, #3
1000a680:	4310      	orrs	r0, r2
1000a682:	4698      	mov	r8, r3
1000a684:	1c32      	adds	r2, r6, #0
1000a686:	00d2      	lsls	r2, r2, #3
1000a688:	0f47      	lsrs	r7, r0, #29
1000a68a:	4317      	orrs	r7, r2
1000a68c:	00c5      	lsls	r5, r0, #3
1000a68e:	4c38      	ldr	r4, [pc, #224]	; (1000a770 <__aeabi_dadd+0x648>)
1000a690:	e572      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a692:	4662      	mov	r2, ip
1000a694:	430a      	orrs	r2, r1
1000a696:	d100      	bne.n	1000a69a <__aeabi_dadd+0x572>
1000a698:	e56e      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a69a:	4662      	mov	r2, ip
1000a69c:	1aae      	subs	r6, r5, r2
1000a69e:	42b5      	cmp	r5, r6
1000a6a0:	4192      	sbcs	r2, r2
1000a6a2:	1a78      	subs	r0, r7, r1
1000a6a4:	4252      	negs	r2, r2
1000a6a6:	1a82      	subs	r2, r0, r2
1000a6a8:	0210      	lsls	r0, r2, #8
1000a6aa:	d400      	bmi.n	1000a6ae <__aeabi_dadd+0x586>
1000a6ac:	e655      	b.n	1000a35a <__aeabi_dadd+0x232>
1000a6ae:	4662      	mov	r2, ip
1000a6b0:	1b55      	subs	r5, r2, r5
1000a6b2:	45ac      	cmp	ip, r5
1000a6b4:	4180      	sbcs	r0, r0
1000a6b6:	1bca      	subs	r2, r1, r7
1000a6b8:	4240      	negs	r0, r0
1000a6ba:	1a17      	subs	r7, r2, r0
1000a6bc:	4698      	mov	r8, r3
1000a6be:	e55b      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a6c0:	1c0f      	adds	r7, r1, #0
1000a6c2:	4665      	mov	r5, ip
1000a6c4:	1c14      	adds	r4, r2, #0
1000a6c6:	e557      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a6c8:	2b00      	cmp	r3, #0
1000a6ca:	d034      	beq.n	1000a736 <__aeabi_dadd+0x60e>
1000a6cc:	4663      	mov	r3, ip
1000a6ce:	430b      	orrs	r3, r1
1000a6d0:	d011      	beq.n	1000a6f6 <__aeabi_dadd+0x5ce>
1000a6d2:	2480      	movs	r4, #128	; 0x80
1000a6d4:	08ed      	lsrs	r5, r5, #3
1000a6d6:	0778      	lsls	r0, r7, #29
1000a6d8:	08fa      	lsrs	r2, r7, #3
1000a6da:	0324      	lsls	r4, r4, #12
1000a6dc:	4328      	orrs	r0, r5
1000a6de:	4222      	tst	r2, r4
1000a6e0:	d0d1      	beq.n	1000a686 <__aeabi_dadd+0x55e>
1000a6e2:	08cb      	lsrs	r3, r1, #3
1000a6e4:	4223      	tst	r3, r4
1000a6e6:	d1ce      	bne.n	1000a686 <__aeabi_dadd+0x55e>
1000a6e8:	4662      	mov	r2, ip
1000a6ea:	074f      	lsls	r7, r1, #29
1000a6ec:	1c38      	adds	r0, r7, #0
1000a6ee:	08d2      	lsrs	r2, r2, #3
1000a6f0:	4310      	orrs	r0, r2
1000a6f2:	1c1a      	adds	r2, r3, #0
1000a6f4:	e7c7      	b.n	1000a686 <__aeabi_dadd+0x55e>
1000a6f6:	4c1e      	ldr	r4, [pc, #120]	; (1000a770 <__aeabi_dadd+0x648>)
1000a6f8:	e53e      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a6fa:	2000      	movs	r0, #0
1000a6fc:	e759      	b.n	1000a5b2 <__aeabi_dadd+0x48a>
1000a6fe:	1c04      	adds	r4, r0, #0
1000a700:	1c3e      	adds	r6, r7, #0
1000a702:	3c20      	subs	r4, #32
1000a704:	40e6      	lsrs	r6, r4
1000a706:	1c34      	adds	r4, r6, #0
1000a708:	2820      	cmp	r0, #32
1000a70a:	d02b      	beq.n	1000a764 <__aeabi_dadd+0x63c>
1000a70c:	2640      	movs	r6, #64	; 0x40
1000a70e:	1a30      	subs	r0, r6, r0
1000a710:	4087      	lsls	r7, r0
1000a712:	433d      	orrs	r5, r7
1000a714:	1e6f      	subs	r7, r5, #1
1000a716:	41bd      	sbcs	r5, r7
1000a718:	2700      	movs	r7, #0
1000a71a:	4325      	orrs	r5, r4
1000a71c:	e6c5      	b.n	1000a4aa <__aeabi_dadd+0x382>
1000a71e:	2780      	movs	r7, #128	; 0x80
1000a720:	2600      	movs	r6, #0
1000a722:	03ff      	lsls	r7, r7, #15
1000a724:	4c12      	ldr	r4, [pc, #72]	; (1000a770 <__aeabi_dadd+0x648>)
1000a726:	2500      	movs	r5, #0
1000a728:	e5b8      	b.n	1000a29c <__aeabi_dadd+0x174>
1000a72a:	433d      	orrs	r5, r7
1000a72c:	1e6f      	subs	r7, r5, #1
1000a72e:	41bd      	sbcs	r5, r7
1000a730:	2700      	movs	r7, #0
1000a732:	b2ed      	uxtb	r5, r5
1000a734:	e76e      	b.n	1000a614 <__aeabi_dadd+0x4ec>
1000a736:	1c0f      	adds	r7, r1, #0
1000a738:	4665      	mov	r5, ip
1000a73a:	4c0d      	ldr	r4, [pc, #52]	; (1000a770 <__aeabi_dadd+0x648>)
1000a73c:	e51c      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a73e:	1c0f      	adds	r7, r1, #0
1000a740:	4665      	mov	r5, ip
1000a742:	e519      	b.n	1000a178 <__aeabi_dadd+0x50>
1000a744:	1c1c      	adds	r4, r3, #0
1000a746:	1c38      	adds	r0, r7, #0
1000a748:	3c20      	subs	r4, #32
1000a74a:	40e0      	lsrs	r0, r4
1000a74c:	1c04      	adds	r4, r0, #0
1000a74e:	2b20      	cmp	r3, #32
1000a750:	d00c      	beq.n	1000a76c <__aeabi_dadd+0x644>
1000a752:	2040      	movs	r0, #64	; 0x40
1000a754:	1ac3      	subs	r3, r0, r3
1000a756:	409f      	lsls	r7, r3
1000a758:	433d      	orrs	r5, r7
1000a75a:	1e6f      	subs	r7, r5, #1
1000a75c:	41bd      	sbcs	r5, r7
1000a75e:	2700      	movs	r7, #0
1000a760:	4325      	orrs	r5, r4
1000a762:	e757      	b.n	1000a614 <__aeabi_dadd+0x4ec>
1000a764:	2700      	movs	r7, #0
1000a766:	e7d4      	b.n	1000a712 <__aeabi_dadd+0x5ea>
1000a768:	1c1d      	adds	r5, r3, #0
1000a76a:	e5fc      	b.n	1000a366 <__aeabi_dadd+0x23e>
1000a76c:	2700      	movs	r7, #0
1000a76e:	e7f3      	b.n	1000a758 <__aeabi_dadd+0x630>
1000a770:	000007ff 	.word	0x000007ff
1000a774:	ff7fffff 	.word	0xff7fffff

1000a778 <__aeabi_ddiv>:
1000a778:	b5f0      	push	{r4, r5, r6, r7, lr}
1000a77a:	465f      	mov	r7, fp
1000a77c:	4656      	mov	r6, sl
1000a77e:	464d      	mov	r5, r9
1000a780:	4644      	mov	r4, r8
1000a782:	b4f0      	push	{r4, r5, r6, r7}
1000a784:	030f      	lsls	r7, r1, #12
1000a786:	b087      	sub	sp, #28
1000a788:	4698      	mov	r8, r3
1000a78a:	004d      	lsls	r5, r1, #1
1000a78c:	0b3b      	lsrs	r3, r7, #12
1000a78e:	0fcc      	lsrs	r4, r1, #31
1000a790:	1c06      	adds	r6, r0, #0
1000a792:	4692      	mov	sl, r2
1000a794:	4681      	mov	r9, r0
1000a796:	469b      	mov	fp, r3
1000a798:	0d6d      	lsrs	r5, r5, #21
1000a79a:	9401      	str	r4, [sp, #4]
1000a79c:	d06b      	beq.n	1000a876 <__aeabi_ddiv+0xfe>
1000a79e:	4b66      	ldr	r3, [pc, #408]	; (1000a938 <__aeabi_ddiv+0x1c0>)
1000a7a0:	429d      	cmp	r5, r3
1000a7a2:	d035      	beq.n	1000a810 <__aeabi_ddiv+0x98>
1000a7a4:	2780      	movs	r7, #128	; 0x80
1000a7a6:	465b      	mov	r3, fp
1000a7a8:	037f      	lsls	r7, r7, #13
1000a7aa:	431f      	orrs	r7, r3
1000a7ac:	00f3      	lsls	r3, r6, #3
1000a7ae:	4699      	mov	r9, r3
1000a7b0:	4b62      	ldr	r3, [pc, #392]	; (1000a93c <__aeabi_ddiv+0x1c4>)
1000a7b2:	00ff      	lsls	r7, r7, #3
1000a7b4:	0f40      	lsrs	r0, r0, #29
1000a7b6:	469c      	mov	ip, r3
1000a7b8:	4307      	orrs	r7, r0
1000a7ba:	2300      	movs	r3, #0
1000a7bc:	46bb      	mov	fp, r7
1000a7be:	2600      	movs	r6, #0
1000a7c0:	4465      	add	r5, ip
1000a7c2:	9300      	str	r3, [sp, #0]
1000a7c4:	4642      	mov	r2, r8
1000a7c6:	0317      	lsls	r7, r2, #12
1000a7c8:	0050      	lsls	r0, r2, #1
1000a7ca:	0fd2      	lsrs	r2, r2, #31
1000a7cc:	4653      	mov	r3, sl
1000a7ce:	0b3f      	lsrs	r7, r7, #12
1000a7d0:	0d40      	lsrs	r0, r0, #21
1000a7d2:	4690      	mov	r8, r2
1000a7d4:	d100      	bne.n	1000a7d8 <__aeabi_ddiv+0x60>
1000a7d6:	e072      	b.n	1000a8be <__aeabi_ddiv+0x146>
1000a7d8:	4a57      	ldr	r2, [pc, #348]	; (1000a938 <__aeabi_ddiv+0x1c0>)
1000a7da:	4290      	cmp	r0, r2
1000a7dc:	d067      	beq.n	1000a8ae <__aeabi_ddiv+0x136>
1000a7de:	2380      	movs	r3, #128	; 0x80
1000a7e0:	035b      	lsls	r3, r3, #13
1000a7e2:	431f      	orrs	r7, r3
1000a7e4:	4653      	mov	r3, sl
1000a7e6:	4a55      	ldr	r2, [pc, #340]	; (1000a93c <__aeabi_ddiv+0x1c4>)
1000a7e8:	0f5b      	lsrs	r3, r3, #29
1000a7ea:	00ff      	lsls	r7, r7, #3
1000a7ec:	431f      	orrs	r7, r3
1000a7ee:	4694      	mov	ip, r2
1000a7f0:	4653      	mov	r3, sl
1000a7f2:	2100      	movs	r1, #0
1000a7f4:	00db      	lsls	r3, r3, #3
1000a7f6:	4460      	add	r0, ip
1000a7f8:	4642      	mov	r2, r8
1000a7fa:	4062      	eors	r2, r4
1000a7fc:	4692      	mov	sl, r2
1000a7fe:	1a2d      	subs	r5, r5, r0
1000a800:	430e      	orrs	r6, r1
1000a802:	2e0f      	cmp	r6, #15
1000a804:	d900      	bls.n	1000a808 <__aeabi_ddiv+0x90>
1000a806:	e0a1      	b.n	1000a94c <__aeabi_ddiv+0x1d4>
1000a808:	484d      	ldr	r0, [pc, #308]	; (1000a940 <__aeabi_ddiv+0x1c8>)
1000a80a:	00b6      	lsls	r6, r6, #2
1000a80c:	5980      	ldr	r0, [r0, r6]
1000a80e:	4687      	mov	pc, r0
1000a810:	465b      	mov	r3, fp
1000a812:	431e      	orrs	r6, r3
1000a814:	d000      	beq.n	1000a818 <__aeabi_ddiv+0xa0>
1000a816:	e076      	b.n	1000a906 <__aeabi_ddiv+0x18e>
1000a818:	2300      	movs	r3, #0
1000a81a:	469b      	mov	fp, r3
1000a81c:	4699      	mov	r9, r3
1000a81e:	3302      	adds	r3, #2
1000a820:	2608      	movs	r6, #8
1000a822:	9300      	str	r3, [sp, #0]
1000a824:	e7ce      	b.n	1000a7c4 <__aeabi_ddiv+0x4c>
1000a826:	4699      	mov	r9, r3
1000a828:	4643      	mov	r3, r8
1000a82a:	46bb      	mov	fp, r7
1000a82c:	9301      	str	r3, [sp, #4]
1000a82e:	9100      	str	r1, [sp, #0]
1000a830:	9b00      	ldr	r3, [sp, #0]
1000a832:	2b02      	cmp	r3, #2
1000a834:	d16b      	bne.n	1000a90e <__aeabi_ddiv+0x196>
1000a836:	9b01      	ldr	r3, [sp, #4]
1000a838:	469a      	mov	sl, r3
1000a83a:	2100      	movs	r1, #0
1000a83c:	4653      	mov	r3, sl
1000a83e:	2201      	movs	r2, #1
1000a840:	2700      	movs	r7, #0
1000a842:	4689      	mov	r9, r1
1000a844:	401a      	ands	r2, r3
1000a846:	4b3c      	ldr	r3, [pc, #240]	; (1000a938 <__aeabi_ddiv+0x1c0>)
1000a848:	2100      	movs	r1, #0
1000a84a:	033f      	lsls	r7, r7, #12
1000a84c:	0d0c      	lsrs	r4, r1, #20
1000a84e:	0524      	lsls	r4, r4, #20
1000a850:	0b3f      	lsrs	r7, r7, #12
1000a852:	4327      	orrs	r7, r4
1000a854:	4c3b      	ldr	r4, [pc, #236]	; (1000a944 <__aeabi_ddiv+0x1cc>)
1000a856:	051b      	lsls	r3, r3, #20
1000a858:	4027      	ands	r7, r4
1000a85a:	431f      	orrs	r7, r3
1000a85c:	007f      	lsls	r7, r7, #1
1000a85e:	07d2      	lsls	r2, r2, #31
1000a860:	087f      	lsrs	r7, r7, #1
1000a862:	4317      	orrs	r7, r2
1000a864:	4648      	mov	r0, r9
1000a866:	1c39      	adds	r1, r7, #0
1000a868:	b007      	add	sp, #28
1000a86a:	bc3c      	pop	{r2, r3, r4, r5}
1000a86c:	4690      	mov	r8, r2
1000a86e:	4699      	mov	r9, r3
1000a870:	46a2      	mov	sl, r4
1000a872:	46ab      	mov	fp, r5
1000a874:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000a876:	4303      	orrs	r3, r0
1000a878:	d03e      	beq.n	1000a8f8 <__aeabi_ddiv+0x180>
1000a87a:	465b      	mov	r3, fp
1000a87c:	2b00      	cmp	r3, #0
1000a87e:	d100      	bne.n	1000a882 <__aeabi_ddiv+0x10a>
1000a880:	e19c      	b.n	1000abbc <__aeabi_ddiv+0x444>
1000a882:	4658      	mov	r0, fp
1000a884:	f001 faae 	bl	1000bde4 <__clzsi2>
1000a888:	2328      	movs	r3, #40	; 0x28
1000a88a:	1c31      	adds	r1, r6, #0
1000a88c:	1a1b      	subs	r3, r3, r0
1000a88e:	1c02      	adds	r2, r0, #0
1000a890:	465f      	mov	r7, fp
1000a892:	40d9      	lsrs	r1, r3
1000a894:	3a08      	subs	r2, #8
1000a896:	4097      	lsls	r7, r2
1000a898:	1c0b      	adds	r3, r1, #0
1000a89a:	4096      	lsls	r6, r2
1000a89c:	433b      	orrs	r3, r7
1000a89e:	469b      	mov	fp, r3
1000a8a0:	46b1      	mov	r9, r6
1000a8a2:	2300      	movs	r3, #0
1000a8a4:	4d28      	ldr	r5, [pc, #160]	; (1000a948 <__aeabi_ddiv+0x1d0>)
1000a8a6:	2600      	movs	r6, #0
1000a8a8:	1a2d      	subs	r5, r5, r0
1000a8aa:	9300      	str	r3, [sp, #0]
1000a8ac:	e78a      	b.n	1000a7c4 <__aeabi_ddiv+0x4c>
1000a8ae:	4652      	mov	r2, sl
1000a8b0:	2103      	movs	r1, #3
1000a8b2:	433a      	orrs	r2, r7
1000a8b4:	d1a0      	bne.n	1000a7f8 <__aeabi_ddiv+0x80>
1000a8b6:	2700      	movs	r7, #0
1000a8b8:	2300      	movs	r3, #0
1000a8ba:	2102      	movs	r1, #2
1000a8bc:	e79c      	b.n	1000a7f8 <__aeabi_ddiv+0x80>
1000a8be:	4652      	mov	r2, sl
1000a8c0:	433a      	orrs	r2, r7
1000a8c2:	d015      	beq.n	1000a8f0 <__aeabi_ddiv+0x178>
1000a8c4:	2f00      	cmp	r7, #0
1000a8c6:	d100      	bne.n	1000a8ca <__aeabi_ddiv+0x152>
1000a8c8:	e185      	b.n	1000abd6 <__aeabi_ddiv+0x45e>
1000a8ca:	1c38      	adds	r0, r7, #0
1000a8cc:	f001 fa8a 	bl	1000bde4 <__clzsi2>
1000a8d0:	1c02      	adds	r2, r0, #0
1000a8d2:	2128      	movs	r1, #40	; 0x28
1000a8d4:	4650      	mov	r0, sl
1000a8d6:	1a89      	subs	r1, r1, r2
1000a8d8:	1c13      	adds	r3, r2, #0
1000a8da:	40c8      	lsrs	r0, r1
1000a8dc:	4651      	mov	r1, sl
1000a8de:	3b08      	subs	r3, #8
1000a8e0:	4099      	lsls	r1, r3
1000a8e2:	409f      	lsls	r7, r3
1000a8e4:	1c0b      	adds	r3, r1, #0
1000a8e6:	4307      	orrs	r7, r0
1000a8e8:	4817      	ldr	r0, [pc, #92]	; (1000a948 <__aeabi_ddiv+0x1d0>)
1000a8ea:	2100      	movs	r1, #0
1000a8ec:	1a80      	subs	r0, r0, r2
1000a8ee:	e783      	b.n	1000a7f8 <__aeabi_ddiv+0x80>
1000a8f0:	2700      	movs	r7, #0
1000a8f2:	2300      	movs	r3, #0
1000a8f4:	2101      	movs	r1, #1
1000a8f6:	e77f      	b.n	1000a7f8 <__aeabi_ddiv+0x80>
1000a8f8:	2300      	movs	r3, #0
1000a8fa:	469b      	mov	fp, r3
1000a8fc:	4699      	mov	r9, r3
1000a8fe:	3301      	adds	r3, #1
1000a900:	2604      	movs	r6, #4
1000a902:	9300      	str	r3, [sp, #0]
1000a904:	e75e      	b.n	1000a7c4 <__aeabi_ddiv+0x4c>
1000a906:	2303      	movs	r3, #3
1000a908:	260c      	movs	r6, #12
1000a90a:	9300      	str	r3, [sp, #0]
1000a90c:	e75a      	b.n	1000a7c4 <__aeabi_ddiv+0x4c>
1000a90e:	2b03      	cmp	r3, #3
1000a910:	d100      	bne.n	1000a914 <__aeabi_ddiv+0x19c>
1000a912:	e23c      	b.n	1000ad8e <__aeabi_ddiv+0x616>
1000a914:	2b01      	cmp	r3, #1
1000a916:	d000      	beq.n	1000a91a <__aeabi_ddiv+0x1a2>
1000a918:	e1bf      	b.n	1000ac9a <__aeabi_ddiv+0x522>
1000a91a:	1c1a      	adds	r2, r3, #0
1000a91c:	9b01      	ldr	r3, [sp, #4]
1000a91e:	401a      	ands	r2, r3
1000a920:	2100      	movs	r1, #0
1000a922:	2300      	movs	r3, #0
1000a924:	2700      	movs	r7, #0
1000a926:	4689      	mov	r9, r1
1000a928:	e78e      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000a92a:	2300      	movs	r3, #0
1000a92c:	2780      	movs	r7, #128	; 0x80
1000a92e:	4699      	mov	r9, r3
1000a930:	2200      	movs	r2, #0
1000a932:	033f      	lsls	r7, r7, #12
1000a934:	4b00      	ldr	r3, [pc, #0]	; (1000a938 <__aeabi_ddiv+0x1c0>)
1000a936:	e787      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000a938:	000007ff 	.word	0x000007ff
1000a93c:	fffffc01 	.word	0xfffffc01
1000a940:	1000e960 	.word	0x1000e960
1000a944:	800fffff 	.word	0x800fffff
1000a948:	fffffc0d 	.word	0xfffffc0d
1000a94c:	45bb      	cmp	fp, r7
1000a94e:	d900      	bls.n	1000a952 <__aeabi_ddiv+0x1da>
1000a950:	e151      	b.n	1000abf6 <__aeabi_ddiv+0x47e>
1000a952:	d100      	bne.n	1000a956 <__aeabi_ddiv+0x1de>
1000a954:	e14c      	b.n	1000abf0 <__aeabi_ddiv+0x478>
1000a956:	464a      	mov	r2, r9
1000a958:	9203      	str	r2, [sp, #12]
1000a95a:	2200      	movs	r2, #0
1000a95c:	465c      	mov	r4, fp
1000a95e:	4690      	mov	r8, r2
1000a960:	3d01      	subs	r5, #1
1000a962:	0e18      	lsrs	r0, r3, #24
1000a964:	023f      	lsls	r7, r7, #8
1000a966:	4338      	orrs	r0, r7
1000a968:	021b      	lsls	r3, r3, #8
1000a96a:	9301      	str	r3, [sp, #4]
1000a96c:	0c03      	lsrs	r3, r0, #16
1000a96e:	4699      	mov	r9, r3
1000a970:	0403      	lsls	r3, r0, #16
1000a972:	0c1b      	lsrs	r3, r3, #16
1000a974:	4649      	mov	r1, r9
1000a976:	1c06      	adds	r6, r0, #0
1000a978:	1c20      	adds	r0, r4, #0
1000a97a:	1c1f      	adds	r7, r3, #0
1000a97c:	9300      	str	r3, [sp, #0]
1000a97e:	f7ff f989 	bl	10009c94 <__aeabi_uidiv>
1000a982:	1c02      	adds	r2, r0, #0
1000a984:	437a      	muls	r2, r7
1000a986:	9002      	str	r0, [sp, #8]
1000a988:	4649      	mov	r1, r9
1000a98a:	1c20      	adds	r0, r4, #0
1000a98c:	1c17      	adds	r7, r2, #0
1000a98e:	f7ff fa07 	bl	10009da0 <__aeabi_uidivmod>
1000a992:	9b03      	ldr	r3, [sp, #12]
1000a994:	0409      	lsls	r1, r1, #16
1000a996:	0c1b      	lsrs	r3, r3, #16
1000a998:	4319      	orrs	r1, r3
1000a99a:	428f      	cmp	r7, r1
1000a99c:	d90c      	bls.n	1000a9b8 <__aeabi_ddiv+0x240>
1000a99e:	9b02      	ldr	r3, [sp, #8]
1000a9a0:	1989      	adds	r1, r1, r6
1000a9a2:	3b01      	subs	r3, #1
1000a9a4:	428e      	cmp	r6, r1
1000a9a6:	d900      	bls.n	1000a9aa <__aeabi_ddiv+0x232>
1000a9a8:	e152      	b.n	1000ac50 <__aeabi_ddiv+0x4d8>
1000a9aa:	428f      	cmp	r7, r1
1000a9ac:	d800      	bhi.n	1000a9b0 <__aeabi_ddiv+0x238>
1000a9ae:	e14f      	b.n	1000ac50 <__aeabi_ddiv+0x4d8>
1000a9b0:	9b02      	ldr	r3, [sp, #8]
1000a9b2:	1989      	adds	r1, r1, r6
1000a9b4:	3b02      	subs	r3, #2
1000a9b6:	9302      	str	r3, [sp, #8]
1000a9b8:	1bcc      	subs	r4, r1, r7
1000a9ba:	1c20      	adds	r0, r4, #0
1000a9bc:	4649      	mov	r1, r9
1000a9be:	f7ff f969 	bl	10009c94 <__aeabi_uidiv>
1000a9c2:	9f00      	ldr	r7, [sp, #0]
1000a9c4:	4683      	mov	fp, r0
1000a9c6:	4347      	muls	r7, r0
1000a9c8:	4649      	mov	r1, r9
1000a9ca:	1c20      	adds	r0, r4, #0
1000a9cc:	f7ff f9e8 	bl	10009da0 <__aeabi_uidivmod>
1000a9d0:	9a03      	ldr	r2, [sp, #12]
1000a9d2:	040b      	lsls	r3, r1, #16
1000a9d4:	0414      	lsls	r4, r2, #16
1000a9d6:	0c24      	lsrs	r4, r4, #16
1000a9d8:	4323      	orrs	r3, r4
1000a9da:	429f      	cmp	r7, r3
1000a9dc:	d90d      	bls.n	1000a9fa <__aeabi_ddiv+0x282>
1000a9de:	465a      	mov	r2, fp
1000a9e0:	199b      	adds	r3, r3, r6
1000a9e2:	3a01      	subs	r2, #1
1000a9e4:	429e      	cmp	r6, r3
1000a9e6:	d900      	bls.n	1000a9ea <__aeabi_ddiv+0x272>
1000a9e8:	e130      	b.n	1000ac4c <__aeabi_ddiv+0x4d4>
1000a9ea:	429f      	cmp	r7, r3
1000a9ec:	d800      	bhi.n	1000a9f0 <__aeabi_ddiv+0x278>
1000a9ee:	e12d      	b.n	1000ac4c <__aeabi_ddiv+0x4d4>
1000a9f0:	2202      	movs	r2, #2
1000a9f2:	4252      	negs	r2, r2
1000a9f4:	4694      	mov	ip, r2
1000a9f6:	199b      	adds	r3, r3, r6
1000a9f8:	44e3      	add	fp, ip
1000a9fa:	9a02      	ldr	r2, [sp, #8]
1000a9fc:	1bdb      	subs	r3, r3, r7
1000a9fe:	0417      	lsls	r7, r2, #16
1000aa00:	465a      	mov	r2, fp
1000aa02:	433a      	orrs	r2, r7
1000aa04:	4693      	mov	fp, r2
1000aa06:	9c01      	ldr	r4, [sp, #4]
1000aa08:	0c17      	lsrs	r7, r2, #16
1000aa0a:	0c22      	lsrs	r2, r4, #16
1000aa0c:	1c10      	adds	r0, r2, #0
1000aa0e:	9204      	str	r2, [sp, #16]
1000aa10:	465a      	mov	r2, fp
1000aa12:	0411      	lsls	r1, r2, #16
1000aa14:	0422      	lsls	r2, r4, #16
1000aa16:	0c12      	lsrs	r2, r2, #16
1000aa18:	1c14      	adds	r4, r2, #0
1000aa1a:	0c09      	lsrs	r1, r1, #16
1000aa1c:	437c      	muls	r4, r7
1000aa1e:	9205      	str	r2, [sp, #20]
1000aa20:	434a      	muls	r2, r1
1000aa22:	4341      	muls	r1, r0
1000aa24:	4347      	muls	r7, r0
1000aa26:	1861      	adds	r1, r4, r1
1000aa28:	0c10      	lsrs	r0, r2, #16
1000aa2a:	1809      	adds	r1, r1, r0
1000aa2c:	428c      	cmp	r4, r1
1000aa2e:	d903      	bls.n	1000aa38 <__aeabi_ddiv+0x2c0>
1000aa30:	2080      	movs	r0, #128	; 0x80
1000aa32:	0240      	lsls	r0, r0, #9
1000aa34:	4684      	mov	ip, r0
1000aa36:	4467      	add	r7, ip
1000aa38:	0c0c      	lsrs	r4, r1, #16
1000aa3a:	0412      	lsls	r2, r2, #16
1000aa3c:	0408      	lsls	r0, r1, #16
1000aa3e:	0c12      	lsrs	r2, r2, #16
1000aa40:	193c      	adds	r4, r7, r4
1000aa42:	1881      	adds	r1, r0, r2
1000aa44:	42a3      	cmp	r3, r4
1000aa46:	d200      	bcs.n	1000aa4a <__aeabi_ddiv+0x2d2>
1000aa48:	e0e5      	b.n	1000ac16 <__aeabi_ddiv+0x49e>
1000aa4a:	d100      	bne.n	1000aa4e <__aeabi_ddiv+0x2d6>
1000aa4c:	e0df      	b.n	1000ac0e <__aeabi_ddiv+0x496>
1000aa4e:	1b1f      	subs	r7, r3, r4
1000aa50:	4643      	mov	r3, r8
1000aa52:	1a5c      	subs	r4, r3, r1
1000aa54:	45a0      	cmp	r8, r4
1000aa56:	4192      	sbcs	r2, r2
1000aa58:	4252      	negs	r2, r2
1000aa5a:	1abf      	subs	r7, r7, r2
1000aa5c:	42b7      	cmp	r7, r6
1000aa5e:	d100      	bne.n	1000aa62 <__aeabi_ddiv+0x2ea>
1000aa60:	e10e      	b.n	1000ac80 <__aeabi_ddiv+0x508>
1000aa62:	1c38      	adds	r0, r7, #0
1000aa64:	4649      	mov	r1, r9
1000aa66:	f7ff f915 	bl	10009c94 <__aeabi_uidiv>
1000aa6a:	9b00      	ldr	r3, [sp, #0]
1000aa6c:	9002      	str	r0, [sp, #8]
1000aa6e:	4343      	muls	r3, r0
1000aa70:	4649      	mov	r1, r9
1000aa72:	1c38      	adds	r0, r7, #0
1000aa74:	4698      	mov	r8, r3
1000aa76:	f7ff f993 	bl	10009da0 <__aeabi_uidivmod>
1000aa7a:	0c23      	lsrs	r3, r4, #16
1000aa7c:	040f      	lsls	r7, r1, #16
1000aa7e:	431f      	orrs	r7, r3
1000aa80:	45b8      	cmp	r8, r7
1000aa82:	d90c      	bls.n	1000aa9e <__aeabi_ddiv+0x326>
1000aa84:	9b02      	ldr	r3, [sp, #8]
1000aa86:	19bf      	adds	r7, r7, r6
1000aa88:	3b01      	subs	r3, #1
1000aa8a:	42be      	cmp	r6, r7
1000aa8c:	d900      	bls.n	1000aa90 <__aeabi_ddiv+0x318>
1000aa8e:	e0fb      	b.n	1000ac88 <__aeabi_ddiv+0x510>
1000aa90:	45b8      	cmp	r8, r7
1000aa92:	d800      	bhi.n	1000aa96 <__aeabi_ddiv+0x31e>
1000aa94:	e0f8      	b.n	1000ac88 <__aeabi_ddiv+0x510>
1000aa96:	9b02      	ldr	r3, [sp, #8]
1000aa98:	19bf      	adds	r7, r7, r6
1000aa9a:	3b02      	subs	r3, #2
1000aa9c:	9302      	str	r3, [sp, #8]
1000aa9e:	4643      	mov	r3, r8
1000aaa0:	1aff      	subs	r7, r7, r3
1000aaa2:	4649      	mov	r1, r9
1000aaa4:	1c38      	adds	r0, r7, #0
1000aaa6:	f7ff f8f5 	bl	10009c94 <__aeabi_uidiv>
1000aaaa:	9b00      	ldr	r3, [sp, #0]
1000aaac:	9003      	str	r0, [sp, #12]
1000aaae:	4343      	muls	r3, r0
1000aab0:	4649      	mov	r1, r9
1000aab2:	1c38      	adds	r0, r7, #0
1000aab4:	4698      	mov	r8, r3
1000aab6:	f7ff f973 	bl	10009da0 <__aeabi_uidivmod>
1000aaba:	0424      	lsls	r4, r4, #16
1000aabc:	0409      	lsls	r1, r1, #16
1000aabe:	0c24      	lsrs	r4, r4, #16
1000aac0:	4321      	orrs	r1, r4
1000aac2:	4588      	cmp	r8, r1
1000aac4:	d90c      	bls.n	1000aae0 <__aeabi_ddiv+0x368>
1000aac6:	9b03      	ldr	r3, [sp, #12]
1000aac8:	1989      	adds	r1, r1, r6
1000aaca:	3b01      	subs	r3, #1
1000aacc:	428e      	cmp	r6, r1
1000aace:	d900      	bls.n	1000aad2 <__aeabi_ddiv+0x35a>
1000aad0:	e0dc      	b.n	1000ac8c <__aeabi_ddiv+0x514>
1000aad2:	4588      	cmp	r8, r1
1000aad4:	d800      	bhi.n	1000aad8 <__aeabi_ddiv+0x360>
1000aad6:	e0d9      	b.n	1000ac8c <__aeabi_ddiv+0x514>
1000aad8:	9b03      	ldr	r3, [sp, #12]
1000aada:	1989      	adds	r1, r1, r6
1000aadc:	3b02      	subs	r3, #2
1000aade:	9303      	str	r3, [sp, #12]
1000aae0:	4643      	mov	r3, r8
1000aae2:	1ac9      	subs	r1, r1, r3
1000aae4:	9b02      	ldr	r3, [sp, #8]
1000aae6:	9a03      	ldr	r2, [sp, #12]
1000aae8:	041b      	lsls	r3, r3, #16
1000aaea:	9c05      	ldr	r4, [sp, #20]
1000aaec:	431a      	orrs	r2, r3
1000aaee:	0c10      	lsrs	r0, r2, #16
1000aaf0:	0413      	lsls	r3, r2, #16
1000aaf2:	4691      	mov	r9, r2
1000aaf4:	1c22      	adds	r2, r4, #0
1000aaf6:	9f04      	ldr	r7, [sp, #16]
1000aaf8:	0c1b      	lsrs	r3, r3, #16
1000aafa:	435a      	muls	r2, r3
1000aafc:	4344      	muls	r4, r0
1000aafe:	437b      	muls	r3, r7
1000ab00:	4378      	muls	r0, r7
1000ab02:	18e3      	adds	r3, r4, r3
1000ab04:	0c17      	lsrs	r7, r2, #16
1000ab06:	19db      	adds	r3, r3, r7
1000ab08:	429c      	cmp	r4, r3
1000ab0a:	d903      	bls.n	1000ab14 <__aeabi_ddiv+0x39c>
1000ab0c:	2480      	movs	r4, #128	; 0x80
1000ab0e:	0264      	lsls	r4, r4, #9
1000ab10:	46a4      	mov	ip, r4
1000ab12:	4460      	add	r0, ip
1000ab14:	0c1c      	lsrs	r4, r3, #16
1000ab16:	0412      	lsls	r2, r2, #16
1000ab18:	041b      	lsls	r3, r3, #16
1000ab1a:	0c12      	lsrs	r2, r2, #16
1000ab1c:	1900      	adds	r0, r0, r4
1000ab1e:	189b      	adds	r3, r3, r2
1000ab20:	4281      	cmp	r1, r0
1000ab22:	d200      	bcs.n	1000ab26 <__aeabi_ddiv+0x3ae>
1000ab24:	e096      	b.n	1000ac54 <__aeabi_ddiv+0x4dc>
1000ab26:	d100      	bne.n	1000ab2a <__aeabi_ddiv+0x3b2>
1000ab28:	e0fc      	b.n	1000ad24 <__aeabi_ddiv+0x5ac>
1000ab2a:	464a      	mov	r2, r9
1000ab2c:	2301      	movs	r3, #1
1000ab2e:	431a      	orrs	r2, r3
1000ab30:	4691      	mov	r9, r2
1000ab32:	4b9b      	ldr	r3, [pc, #620]	; (1000ada0 <__aeabi_ddiv+0x628>)
1000ab34:	18eb      	adds	r3, r5, r3
1000ab36:	2b00      	cmp	r3, #0
1000ab38:	dc00      	bgt.n	1000ab3c <__aeabi_ddiv+0x3c4>
1000ab3a:	e099      	b.n	1000ac70 <__aeabi_ddiv+0x4f8>
1000ab3c:	464a      	mov	r2, r9
1000ab3e:	0752      	lsls	r2, r2, #29
1000ab40:	d00a      	beq.n	1000ab58 <__aeabi_ddiv+0x3e0>
1000ab42:	220f      	movs	r2, #15
1000ab44:	4649      	mov	r1, r9
1000ab46:	400a      	ands	r2, r1
1000ab48:	2a04      	cmp	r2, #4
1000ab4a:	d005      	beq.n	1000ab58 <__aeabi_ddiv+0x3e0>
1000ab4c:	3104      	adds	r1, #4
1000ab4e:	4549      	cmp	r1, r9
1000ab50:	4192      	sbcs	r2, r2
1000ab52:	4689      	mov	r9, r1
1000ab54:	4252      	negs	r2, r2
1000ab56:	4493      	add	fp, r2
1000ab58:	465a      	mov	r2, fp
1000ab5a:	01d2      	lsls	r2, r2, #7
1000ab5c:	d506      	bpl.n	1000ab6c <__aeabi_ddiv+0x3f4>
1000ab5e:	465a      	mov	r2, fp
1000ab60:	4b90      	ldr	r3, [pc, #576]	; (1000ada4 <__aeabi_ddiv+0x62c>)
1000ab62:	401a      	ands	r2, r3
1000ab64:	2380      	movs	r3, #128	; 0x80
1000ab66:	4693      	mov	fp, r2
1000ab68:	00db      	lsls	r3, r3, #3
1000ab6a:	18eb      	adds	r3, r5, r3
1000ab6c:	4a8e      	ldr	r2, [pc, #568]	; (1000ada8 <__aeabi_ddiv+0x630>)
1000ab6e:	4293      	cmp	r3, r2
1000ab70:	dd00      	ble.n	1000ab74 <__aeabi_ddiv+0x3fc>
1000ab72:	e662      	b.n	1000a83a <__aeabi_ddiv+0xc2>
1000ab74:	464a      	mov	r2, r9
1000ab76:	4659      	mov	r1, fp
1000ab78:	08d2      	lsrs	r2, r2, #3
1000ab7a:	0749      	lsls	r1, r1, #29
1000ab7c:	4311      	orrs	r1, r2
1000ab7e:	465a      	mov	r2, fp
1000ab80:	4689      	mov	r9, r1
1000ab82:	0257      	lsls	r7, r2, #9
1000ab84:	4651      	mov	r1, sl
1000ab86:	2201      	movs	r2, #1
1000ab88:	055b      	lsls	r3, r3, #21
1000ab8a:	0b3f      	lsrs	r7, r7, #12
1000ab8c:	0d5b      	lsrs	r3, r3, #21
1000ab8e:	400a      	ands	r2, r1
1000ab90:	e65a      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000ab92:	2080      	movs	r0, #128	; 0x80
1000ab94:	465a      	mov	r2, fp
1000ab96:	0300      	lsls	r0, r0, #12
1000ab98:	4202      	tst	r2, r0
1000ab9a:	d008      	beq.n	1000abae <__aeabi_ddiv+0x436>
1000ab9c:	4207      	tst	r7, r0
1000ab9e:	d106      	bne.n	1000abae <__aeabi_ddiv+0x436>
1000aba0:	4307      	orrs	r7, r0
1000aba2:	033f      	lsls	r7, r7, #12
1000aba4:	4699      	mov	r9, r3
1000aba6:	0b3f      	lsrs	r7, r7, #12
1000aba8:	4642      	mov	r2, r8
1000abaa:	4b80      	ldr	r3, [pc, #512]	; (1000adac <__aeabi_ddiv+0x634>)
1000abac:	e64c      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000abae:	465f      	mov	r7, fp
1000abb0:	4307      	orrs	r7, r0
1000abb2:	033f      	lsls	r7, r7, #12
1000abb4:	0b3f      	lsrs	r7, r7, #12
1000abb6:	1c22      	adds	r2, r4, #0
1000abb8:	4b7c      	ldr	r3, [pc, #496]	; (1000adac <__aeabi_ddiv+0x634>)
1000abba:	e645      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000abbc:	f001 f912 	bl	1000bde4 <__clzsi2>
1000abc0:	1c03      	adds	r3, r0, #0
1000abc2:	3020      	adds	r0, #32
1000abc4:	2827      	cmp	r0, #39	; 0x27
1000abc6:	dc00      	bgt.n	1000abca <__aeabi_ddiv+0x452>
1000abc8:	e65e      	b.n	1000a888 <__aeabi_ddiv+0x110>
1000abca:	3b08      	subs	r3, #8
1000abcc:	409e      	lsls	r6, r3
1000abce:	2300      	movs	r3, #0
1000abd0:	46b3      	mov	fp, r6
1000abd2:	4699      	mov	r9, r3
1000abd4:	e665      	b.n	1000a8a2 <__aeabi_ddiv+0x12a>
1000abd6:	4650      	mov	r0, sl
1000abd8:	f001 f904 	bl	1000bde4 <__clzsi2>
1000abdc:	1c02      	adds	r2, r0, #0
1000abde:	3220      	adds	r2, #32
1000abe0:	2a27      	cmp	r2, #39	; 0x27
1000abe2:	dc00      	bgt.n	1000abe6 <__aeabi_ddiv+0x46e>
1000abe4:	e675      	b.n	1000a8d2 <__aeabi_ddiv+0x15a>
1000abe6:	4657      	mov	r7, sl
1000abe8:	3808      	subs	r0, #8
1000abea:	4087      	lsls	r7, r0
1000abec:	2300      	movs	r3, #0
1000abee:	e67b      	b.n	1000a8e8 <__aeabi_ddiv+0x170>
1000abf0:	4599      	cmp	r9, r3
1000abf2:	d200      	bcs.n	1000abf6 <__aeabi_ddiv+0x47e>
1000abf4:	e6af      	b.n	1000a956 <__aeabi_ddiv+0x1de>
1000abf6:	465a      	mov	r2, fp
1000abf8:	4659      	mov	r1, fp
1000abfa:	0854      	lsrs	r4, r2, #1
1000abfc:	464a      	mov	r2, r9
1000abfe:	07c8      	lsls	r0, r1, #31
1000ac00:	0852      	lsrs	r2, r2, #1
1000ac02:	4302      	orrs	r2, r0
1000ac04:	9203      	str	r2, [sp, #12]
1000ac06:	464a      	mov	r2, r9
1000ac08:	07d2      	lsls	r2, r2, #31
1000ac0a:	4690      	mov	r8, r2
1000ac0c:	e6a9      	b.n	1000a962 <__aeabi_ddiv+0x1ea>
1000ac0e:	2700      	movs	r7, #0
1000ac10:	4588      	cmp	r8, r1
1000ac12:	d300      	bcc.n	1000ac16 <__aeabi_ddiv+0x49e>
1000ac14:	e71c      	b.n	1000aa50 <__aeabi_ddiv+0x2d8>
1000ac16:	9f01      	ldr	r7, [sp, #4]
1000ac18:	465a      	mov	r2, fp
1000ac1a:	46bc      	mov	ip, r7
1000ac1c:	44e0      	add	r8, ip
1000ac1e:	45b8      	cmp	r8, r7
1000ac20:	41bf      	sbcs	r7, r7
1000ac22:	427f      	negs	r7, r7
1000ac24:	19bf      	adds	r7, r7, r6
1000ac26:	18ff      	adds	r7, r7, r3
1000ac28:	3a01      	subs	r2, #1
1000ac2a:	42be      	cmp	r6, r7
1000ac2c:	d206      	bcs.n	1000ac3c <__aeabi_ddiv+0x4c4>
1000ac2e:	42bc      	cmp	r4, r7
1000ac30:	d85f      	bhi.n	1000acf2 <__aeabi_ddiv+0x57a>
1000ac32:	d100      	bne.n	1000ac36 <__aeabi_ddiv+0x4be>
1000ac34:	e09f      	b.n	1000ad76 <__aeabi_ddiv+0x5fe>
1000ac36:	1b3f      	subs	r7, r7, r4
1000ac38:	4693      	mov	fp, r2
1000ac3a:	e709      	b.n	1000aa50 <__aeabi_ddiv+0x2d8>
1000ac3c:	42b7      	cmp	r7, r6
1000ac3e:	d1fa      	bne.n	1000ac36 <__aeabi_ddiv+0x4be>
1000ac40:	9b01      	ldr	r3, [sp, #4]
1000ac42:	4543      	cmp	r3, r8
1000ac44:	d9f3      	bls.n	1000ac2e <__aeabi_ddiv+0x4b6>
1000ac46:	1b37      	subs	r7, r6, r4
1000ac48:	4693      	mov	fp, r2
1000ac4a:	e701      	b.n	1000aa50 <__aeabi_ddiv+0x2d8>
1000ac4c:	4693      	mov	fp, r2
1000ac4e:	e6d4      	b.n	1000a9fa <__aeabi_ddiv+0x282>
1000ac50:	9302      	str	r3, [sp, #8]
1000ac52:	e6b1      	b.n	1000a9b8 <__aeabi_ddiv+0x240>
1000ac54:	464a      	mov	r2, r9
1000ac56:	1989      	adds	r1, r1, r6
1000ac58:	3a01      	subs	r2, #1
1000ac5a:	428e      	cmp	r6, r1
1000ac5c:	d918      	bls.n	1000ac90 <__aeabi_ddiv+0x518>
1000ac5e:	4691      	mov	r9, r2
1000ac60:	4281      	cmp	r1, r0
1000ac62:	d000      	beq.n	1000ac66 <__aeabi_ddiv+0x4ee>
1000ac64:	e761      	b.n	1000ab2a <__aeabi_ddiv+0x3b2>
1000ac66:	9a01      	ldr	r2, [sp, #4]
1000ac68:	429a      	cmp	r2, r3
1000ac6a:	d000      	beq.n	1000ac6e <__aeabi_ddiv+0x4f6>
1000ac6c:	e75d      	b.n	1000ab2a <__aeabi_ddiv+0x3b2>
1000ac6e:	e760      	b.n	1000ab32 <__aeabi_ddiv+0x3ba>
1000ac70:	4f4f      	ldr	r7, [pc, #316]	; (1000adb0 <__aeabi_ddiv+0x638>)
1000ac72:	1b7f      	subs	r7, r7, r5
1000ac74:	2f38      	cmp	r7, #56	; 0x38
1000ac76:	dd13      	ble.n	1000aca0 <__aeabi_ddiv+0x528>
1000ac78:	2201      	movs	r2, #1
1000ac7a:	4653      	mov	r3, sl
1000ac7c:	401a      	ands	r2, r3
1000ac7e:	e64f      	b.n	1000a920 <__aeabi_ddiv+0x1a8>
1000ac80:	2301      	movs	r3, #1
1000ac82:	425b      	negs	r3, r3
1000ac84:	4699      	mov	r9, r3
1000ac86:	e754      	b.n	1000ab32 <__aeabi_ddiv+0x3ba>
1000ac88:	9302      	str	r3, [sp, #8]
1000ac8a:	e708      	b.n	1000aa9e <__aeabi_ddiv+0x326>
1000ac8c:	9303      	str	r3, [sp, #12]
1000ac8e:	e727      	b.n	1000aae0 <__aeabi_ddiv+0x368>
1000ac90:	4288      	cmp	r0, r1
1000ac92:	d83c      	bhi.n	1000ad0e <__aeabi_ddiv+0x596>
1000ac94:	d074      	beq.n	1000ad80 <__aeabi_ddiv+0x608>
1000ac96:	4691      	mov	r9, r2
1000ac98:	e747      	b.n	1000ab2a <__aeabi_ddiv+0x3b2>
1000ac9a:	9b01      	ldr	r3, [sp, #4]
1000ac9c:	469a      	mov	sl, r3
1000ac9e:	e748      	b.n	1000ab32 <__aeabi_ddiv+0x3ba>
1000aca0:	2f1f      	cmp	r7, #31
1000aca2:	dc44      	bgt.n	1000ad2e <__aeabi_ddiv+0x5b6>
1000aca4:	4b43      	ldr	r3, [pc, #268]	; (1000adb4 <__aeabi_ddiv+0x63c>)
1000aca6:	464a      	mov	r2, r9
1000aca8:	469c      	mov	ip, r3
1000acaa:	465b      	mov	r3, fp
1000acac:	4465      	add	r5, ip
1000acae:	40fa      	lsrs	r2, r7
1000acb0:	40ab      	lsls	r3, r5
1000acb2:	4313      	orrs	r3, r2
1000acb4:	464a      	mov	r2, r9
1000acb6:	40aa      	lsls	r2, r5
1000acb8:	1c15      	adds	r5, r2, #0
1000acba:	1e6a      	subs	r2, r5, #1
1000acbc:	4195      	sbcs	r5, r2
1000acbe:	465a      	mov	r2, fp
1000acc0:	40fa      	lsrs	r2, r7
1000acc2:	432b      	orrs	r3, r5
1000acc4:	1c17      	adds	r7, r2, #0
1000acc6:	075a      	lsls	r2, r3, #29
1000acc8:	d009      	beq.n	1000acde <__aeabi_ddiv+0x566>
1000acca:	220f      	movs	r2, #15
1000accc:	401a      	ands	r2, r3
1000acce:	2a04      	cmp	r2, #4
1000acd0:	d005      	beq.n	1000acde <__aeabi_ddiv+0x566>
1000acd2:	1d1a      	adds	r2, r3, #4
1000acd4:	429a      	cmp	r2, r3
1000acd6:	419b      	sbcs	r3, r3
1000acd8:	425b      	negs	r3, r3
1000acda:	18ff      	adds	r7, r7, r3
1000acdc:	1c13      	adds	r3, r2, #0
1000acde:	023a      	lsls	r2, r7, #8
1000ace0:	d53e      	bpl.n	1000ad60 <__aeabi_ddiv+0x5e8>
1000ace2:	4653      	mov	r3, sl
1000ace4:	2201      	movs	r2, #1
1000ace6:	2100      	movs	r1, #0
1000ace8:	401a      	ands	r2, r3
1000acea:	2700      	movs	r7, #0
1000acec:	2301      	movs	r3, #1
1000acee:	4689      	mov	r9, r1
1000acf0:	e5aa      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000acf2:	2302      	movs	r3, #2
1000acf4:	425b      	negs	r3, r3
1000acf6:	469c      	mov	ip, r3
1000acf8:	9a01      	ldr	r2, [sp, #4]
1000acfa:	44e3      	add	fp, ip
1000acfc:	4694      	mov	ip, r2
1000acfe:	44e0      	add	r8, ip
1000ad00:	4590      	cmp	r8, r2
1000ad02:	419b      	sbcs	r3, r3
1000ad04:	425b      	negs	r3, r3
1000ad06:	199b      	adds	r3, r3, r6
1000ad08:	19df      	adds	r7, r3, r7
1000ad0a:	1b3f      	subs	r7, r7, r4
1000ad0c:	e6a0      	b.n	1000aa50 <__aeabi_ddiv+0x2d8>
1000ad0e:	9f01      	ldr	r7, [sp, #4]
1000ad10:	464a      	mov	r2, r9
1000ad12:	007c      	lsls	r4, r7, #1
1000ad14:	42bc      	cmp	r4, r7
1000ad16:	41bf      	sbcs	r7, r7
1000ad18:	427f      	negs	r7, r7
1000ad1a:	19bf      	adds	r7, r7, r6
1000ad1c:	3a02      	subs	r2, #2
1000ad1e:	19c9      	adds	r1, r1, r7
1000ad20:	9401      	str	r4, [sp, #4]
1000ad22:	e79c      	b.n	1000ac5e <__aeabi_ddiv+0x4e6>
1000ad24:	2b00      	cmp	r3, #0
1000ad26:	d195      	bne.n	1000ac54 <__aeabi_ddiv+0x4dc>
1000ad28:	2200      	movs	r2, #0
1000ad2a:	9201      	str	r2, [sp, #4]
1000ad2c:	e79b      	b.n	1000ac66 <__aeabi_ddiv+0x4ee>
1000ad2e:	465a      	mov	r2, fp
1000ad30:	4b21      	ldr	r3, [pc, #132]	; (1000adb8 <__aeabi_ddiv+0x640>)
1000ad32:	1b5b      	subs	r3, r3, r5
1000ad34:	40da      	lsrs	r2, r3
1000ad36:	2f20      	cmp	r7, #32
1000ad38:	d027      	beq.n	1000ad8a <__aeabi_ddiv+0x612>
1000ad3a:	4b20      	ldr	r3, [pc, #128]	; (1000adbc <__aeabi_ddiv+0x644>)
1000ad3c:	469c      	mov	ip, r3
1000ad3e:	465b      	mov	r3, fp
1000ad40:	4465      	add	r5, ip
1000ad42:	40ab      	lsls	r3, r5
1000ad44:	4649      	mov	r1, r9
1000ad46:	430b      	orrs	r3, r1
1000ad48:	1e59      	subs	r1, r3, #1
1000ad4a:	418b      	sbcs	r3, r1
1000ad4c:	4313      	orrs	r3, r2
1000ad4e:	2207      	movs	r2, #7
1000ad50:	2700      	movs	r7, #0
1000ad52:	401a      	ands	r2, r3
1000ad54:	d007      	beq.n	1000ad66 <__aeabi_ddiv+0x5ee>
1000ad56:	220f      	movs	r2, #15
1000ad58:	2700      	movs	r7, #0
1000ad5a:	401a      	ands	r2, r3
1000ad5c:	2a04      	cmp	r2, #4
1000ad5e:	d1b8      	bne.n	1000acd2 <__aeabi_ddiv+0x55a>
1000ad60:	077a      	lsls	r2, r7, #29
1000ad62:	027f      	lsls	r7, r7, #9
1000ad64:	0b3f      	lsrs	r7, r7, #12
1000ad66:	08db      	lsrs	r3, r3, #3
1000ad68:	4313      	orrs	r3, r2
1000ad6a:	4699      	mov	r9, r3
1000ad6c:	2201      	movs	r2, #1
1000ad6e:	4653      	mov	r3, sl
1000ad70:	401a      	ands	r2, r3
1000ad72:	2300      	movs	r3, #0
1000ad74:	e568      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000ad76:	4541      	cmp	r1, r8
1000ad78:	d8bb      	bhi.n	1000acf2 <__aeabi_ddiv+0x57a>
1000ad7a:	4693      	mov	fp, r2
1000ad7c:	2700      	movs	r7, #0
1000ad7e:	e667      	b.n	1000aa50 <__aeabi_ddiv+0x2d8>
1000ad80:	9c01      	ldr	r4, [sp, #4]
1000ad82:	429c      	cmp	r4, r3
1000ad84:	d3c3      	bcc.n	1000ad0e <__aeabi_ddiv+0x596>
1000ad86:	4691      	mov	r9, r2
1000ad88:	e76d      	b.n	1000ac66 <__aeabi_ddiv+0x4ee>
1000ad8a:	2300      	movs	r3, #0
1000ad8c:	e7da      	b.n	1000ad44 <__aeabi_ddiv+0x5cc>
1000ad8e:	2780      	movs	r7, #128	; 0x80
1000ad90:	465b      	mov	r3, fp
1000ad92:	033f      	lsls	r7, r7, #12
1000ad94:	431f      	orrs	r7, r3
1000ad96:	033f      	lsls	r7, r7, #12
1000ad98:	0b3f      	lsrs	r7, r7, #12
1000ad9a:	9a01      	ldr	r2, [sp, #4]
1000ad9c:	4b03      	ldr	r3, [pc, #12]	; (1000adac <__aeabi_ddiv+0x634>)
1000ad9e:	e553      	b.n	1000a848 <__aeabi_ddiv+0xd0>
1000ada0:	000003ff 	.word	0x000003ff
1000ada4:	feffffff 	.word	0xfeffffff
1000ada8:	000007fe 	.word	0x000007fe
1000adac:	000007ff 	.word	0x000007ff
1000adb0:	fffffc02 	.word	0xfffffc02
1000adb4:	0000041e 	.word	0x0000041e
1000adb8:	fffffbe2 	.word	0xfffffbe2
1000adbc:	0000043e 	.word	0x0000043e

1000adc0 <__eqdf2>:
1000adc0:	b5f0      	push	{r4, r5, r6, r7, lr}
1000adc2:	465f      	mov	r7, fp
1000adc4:	464d      	mov	r5, r9
1000adc6:	4644      	mov	r4, r8
1000adc8:	4656      	mov	r6, sl
1000adca:	b4f0      	push	{r4, r5, r6, r7}
1000adcc:	031f      	lsls	r7, r3, #12
1000adce:	005c      	lsls	r4, r3, #1
1000add0:	0fdb      	lsrs	r3, r3, #31
1000add2:	4699      	mov	r9, r3
1000add4:	4b1b      	ldr	r3, [pc, #108]	; (1000ae44 <__eqdf2+0x84>)
1000add6:	030e      	lsls	r6, r1, #12
1000add8:	004d      	lsls	r5, r1, #1
1000adda:	0fc9      	lsrs	r1, r1, #31
1000addc:	4684      	mov	ip, r0
1000adde:	0b36      	lsrs	r6, r6, #12
1000ade0:	0d6d      	lsrs	r5, r5, #21
1000ade2:	468b      	mov	fp, r1
1000ade4:	4690      	mov	r8, r2
1000ade6:	0b3f      	lsrs	r7, r7, #12
1000ade8:	0d64      	lsrs	r4, r4, #21
1000adea:	429d      	cmp	r5, r3
1000adec:	d00c      	beq.n	1000ae08 <__eqdf2+0x48>
1000adee:	4b15      	ldr	r3, [pc, #84]	; (1000ae44 <__eqdf2+0x84>)
1000adf0:	429c      	cmp	r4, r3
1000adf2:	d010      	beq.n	1000ae16 <__eqdf2+0x56>
1000adf4:	2301      	movs	r3, #1
1000adf6:	42a5      	cmp	r5, r4
1000adf8:	d014      	beq.n	1000ae24 <__eqdf2+0x64>
1000adfa:	1c18      	adds	r0, r3, #0
1000adfc:	bc3c      	pop	{r2, r3, r4, r5}
1000adfe:	4690      	mov	r8, r2
1000ae00:	4699      	mov	r9, r3
1000ae02:	46a2      	mov	sl, r4
1000ae04:	46ab      	mov	fp, r5
1000ae06:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000ae08:	1c31      	adds	r1, r6, #0
1000ae0a:	2301      	movs	r3, #1
1000ae0c:	4301      	orrs	r1, r0
1000ae0e:	d1f4      	bne.n	1000adfa <__eqdf2+0x3a>
1000ae10:	4b0c      	ldr	r3, [pc, #48]	; (1000ae44 <__eqdf2+0x84>)
1000ae12:	429c      	cmp	r4, r3
1000ae14:	d1ee      	bne.n	1000adf4 <__eqdf2+0x34>
1000ae16:	433a      	orrs	r2, r7
1000ae18:	2301      	movs	r3, #1
1000ae1a:	2a00      	cmp	r2, #0
1000ae1c:	d1ed      	bne.n	1000adfa <__eqdf2+0x3a>
1000ae1e:	2301      	movs	r3, #1
1000ae20:	42a5      	cmp	r5, r4
1000ae22:	d1ea      	bne.n	1000adfa <__eqdf2+0x3a>
1000ae24:	42be      	cmp	r6, r7
1000ae26:	d1e8      	bne.n	1000adfa <__eqdf2+0x3a>
1000ae28:	45c4      	cmp	ip, r8
1000ae2a:	d1e6      	bne.n	1000adfa <__eqdf2+0x3a>
1000ae2c:	45cb      	cmp	fp, r9
1000ae2e:	d006      	beq.n	1000ae3e <__eqdf2+0x7e>
1000ae30:	2d00      	cmp	r5, #0
1000ae32:	d1e2      	bne.n	1000adfa <__eqdf2+0x3a>
1000ae34:	4330      	orrs	r0, r6
1000ae36:	1c03      	adds	r3, r0, #0
1000ae38:	1e58      	subs	r0, r3, #1
1000ae3a:	4183      	sbcs	r3, r0
1000ae3c:	e7dd      	b.n	1000adfa <__eqdf2+0x3a>
1000ae3e:	2300      	movs	r3, #0
1000ae40:	e7db      	b.n	1000adfa <__eqdf2+0x3a>
1000ae42:	46c0      	nop			; (mov r8, r8)
1000ae44:	000007ff 	.word	0x000007ff

1000ae48 <__gedf2>:
1000ae48:	b5f0      	push	{r4, r5, r6, r7, lr}
1000ae4a:	4657      	mov	r7, sl
1000ae4c:	4645      	mov	r5, r8
1000ae4e:	464e      	mov	r6, r9
1000ae50:	b4e0      	push	{r5, r6, r7}
1000ae52:	030f      	lsls	r7, r1, #12
1000ae54:	004e      	lsls	r6, r1, #1
1000ae56:	0fc9      	lsrs	r1, r1, #31
1000ae58:	468a      	mov	sl, r1
1000ae5a:	4932      	ldr	r1, [pc, #200]	; (1000af24 <__gedf2+0xdc>)
1000ae5c:	031d      	lsls	r5, r3, #12
1000ae5e:	005c      	lsls	r4, r3, #1
1000ae60:	4684      	mov	ip, r0
1000ae62:	0b3f      	lsrs	r7, r7, #12
1000ae64:	0d76      	lsrs	r6, r6, #21
1000ae66:	4690      	mov	r8, r2
1000ae68:	0b2d      	lsrs	r5, r5, #12
1000ae6a:	0d64      	lsrs	r4, r4, #21
1000ae6c:	0fdb      	lsrs	r3, r3, #31
1000ae6e:	428e      	cmp	r6, r1
1000ae70:	d00f      	beq.n	1000ae92 <__gedf2+0x4a>
1000ae72:	428c      	cmp	r4, r1
1000ae74:	d039      	beq.n	1000aeea <__gedf2+0xa2>
1000ae76:	2e00      	cmp	r6, #0
1000ae78:	d110      	bne.n	1000ae9c <__gedf2+0x54>
1000ae7a:	4338      	orrs	r0, r7
1000ae7c:	4241      	negs	r1, r0
1000ae7e:	4141      	adcs	r1, r0
1000ae80:	4689      	mov	r9, r1
1000ae82:	2c00      	cmp	r4, #0
1000ae84:	d127      	bne.n	1000aed6 <__gedf2+0x8e>
1000ae86:	432a      	orrs	r2, r5
1000ae88:	d125      	bne.n	1000aed6 <__gedf2+0x8e>
1000ae8a:	2000      	movs	r0, #0
1000ae8c:	2900      	cmp	r1, #0
1000ae8e:	d10e      	bne.n	1000aeae <__gedf2+0x66>
1000ae90:	e008      	b.n	1000aea4 <__gedf2+0x5c>
1000ae92:	1c39      	adds	r1, r7, #0
1000ae94:	4301      	orrs	r1, r0
1000ae96:	d12e      	bne.n	1000aef6 <__gedf2+0xae>
1000ae98:	42b4      	cmp	r4, r6
1000ae9a:	d026      	beq.n	1000aeea <__gedf2+0xa2>
1000ae9c:	2c00      	cmp	r4, #0
1000ae9e:	d00b      	beq.n	1000aeb8 <__gedf2+0x70>
1000aea0:	459a      	cmp	sl, r3
1000aea2:	d00d      	beq.n	1000aec0 <__gedf2+0x78>
1000aea4:	4653      	mov	r3, sl
1000aea6:	4259      	negs	r1, r3
1000aea8:	2301      	movs	r3, #1
1000aeaa:	4319      	orrs	r1, r3
1000aeac:	1c08      	adds	r0, r1, #0
1000aeae:	bc1c      	pop	{r2, r3, r4}
1000aeb0:	4690      	mov	r8, r2
1000aeb2:	4699      	mov	r9, r3
1000aeb4:	46a2      	mov	sl, r4
1000aeb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000aeb8:	432a      	orrs	r2, r5
1000aeba:	d0f3      	beq.n	1000aea4 <__gedf2+0x5c>
1000aebc:	459a      	cmp	sl, r3
1000aebe:	d1f1      	bne.n	1000aea4 <__gedf2+0x5c>
1000aec0:	42a6      	cmp	r6, r4
1000aec2:	dcef      	bgt.n	1000aea4 <__gedf2+0x5c>
1000aec4:	da1a      	bge.n	1000aefc <__gedf2+0xb4>
1000aec6:	4650      	mov	r0, sl
1000aec8:	4241      	negs	r1, r0
1000aeca:	4148      	adcs	r0, r1
1000aecc:	2301      	movs	r3, #1
1000aece:	4241      	negs	r1, r0
1000aed0:	4319      	orrs	r1, r3
1000aed2:	1c08      	adds	r0, r1, #0
1000aed4:	e7eb      	b.n	1000aeae <__gedf2+0x66>
1000aed6:	464a      	mov	r2, r9
1000aed8:	2a00      	cmp	r2, #0
1000aeda:	d0e1      	beq.n	1000aea0 <__gedf2+0x58>
1000aedc:	4258      	negs	r0, r3
1000aede:	4158      	adcs	r0, r3
1000aee0:	2201      	movs	r2, #1
1000aee2:	4241      	negs	r1, r0
1000aee4:	4311      	orrs	r1, r2
1000aee6:	1c08      	adds	r0, r1, #0
1000aee8:	e7e1      	b.n	1000aeae <__gedf2+0x66>
1000aeea:	1c29      	adds	r1, r5, #0
1000aeec:	4311      	orrs	r1, r2
1000aeee:	d102      	bne.n	1000aef6 <__gedf2+0xae>
1000aef0:	2e00      	cmp	r6, #0
1000aef2:	d0c2      	beq.n	1000ae7a <__gedf2+0x32>
1000aef4:	e7d4      	b.n	1000aea0 <__gedf2+0x58>
1000aef6:	2002      	movs	r0, #2
1000aef8:	4240      	negs	r0, r0
1000aefa:	e7d8      	b.n	1000aeae <__gedf2+0x66>
1000aefc:	42af      	cmp	r7, r5
1000aefe:	d8d1      	bhi.n	1000aea4 <__gedf2+0x5c>
1000af00:	d009      	beq.n	1000af16 <__gedf2+0xce>
1000af02:	2000      	movs	r0, #0
1000af04:	42af      	cmp	r7, r5
1000af06:	d2d2      	bcs.n	1000aeae <__gedf2+0x66>
1000af08:	4650      	mov	r0, sl
1000af0a:	4241      	negs	r1, r0
1000af0c:	4148      	adcs	r0, r1
1000af0e:	2301      	movs	r3, #1
1000af10:	4240      	negs	r0, r0
1000af12:	4318      	orrs	r0, r3
1000af14:	e7cb      	b.n	1000aeae <__gedf2+0x66>
1000af16:	45c4      	cmp	ip, r8
1000af18:	d8c4      	bhi.n	1000aea4 <__gedf2+0x5c>
1000af1a:	2000      	movs	r0, #0
1000af1c:	45c4      	cmp	ip, r8
1000af1e:	d3f3      	bcc.n	1000af08 <__gedf2+0xc0>
1000af20:	e7c5      	b.n	1000aeae <__gedf2+0x66>
1000af22:	46c0      	nop			; (mov r8, r8)
1000af24:	000007ff 	.word	0x000007ff

1000af28 <__ledf2>:
1000af28:	b5f0      	push	{r4, r5, r6, r7, lr}
1000af2a:	465f      	mov	r7, fp
1000af2c:	464d      	mov	r5, r9
1000af2e:	4644      	mov	r4, r8
1000af30:	4656      	mov	r6, sl
1000af32:	4680      	mov	r8, r0
1000af34:	b4f0      	push	{r4, r5, r6, r7}
1000af36:	1c06      	adds	r6, r0, #0
1000af38:	0308      	lsls	r0, r1, #12
1000af3a:	0b00      	lsrs	r0, r0, #12
1000af3c:	4684      	mov	ip, r0
1000af3e:	482c      	ldr	r0, [pc, #176]	; (1000aff0 <__ledf2+0xc8>)
1000af40:	004c      	lsls	r4, r1, #1
1000af42:	031f      	lsls	r7, r3, #12
1000af44:	005d      	lsls	r5, r3, #1
1000af46:	0fc9      	lsrs	r1, r1, #31
1000af48:	0d64      	lsrs	r4, r4, #21
1000af4a:	468b      	mov	fp, r1
1000af4c:	4691      	mov	r9, r2
1000af4e:	0b3f      	lsrs	r7, r7, #12
1000af50:	0d6d      	lsrs	r5, r5, #21
1000af52:	0fdb      	lsrs	r3, r3, #31
1000af54:	4284      	cmp	r4, r0
1000af56:	d012      	beq.n	1000af7e <__ledf2+0x56>
1000af58:	4285      	cmp	r5, r0
1000af5a:	d025      	beq.n	1000afa8 <__ledf2+0x80>
1000af5c:	2c00      	cmp	r4, #0
1000af5e:	d114      	bne.n	1000af8a <__ledf2+0x62>
1000af60:	4661      	mov	r1, ip
1000af62:	430e      	orrs	r6, r1
1000af64:	4270      	negs	r0, r6
1000af66:	4146      	adcs	r6, r0
1000af68:	2d00      	cmp	r5, #0
1000af6a:	d035      	beq.n	1000afd8 <__ledf2+0xb0>
1000af6c:	2e00      	cmp	r6, #0
1000af6e:	d021      	beq.n	1000afb4 <__ledf2+0x8c>
1000af70:	4258      	negs	r0, r3
1000af72:	4158      	adcs	r0, r3
1000af74:	2101      	movs	r1, #1
1000af76:	4243      	negs	r3, r0
1000af78:	430b      	orrs	r3, r1
1000af7a:	1c18      	adds	r0, r3, #0
1000af7c:	e00e      	b.n	1000af9c <__ledf2+0x74>
1000af7e:	4661      	mov	r1, ip
1000af80:	2002      	movs	r0, #2
1000af82:	4331      	orrs	r1, r6
1000af84:	d10a      	bne.n	1000af9c <__ledf2+0x74>
1000af86:	42a5      	cmp	r5, r4
1000af88:	d00e      	beq.n	1000afa8 <__ledf2+0x80>
1000af8a:	2d00      	cmp	r5, #0
1000af8c:	d112      	bne.n	1000afb4 <__ledf2+0x8c>
1000af8e:	433a      	orrs	r2, r7
1000af90:	d110      	bne.n	1000afb4 <__ledf2+0x8c>
1000af92:	465b      	mov	r3, fp
1000af94:	4259      	negs	r1, r3
1000af96:	2301      	movs	r3, #1
1000af98:	4319      	orrs	r1, r3
1000af9a:	1c08      	adds	r0, r1, #0
1000af9c:	bc3c      	pop	{r2, r3, r4, r5}
1000af9e:	4690      	mov	r8, r2
1000afa0:	4699      	mov	r9, r3
1000afa2:	46a2      	mov	sl, r4
1000afa4:	46ab      	mov	fp, r5
1000afa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000afa8:	1c39      	adds	r1, r7, #0
1000afaa:	2002      	movs	r0, #2
1000afac:	4311      	orrs	r1, r2
1000afae:	d1f5      	bne.n	1000af9c <__ledf2+0x74>
1000afb0:	2c00      	cmp	r4, #0
1000afb2:	d0d5      	beq.n	1000af60 <__ledf2+0x38>
1000afb4:	459b      	cmp	fp, r3
1000afb6:	d1ec      	bne.n	1000af92 <__ledf2+0x6a>
1000afb8:	42ac      	cmp	r4, r5
1000afba:	dcea      	bgt.n	1000af92 <__ledf2+0x6a>
1000afbc:	db05      	blt.n	1000afca <__ledf2+0xa2>
1000afbe:	45bc      	cmp	ip, r7
1000afc0:	d8e7      	bhi.n	1000af92 <__ledf2+0x6a>
1000afc2:	d00f      	beq.n	1000afe4 <__ledf2+0xbc>
1000afc4:	2000      	movs	r0, #0
1000afc6:	45bc      	cmp	ip, r7
1000afc8:	d2e8      	bcs.n	1000af9c <__ledf2+0x74>
1000afca:	4658      	mov	r0, fp
1000afcc:	4241      	negs	r1, r0
1000afce:	4148      	adcs	r0, r1
1000afd0:	4241      	negs	r1, r0
1000afd2:	2001      	movs	r0, #1
1000afd4:	4308      	orrs	r0, r1
1000afd6:	e7e1      	b.n	1000af9c <__ledf2+0x74>
1000afd8:	433a      	orrs	r2, r7
1000afda:	d1c7      	bne.n	1000af6c <__ledf2+0x44>
1000afdc:	2000      	movs	r0, #0
1000afde:	2e00      	cmp	r6, #0
1000afe0:	d1dc      	bne.n	1000af9c <__ledf2+0x74>
1000afe2:	e7d6      	b.n	1000af92 <__ledf2+0x6a>
1000afe4:	45c8      	cmp	r8, r9
1000afe6:	d8d4      	bhi.n	1000af92 <__ledf2+0x6a>
1000afe8:	2000      	movs	r0, #0
1000afea:	45c8      	cmp	r8, r9
1000afec:	d3ed      	bcc.n	1000afca <__ledf2+0xa2>
1000afee:	e7d5      	b.n	1000af9c <__ledf2+0x74>
1000aff0:	000007ff 	.word	0x000007ff

1000aff4 <__aeabi_dmul>:
1000aff4:	b5f0      	push	{r4, r5, r6, r7, lr}
1000aff6:	465f      	mov	r7, fp
1000aff8:	4656      	mov	r6, sl
1000affa:	464d      	mov	r5, r9
1000affc:	4644      	mov	r4, r8
1000affe:	b4f0      	push	{r4, r5, r6, r7}
1000b000:	1c05      	adds	r5, r0, #0
1000b002:	1c06      	adds	r6, r0, #0
1000b004:	0308      	lsls	r0, r1, #12
1000b006:	b087      	sub	sp, #28
1000b008:	4699      	mov	r9, r3
1000b00a:	004f      	lsls	r7, r1, #1
1000b00c:	0b03      	lsrs	r3, r0, #12
1000b00e:	0fcc      	lsrs	r4, r1, #31
1000b010:	4692      	mov	sl, r2
1000b012:	469b      	mov	fp, r3
1000b014:	0d7f      	lsrs	r7, r7, #21
1000b016:	9401      	str	r4, [sp, #4]
1000b018:	d067      	beq.n	1000b0ea <__aeabi_dmul+0xf6>
1000b01a:	4b6c      	ldr	r3, [pc, #432]	; (1000b1cc <__aeabi_dmul+0x1d8>)
1000b01c:	429f      	cmp	r7, r3
1000b01e:	d036      	beq.n	1000b08e <__aeabi_dmul+0x9a>
1000b020:	2080      	movs	r0, #128	; 0x80
1000b022:	465b      	mov	r3, fp
1000b024:	0340      	lsls	r0, r0, #13
1000b026:	4318      	orrs	r0, r3
1000b028:	00c0      	lsls	r0, r0, #3
1000b02a:	0f6b      	lsrs	r3, r5, #29
1000b02c:	4318      	orrs	r0, r3
1000b02e:	4b68      	ldr	r3, [pc, #416]	; (1000b1d0 <__aeabi_dmul+0x1dc>)
1000b030:	4683      	mov	fp, r0
1000b032:	469c      	mov	ip, r3
1000b034:	2300      	movs	r3, #0
1000b036:	4698      	mov	r8, r3
1000b038:	00ee      	lsls	r6, r5, #3
1000b03a:	4467      	add	r7, ip
1000b03c:	9300      	str	r3, [sp, #0]
1000b03e:	464b      	mov	r3, r9
1000b040:	4649      	mov	r1, r9
1000b042:	031d      	lsls	r5, r3, #12
1000b044:	0fc9      	lsrs	r1, r1, #31
1000b046:	005b      	lsls	r3, r3, #1
1000b048:	4652      	mov	r2, sl
1000b04a:	0b2d      	lsrs	r5, r5, #12
1000b04c:	0d5b      	lsrs	r3, r3, #21
1000b04e:	4689      	mov	r9, r1
1000b050:	d100      	bne.n	1000b054 <__aeabi_dmul+0x60>
1000b052:	e06e      	b.n	1000b132 <__aeabi_dmul+0x13e>
1000b054:	495d      	ldr	r1, [pc, #372]	; (1000b1cc <__aeabi_dmul+0x1d8>)
1000b056:	428b      	cmp	r3, r1
1000b058:	d064      	beq.n	1000b124 <__aeabi_dmul+0x130>
1000b05a:	2080      	movs	r0, #128	; 0x80
1000b05c:	495c      	ldr	r1, [pc, #368]	; (1000b1d0 <__aeabi_dmul+0x1dc>)
1000b05e:	0340      	lsls	r0, r0, #13
1000b060:	468c      	mov	ip, r1
1000b062:	2100      	movs	r1, #0
1000b064:	4305      	orrs	r5, r0
1000b066:	00ed      	lsls	r5, r5, #3
1000b068:	0f50      	lsrs	r0, r2, #29
1000b06a:	4305      	orrs	r5, r0
1000b06c:	00d2      	lsls	r2, r2, #3
1000b06e:	4463      	add	r3, ip
1000b070:	4648      	mov	r0, r9
1000b072:	18ff      	adds	r7, r7, r3
1000b074:	1c7b      	adds	r3, r7, #1
1000b076:	469a      	mov	sl, r3
1000b078:	9b00      	ldr	r3, [sp, #0]
1000b07a:	4060      	eors	r0, r4
1000b07c:	9002      	str	r0, [sp, #8]
1000b07e:	430b      	orrs	r3, r1
1000b080:	2b0f      	cmp	r3, #15
1000b082:	d900      	bls.n	1000b086 <__aeabi_dmul+0x92>
1000b084:	e0ac      	b.n	1000b1e0 <__aeabi_dmul+0x1ec>
1000b086:	4853      	ldr	r0, [pc, #332]	; (1000b1d4 <__aeabi_dmul+0x1e0>)
1000b088:	009b      	lsls	r3, r3, #2
1000b08a:	58c3      	ldr	r3, [r0, r3]
1000b08c:	469f      	mov	pc, r3
1000b08e:	465b      	mov	r3, fp
1000b090:	431d      	orrs	r5, r3
1000b092:	d000      	beq.n	1000b096 <__aeabi_dmul+0xa2>
1000b094:	e082      	b.n	1000b19c <__aeabi_dmul+0x1a8>
1000b096:	2308      	movs	r3, #8
1000b098:	9300      	str	r3, [sp, #0]
1000b09a:	2300      	movs	r3, #0
1000b09c:	469b      	mov	fp, r3
1000b09e:	3302      	adds	r3, #2
1000b0a0:	2600      	movs	r6, #0
1000b0a2:	4698      	mov	r8, r3
1000b0a4:	e7cb      	b.n	1000b03e <__aeabi_dmul+0x4a>
1000b0a6:	9b02      	ldr	r3, [sp, #8]
1000b0a8:	9301      	str	r3, [sp, #4]
1000b0aa:	4643      	mov	r3, r8
1000b0ac:	2b02      	cmp	r3, #2
1000b0ae:	d159      	bne.n	1000b164 <__aeabi_dmul+0x170>
1000b0b0:	2401      	movs	r4, #1
1000b0b2:	2500      	movs	r5, #0
1000b0b4:	2600      	movs	r6, #0
1000b0b6:	9b01      	ldr	r3, [sp, #4]
1000b0b8:	401c      	ands	r4, r3
1000b0ba:	4b44      	ldr	r3, [pc, #272]	; (1000b1cc <__aeabi_dmul+0x1d8>)
1000b0bc:	2100      	movs	r1, #0
1000b0be:	032d      	lsls	r5, r5, #12
1000b0c0:	0d0a      	lsrs	r2, r1, #20
1000b0c2:	0512      	lsls	r2, r2, #20
1000b0c4:	0b2d      	lsrs	r5, r5, #12
1000b0c6:	4315      	orrs	r5, r2
1000b0c8:	4a43      	ldr	r2, [pc, #268]	; (1000b1d8 <__aeabi_dmul+0x1e4>)
1000b0ca:	051b      	lsls	r3, r3, #20
1000b0cc:	4015      	ands	r5, r2
1000b0ce:	431d      	orrs	r5, r3
1000b0d0:	006d      	lsls	r5, r5, #1
1000b0d2:	07e4      	lsls	r4, r4, #31
1000b0d4:	086d      	lsrs	r5, r5, #1
1000b0d6:	4325      	orrs	r5, r4
1000b0d8:	1c30      	adds	r0, r6, #0
1000b0da:	1c29      	adds	r1, r5, #0
1000b0dc:	b007      	add	sp, #28
1000b0de:	bc3c      	pop	{r2, r3, r4, r5}
1000b0e0:	4690      	mov	r8, r2
1000b0e2:	4699      	mov	r9, r3
1000b0e4:	46a2      	mov	sl, r4
1000b0e6:	46ab      	mov	fp, r5
1000b0e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b0ea:	432b      	orrs	r3, r5
1000b0ec:	d04e      	beq.n	1000b18c <__aeabi_dmul+0x198>
1000b0ee:	465b      	mov	r3, fp
1000b0f0:	2b00      	cmp	r3, #0
1000b0f2:	d100      	bne.n	1000b0f6 <__aeabi_dmul+0x102>
1000b0f4:	e185      	b.n	1000b402 <__aeabi_dmul+0x40e>
1000b0f6:	4658      	mov	r0, fp
1000b0f8:	f000 fe74 	bl	1000bde4 <__clzsi2>
1000b0fc:	1c02      	adds	r2, r0, #0
1000b0fe:	2328      	movs	r3, #40	; 0x28
1000b100:	1c29      	adds	r1, r5, #0
1000b102:	1a9b      	subs	r3, r3, r2
1000b104:	1c16      	adds	r6, r2, #0
1000b106:	4658      	mov	r0, fp
1000b108:	40d9      	lsrs	r1, r3
1000b10a:	3e08      	subs	r6, #8
1000b10c:	40b0      	lsls	r0, r6
1000b10e:	1c0b      	adds	r3, r1, #0
1000b110:	40b5      	lsls	r5, r6
1000b112:	4303      	orrs	r3, r0
1000b114:	469b      	mov	fp, r3
1000b116:	1c2e      	adds	r6, r5, #0
1000b118:	2300      	movs	r3, #0
1000b11a:	4f30      	ldr	r7, [pc, #192]	; (1000b1dc <__aeabi_dmul+0x1e8>)
1000b11c:	9300      	str	r3, [sp, #0]
1000b11e:	1abf      	subs	r7, r7, r2
1000b120:	4698      	mov	r8, r3
1000b122:	e78c      	b.n	1000b03e <__aeabi_dmul+0x4a>
1000b124:	4651      	mov	r1, sl
1000b126:	4329      	orrs	r1, r5
1000b128:	d12e      	bne.n	1000b188 <__aeabi_dmul+0x194>
1000b12a:	2500      	movs	r5, #0
1000b12c:	2200      	movs	r2, #0
1000b12e:	2102      	movs	r1, #2
1000b130:	e79e      	b.n	1000b070 <__aeabi_dmul+0x7c>
1000b132:	4651      	mov	r1, sl
1000b134:	4329      	orrs	r1, r5
1000b136:	d023      	beq.n	1000b180 <__aeabi_dmul+0x18c>
1000b138:	2d00      	cmp	r5, #0
1000b13a:	d100      	bne.n	1000b13e <__aeabi_dmul+0x14a>
1000b13c:	e154      	b.n	1000b3e8 <__aeabi_dmul+0x3f4>
1000b13e:	1c28      	adds	r0, r5, #0
1000b140:	f000 fe50 	bl	1000bde4 <__clzsi2>
1000b144:	1c03      	adds	r3, r0, #0
1000b146:	2128      	movs	r1, #40	; 0x28
1000b148:	4650      	mov	r0, sl
1000b14a:	1ac9      	subs	r1, r1, r3
1000b14c:	1c1a      	adds	r2, r3, #0
1000b14e:	40c8      	lsrs	r0, r1
1000b150:	4651      	mov	r1, sl
1000b152:	3a08      	subs	r2, #8
1000b154:	4091      	lsls	r1, r2
1000b156:	4095      	lsls	r5, r2
1000b158:	1c0a      	adds	r2, r1, #0
1000b15a:	4305      	orrs	r5, r0
1000b15c:	481f      	ldr	r0, [pc, #124]	; (1000b1dc <__aeabi_dmul+0x1e8>)
1000b15e:	2100      	movs	r1, #0
1000b160:	1ac3      	subs	r3, r0, r3
1000b162:	e785      	b.n	1000b070 <__aeabi_dmul+0x7c>
1000b164:	2b03      	cmp	r3, #3
1000b166:	d100      	bne.n	1000b16a <__aeabi_dmul+0x176>
1000b168:	e1c2      	b.n	1000b4f0 <__aeabi_dmul+0x4fc>
1000b16a:	2b01      	cmp	r3, #1
1000b16c:	d000      	beq.n	1000b170 <__aeabi_dmul+0x17c>
1000b16e:	e16d      	b.n	1000b44c <__aeabi_dmul+0x458>
1000b170:	4644      	mov	r4, r8
1000b172:	9b01      	ldr	r3, [sp, #4]
1000b174:	2500      	movs	r5, #0
1000b176:	401c      	ands	r4, r3
1000b178:	b2e4      	uxtb	r4, r4
1000b17a:	2300      	movs	r3, #0
1000b17c:	2600      	movs	r6, #0
1000b17e:	e79d      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b180:	2500      	movs	r5, #0
1000b182:	2200      	movs	r2, #0
1000b184:	2101      	movs	r1, #1
1000b186:	e773      	b.n	1000b070 <__aeabi_dmul+0x7c>
1000b188:	2103      	movs	r1, #3
1000b18a:	e771      	b.n	1000b070 <__aeabi_dmul+0x7c>
1000b18c:	2304      	movs	r3, #4
1000b18e:	9300      	str	r3, [sp, #0]
1000b190:	2300      	movs	r3, #0
1000b192:	469b      	mov	fp, r3
1000b194:	3301      	adds	r3, #1
1000b196:	2600      	movs	r6, #0
1000b198:	4698      	mov	r8, r3
1000b19a:	e750      	b.n	1000b03e <__aeabi_dmul+0x4a>
1000b19c:	230c      	movs	r3, #12
1000b19e:	9300      	str	r3, [sp, #0]
1000b1a0:	3b09      	subs	r3, #9
1000b1a2:	4698      	mov	r8, r3
1000b1a4:	e74b      	b.n	1000b03e <__aeabi_dmul+0x4a>
1000b1a6:	2580      	movs	r5, #128	; 0x80
1000b1a8:	2400      	movs	r4, #0
1000b1aa:	032d      	lsls	r5, r5, #12
1000b1ac:	2600      	movs	r6, #0
1000b1ae:	4b07      	ldr	r3, [pc, #28]	; (1000b1cc <__aeabi_dmul+0x1d8>)
1000b1b0:	e784      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b1b2:	464b      	mov	r3, r9
1000b1b4:	46ab      	mov	fp, r5
1000b1b6:	1c16      	adds	r6, r2, #0
1000b1b8:	9301      	str	r3, [sp, #4]
1000b1ba:	4688      	mov	r8, r1
1000b1bc:	e775      	b.n	1000b0aa <__aeabi_dmul+0xb6>
1000b1be:	9b02      	ldr	r3, [sp, #8]
1000b1c0:	46ab      	mov	fp, r5
1000b1c2:	1c16      	adds	r6, r2, #0
1000b1c4:	9301      	str	r3, [sp, #4]
1000b1c6:	4688      	mov	r8, r1
1000b1c8:	e76f      	b.n	1000b0aa <__aeabi_dmul+0xb6>
1000b1ca:	46c0      	nop			; (mov r8, r8)
1000b1cc:	000007ff 	.word	0x000007ff
1000b1d0:	fffffc01 	.word	0xfffffc01
1000b1d4:	1000e9a0 	.word	0x1000e9a0
1000b1d8:	800fffff 	.word	0x800fffff
1000b1dc:	fffffc0d 	.word	0xfffffc0d
1000b1e0:	0c33      	lsrs	r3, r6, #16
1000b1e2:	0436      	lsls	r6, r6, #16
1000b1e4:	0c36      	lsrs	r6, r6, #16
1000b1e6:	469c      	mov	ip, r3
1000b1e8:	1c33      	adds	r3, r6, #0
1000b1ea:	0c14      	lsrs	r4, r2, #16
1000b1ec:	0412      	lsls	r2, r2, #16
1000b1ee:	0c12      	lsrs	r2, r2, #16
1000b1f0:	4353      	muls	r3, r2
1000b1f2:	4698      	mov	r8, r3
1000b1f4:	4663      	mov	r3, ip
1000b1f6:	4353      	muls	r3, r2
1000b1f8:	4699      	mov	r9, r3
1000b1fa:	4663      	mov	r3, ip
1000b1fc:	4363      	muls	r3, r4
1000b1fe:	9301      	str	r3, [sp, #4]
1000b200:	1c33      	adds	r3, r6, #0
1000b202:	4641      	mov	r1, r8
1000b204:	4363      	muls	r3, r4
1000b206:	0c09      	lsrs	r1, r1, #16
1000b208:	444b      	add	r3, r9
1000b20a:	185b      	adds	r3, r3, r1
1000b20c:	4599      	cmp	r9, r3
1000b20e:	d905      	bls.n	1000b21c <__aeabi_dmul+0x228>
1000b210:	2080      	movs	r0, #128	; 0x80
1000b212:	0240      	lsls	r0, r0, #9
1000b214:	4681      	mov	r9, r0
1000b216:	9901      	ldr	r1, [sp, #4]
1000b218:	4449      	add	r1, r9
1000b21a:	9101      	str	r1, [sp, #4]
1000b21c:	0c19      	lsrs	r1, r3, #16
1000b21e:	9103      	str	r1, [sp, #12]
1000b220:	4641      	mov	r1, r8
1000b222:	0409      	lsls	r1, r1, #16
1000b224:	0c09      	lsrs	r1, r1, #16
1000b226:	041b      	lsls	r3, r3, #16
1000b228:	185b      	adds	r3, r3, r1
1000b22a:	9304      	str	r3, [sp, #16]
1000b22c:	0c2b      	lsrs	r3, r5, #16
1000b22e:	4698      	mov	r8, r3
1000b230:	1c33      	adds	r3, r6, #0
1000b232:	042d      	lsls	r5, r5, #16
1000b234:	0c29      	lsrs	r1, r5, #16
1000b236:	434b      	muls	r3, r1
1000b238:	4660      	mov	r0, ip
1000b23a:	9300      	str	r3, [sp, #0]
1000b23c:	4643      	mov	r3, r8
1000b23e:	4665      	mov	r5, ip
1000b240:	4358      	muls	r0, r3
1000b242:	435e      	muls	r6, r3
1000b244:	9b00      	ldr	r3, [sp, #0]
1000b246:	434d      	muls	r5, r1
1000b248:	0c1b      	lsrs	r3, r3, #16
1000b24a:	4699      	mov	r9, r3
1000b24c:	19ae      	adds	r6, r5, r6
1000b24e:	444e      	add	r6, r9
1000b250:	4684      	mov	ip, r0
1000b252:	42b5      	cmp	r5, r6
1000b254:	d903      	bls.n	1000b25e <__aeabi_dmul+0x26a>
1000b256:	2380      	movs	r3, #128	; 0x80
1000b258:	025b      	lsls	r3, r3, #9
1000b25a:	4699      	mov	r9, r3
1000b25c:	44cc      	add	ip, r9
1000b25e:	0c35      	lsrs	r5, r6, #16
1000b260:	1c2b      	adds	r3, r5, #0
1000b262:	9803      	ldr	r0, [sp, #12]
1000b264:	4463      	add	r3, ip
1000b266:	4684      	mov	ip, r0
1000b268:	9305      	str	r3, [sp, #20]
1000b26a:	9b00      	ldr	r3, [sp, #0]
1000b26c:	0436      	lsls	r6, r6, #16
1000b26e:	041b      	lsls	r3, r3, #16
1000b270:	0c1b      	lsrs	r3, r3, #16
1000b272:	18f3      	adds	r3, r6, r3
1000b274:	449c      	add	ip, r3
1000b276:	4660      	mov	r0, ip
1000b278:	9003      	str	r0, [sp, #12]
1000b27a:	4658      	mov	r0, fp
1000b27c:	0405      	lsls	r5, r0, #16
1000b27e:	0c06      	lsrs	r6, r0, #16
1000b280:	0c28      	lsrs	r0, r5, #16
1000b282:	4684      	mov	ip, r0
1000b284:	4350      	muls	r0, r2
1000b286:	1c35      	adds	r5, r6, #0
1000b288:	4681      	mov	r9, r0
1000b28a:	4660      	mov	r0, ip
1000b28c:	4365      	muls	r5, r4
1000b28e:	4344      	muls	r4, r0
1000b290:	4648      	mov	r0, r9
1000b292:	0c00      	lsrs	r0, r0, #16
1000b294:	4683      	mov	fp, r0
1000b296:	4372      	muls	r2, r6
1000b298:	1914      	adds	r4, r2, r4
1000b29a:	445c      	add	r4, fp
1000b29c:	42a2      	cmp	r2, r4
1000b29e:	d903      	bls.n	1000b2a8 <__aeabi_dmul+0x2b4>
1000b2a0:	2280      	movs	r2, #128	; 0x80
1000b2a2:	0252      	lsls	r2, r2, #9
1000b2a4:	4693      	mov	fp, r2
1000b2a6:	445d      	add	r5, fp
1000b2a8:	0c22      	lsrs	r2, r4, #16
1000b2aa:	18ad      	adds	r5, r5, r2
1000b2ac:	464a      	mov	r2, r9
1000b2ae:	0412      	lsls	r2, r2, #16
1000b2b0:	0c12      	lsrs	r2, r2, #16
1000b2b2:	0424      	lsls	r4, r4, #16
1000b2b4:	4640      	mov	r0, r8
1000b2b6:	18a4      	adds	r4, r4, r2
1000b2b8:	4662      	mov	r2, ip
1000b2ba:	434a      	muls	r2, r1
1000b2bc:	4371      	muls	r1, r6
1000b2be:	4346      	muls	r6, r0
1000b2c0:	4660      	mov	r0, ip
1000b2c2:	9600      	str	r6, [sp, #0]
1000b2c4:	4646      	mov	r6, r8
1000b2c6:	4370      	muls	r0, r6
1000b2c8:	4680      	mov	r8, r0
1000b2ca:	0c10      	lsrs	r0, r2, #16
1000b2cc:	4684      	mov	ip, r0
1000b2ce:	4488      	add	r8, r1
1000b2d0:	44e0      	add	r8, ip
1000b2d2:	4541      	cmp	r1, r8
1000b2d4:	d905      	bls.n	1000b2e2 <__aeabi_dmul+0x2ee>
1000b2d6:	2180      	movs	r1, #128	; 0x80
1000b2d8:	0249      	lsls	r1, r1, #9
1000b2da:	468c      	mov	ip, r1
1000b2dc:	9900      	ldr	r1, [sp, #0]
1000b2de:	4461      	add	r1, ip
1000b2e0:	9100      	str	r1, [sp, #0]
1000b2e2:	9801      	ldr	r0, [sp, #4]
1000b2e4:	9903      	ldr	r1, [sp, #12]
1000b2e6:	4684      	mov	ip, r0
1000b2e8:	4461      	add	r1, ip
1000b2ea:	4299      	cmp	r1, r3
1000b2ec:	419b      	sbcs	r3, r3
1000b2ee:	425b      	negs	r3, r3
1000b2f0:	4699      	mov	r9, r3
1000b2f2:	9805      	ldr	r0, [sp, #20]
1000b2f4:	4643      	mov	r3, r8
1000b2f6:	4684      	mov	ip, r0
1000b2f8:	0412      	lsls	r2, r2, #16
1000b2fa:	0c12      	lsrs	r2, r2, #16
1000b2fc:	041b      	lsls	r3, r3, #16
1000b2fe:	189b      	adds	r3, r3, r2
1000b300:	4463      	add	r3, ip
1000b302:	469c      	mov	ip, r3
1000b304:	46ab      	mov	fp, r5
1000b306:	4283      	cmp	r3, r0
1000b308:	419b      	sbcs	r3, r3
1000b30a:	4640      	mov	r0, r8
1000b30c:	190a      	adds	r2, r1, r4
1000b30e:	44cc      	add	ip, r9
1000b310:	42a2      	cmp	r2, r4
1000b312:	4189      	sbcs	r1, r1
1000b314:	44e3      	add	fp, ip
1000b316:	45cc      	cmp	ip, r9
1000b318:	41b6      	sbcs	r6, r6
1000b31a:	465c      	mov	r4, fp
1000b31c:	0c00      	lsrs	r0, r0, #16
1000b31e:	4680      	mov	r8, r0
1000b320:	4249      	negs	r1, r1
1000b322:	4276      	negs	r6, r6
1000b324:	425b      	negs	r3, r3
1000b326:	1864      	adds	r4, r4, r1
1000b328:	4333      	orrs	r3, r6
1000b32a:	4498      	add	r8, r3
1000b32c:	428c      	cmp	r4, r1
1000b32e:	4189      	sbcs	r1, r1
1000b330:	45ab      	cmp	fp, r5
1000b332:	419b      	sbcs	r3, r3
1000b334:	4249      	negs	r1, r1
1000b336:	425b      	negs	r3, r3
1000b338:	4319      	orrs	r1, r3
1000b33a:	1c0d      	adds	r5, r1, #0
1000b33c:	9b00      	ldr	r3, [sp, #0]
1000b33e:	4445      	add	r5, r8
1000b340:	18ee      	adds	r6, r5, r3
1000b342:	0276      	lsls	r6, r6, #9
1000b344:	0de5      	lsrs	r5, r4, #23
1000b346:	432e      	orrs	r6, r5
1000b348:	46b3      	mov	fp, r6
1000b34a:	9b04      	ldr	r3, [sp, #16]
1000b34c:	0256      	lsls	r6, r2, #9
1000b34e:	431e      	orrs	r6, r3
1000b350:	1e73      	subs	r3, r6, #1
1000b352:	419e      	sbcs	r6, r3
1000b354:	465b      	mov	r3, fp
1000b356:	0dd2      	lsrs	r2, r2, #23
1000b358:	4332      	orrs	r2, r6
1000b35a:	0266      	lsls	r6, r4, #9
1000b35c:	4316      	orrs	r6, r2
1000b35e:	01db      	lsls	r3, r3, #7
1000b360:	d50a      	bpl.n	1000b378 <__aeabi_dmul+0x384>
1000b362:	2301      	movs	r3, #1
1000b364:	4033      	ands	r3, r6
1000b366:	0876      	lsrs	r6, r6, #1
1000b368:	431e      	orrs	r6, r3
1000b36a:	465b      	mov	r3, fp
1000b36c:	07db      	lsls	r3, r3, #31
1000b36e:	431e      	orrs	r6, r3
1000b370:	465b      	mov	r3, fp
1000b372:	085b      	lsrs	r3, r3, #1
1000b374:	469b      	mov	fp, r3
1000b376:	4657      	mov	r7, sl
1000b378:	4b63      	ldr	r3, [pc, #396]	; (1000b508 <__aeabi_dmul+0x514>)
1000b37a:	18fb      	adds	r3, r7, r3
1000b37c:	2b00      	cmp	r3, #0
1000b37e:	dd5a      	ble.n	1000b436 <__aeabi_dmul+0x442>
1000b380:	0772      	lsls	r2, r6, #29
1000b382:	d009      	beq.n	1000b398 <__aeabi_dmul+0x3a4>
1000b384:	220f      	movs	r2, #15
1000b386:	4032      	ands	r2, r6
1000b388:	2a04      	cmp	r2, #4
1000b38a:	d005      	beq.n	1000b398 <__aeabi_dmul+0x3a4>
1000b38c:	1d32      	adds	r2, r6, #4
1000b38e:	42b2      	cmp	r2, r6
1000b390:	41b6      	sbcs	r6, r6
1000b392:	4276      	negs	r6, r6
1000b394:	44b3      	add	fp, r6
1000b396:	1c16      	adds	r6, r2, #0
1000b398:	465a      	mov	r2, fp
1000b39a:	01d2      	lsls	r2, r2, #7
1000b39c:	d506      	bpl.n	1000b3ac <__aeabi_dmul+0x3b8>
1000b39e:	465a      	mov	r2, fp
1000b3a0:	4b5a      	ldr	r3, [pc, #360]	; (1000b50c <__aeabi_dmul+0x518>)
1000b3a2:	401a      	ands	r2, r3
1000b3a4:	2380      	movs	r3, #128	; 0x80
1000b3a6:	4693      	mov	fp, r2
1000b3a8:	00db      	lsls	r3, r3, #3
1000b3aa:	18fb      	adds	r3, r7, r3
1000b3ac:	4a58      	ldr	r2, [pc, #352]	; (1000b510 <__aeabi_dmul+0x51c>)
1000b3ae:	4293      	cmp	r3, r2
1000b3b0:	dd34      	ble.n	1000b41c <__aeabi_dmul+0x428>
1000b3b2:	2401      	movs	r4, #1
1000b3b4:	9b02      	ldr	r3, [sp, #8]
1000b3b6:	2500      	movs	r5, #0
1000b3b8:	401c      	ands	r4, r3
1000b3ba:	2600      	movs	r6, #0
1000b3bc:	4b55      	ldr	r3, [pc, #340]	; (1000b514 <__aeabi_dmul+0x520>)
1000b3be:	e67d      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b3c0:	2080      	movs	r0, #128	; 0x80
1000b3c2:	465b      	mov	r3, fp
1000b3c4:	0300      	lsls	r0, r0, #12
1000b3c6:	4203      	tst	r3, r0
1000b3c8:	d008      	beq.n	1000b3dc <__aeabi_dmul+0x3e8>
1000b3ca:	4205      	tst	r5, r0
1000b3cc:	d106      	bne.n	1000b3dc <__aeabi_dmul+0x3e8>
1000b3ce:	4305      	orrs	r5, r0
1000b3d0:	032d      	lsls	r5, r5, #12
1000b3d2:	0b2d      	lsrs	r5, r5, #12
1000b3d4:	464c      	mov	r4, r9
1000b3d6:	1c16      	adds	r6, r2, #0
1000b3d8:	4b4e      	ldr	r3, [pc, #312]	; (1000b514 <__aeabi_dmul+0x520>)
1000b3da:	e66f      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b3dc:	465d      	mov	r5, fp
1000b3de:	4305      	orrs	r5, r0
1000b3e0:	032d      	lsls	r5, r5, #12
1000b3e2:	0b2d      	lsrs	r5, r5, #12
1000b3e4:	4b4b      	ldr	r3, [pc, #300]	; (1000b514 <__aeabi_dmul+0x520>)
1000b3e6:	e669      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b3e8:	4650      	mov	r0, sl
1000b3ea:	f000 fcfb 	bl	1000bde4 <__clzsi2>
1000b3ee:	1c03      	adds	r3, r0, #0
1000b3f0:	3320      	adds	r3, #32
1000b3f2:	2b27      	cmp	r3, #39	; 0x27
1000b3f4:	dc00      	bgt.n	1000b3f8 <__aeabi_dmul+0x404>
1000b3f6:	e6a6      	b.n	1000b146 <__aeabi_dmul+0x152>
1000b3f8:	4655      	mov	r5, sl
1000b3fa:	3808      	subs	r0, #8
1000b3fc:	4085      	lsls	r5, r0
1000b3fe:	2200      	movs	r2, #0
1000b400:	e6ac      	b.n	1000b15c <__aeabi_dmul+0x168>
1000b402:	1c28      	adds	r0, r5, #0
1000b404:	f000 fcee 	bl	1000bde4 <__clzsi2>
1000b408:	1c02      	adds	r2, r0, #0
1000b40a:	3220      	adds	r2, #32
1000b40c:	2a27      	cmp	r2, #39	; 0x27
1000b40e:	dc00      	bgt.n	1000b412 <__aeabi_dmul+0x41e>
1000b410:	e675      	b.n	1000b0fe <__aeabi_dmul+0x10a>
1000b412:	3808      	subs	r0, #8
1000b414:	4085      	lsls	r5, r0
1000b416:	2600      	movs	r6, #0
1000b418:	46ab      	mov	fp, r5
1000b41a:	e67d      	b.n	1000b118 <__aeabi_dmul+0x124>
1000b41c:	465a      	mov	r2, fp
1000b41e:	08f6      	lsrs	r6, r6, #3
1000b420:	0752      	lsls	r2, r2, #29
1000b422:	4316      	orrs	r6, r2
1000b424:	465a      	mov	r2, fp
1000b426:	2401      	movs	r4, #1
1000b428:	0255      	lsls	r5, r2, #9
1000b42a:	9a02      	ldr	r2, [sp, #8]
1000b42c:	055b      	lsls	r3, r3, #21
1000b42e:	0b2d      	lsrs	r5, r5, #12
1000b430:	0d5b      	lsrs	r3, r3, #21
1000b432:	4014      	ands	r4, r2
1000b434:	e642      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b436:	4d38      	ldr	r5, [pc, #224]	; (1000b518 <__aeabi_dmul+0x524>)
1000b438:	1bed      	subs	r5, r5, r7
1000b43a:	2d38      	cmp	r5, #56	; 0x38
1000b43c:	dd0a      	ble.n	1000b454 <__aeabi_dmul+0x460>
1000b43e:	2401      	movs	r4, #1
1000b440:	9b02      	ldr	r3, [sp, #8]
1000b442:	2500      	movs	r5, #0
1000b444:	401c      	ands	r4, r3
1000b446:	2600      	movs	r6, #0
1000b448:	2300      	movs	r3, #0
1000b44a:	e637      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b44c:	9b01      	ldr	r3, [sp, #4]
1000b44e:	4657      	mov	r7, sl
1000b450:	9302      	str	r3, [sp, #8]
1000b452:	e791      	b.n	1000b378 <__aeabi_dmul+0x384>
1000b454:	2d1f      	cmp	r5, #31
1000b456:	dc25      	bgt.n	1000b4a4 <__aeabi_dmul+0x4b0>
1000b458:	4b30      	ldr	r3, [pc, #192]	; (1000b51c <__aeabi_dmul+0x528>)
1000b45a:	1c32      	adds	r2, r6, #0
1000b45c:	469c      	mov	ip, r3
1000b45e:	4467      	add	r7, ip
1000b460:	40be      	lsls	r6, r7
1000b462:	465b      	mov	r3, fp
1000b464:	40bb      	lsls	r3, r7
1000b466:	1c37      	adds	r7, r6, #0
1000b468:	40ea      	lsrs	r2, r5
1000b46a:	1e7e      	subs	r6, r7, #1
1000b46c:	41b7      	sbcs	r7, r6
1000b46e:	4313      	orrs	r3, r2
1000b470:	433b      	orrs	r3, r7
1000b472:	1c1e      	adds	r6, r3, #0
1000b474:	465b      	mov	r3, fp
1000b476:	40eb      	lsrs	r3, r5
1000b478:	1c1d      	adds	r5, r3, #0
1000b47a:	0773      	lsls	r3, r6, #29
1000b47c:	d009      	beq.n	1000b492 <__aeabi_dmul+0x49e>
1000b47e:	230f      	movs	r3, #15
1000b480:	4033      	ands	r3, r6
1000b482:	2b04      	cmp	r3, #4
1000b484:	d005      	beq.n	1000b492 <__aeabi_dmul+0x49e>
1000b486:	1d33      	adds	r3, r6, #4
1000b488:	42b3      	cmp	r3, r6
1000b48a:	41b6      	sbcs	r6, r6
1000b48c:	4276      	negs	r6, r6
1000b48e:	19ad      	adds	r5, r5, r6
1000b490:	1c1e      	adds	r6, r3, #0
1000b492:	022b      	lsls	r3, r5, #8
1000b494:	d520      	bpl.n	1000b4d8 <__aeabi_dmul+0x4e4>
1000b496:	2401      	movs	r4, #1
1000b498:	9b02      	ldr	r3, [sp, #8]
1000b49a:	2500      	movs	r5, #0
1000b49c:	401c      	ands	r4, r3
1000b49e:	2600      	movs	r6, #0
1000b4a0:	2301      	movs	r3, #1
1000b4a2:	e60b      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b4a4:	465a      	mov	r2, fp
1000b4a6:	4b1e      	ldr	r3, [pc, #120]	; (1000b520 <__aeabi_dmul+0x52c>)
1000b4a8:	1bdb      	subs	r3, r3, r7
1000b4aa:	40da      	lsrs	r2, r3
1000b4ac:	1c13      	adds	r3, r2, #0
1000b4ae:	2d20      	cmp	r5, #32
1000b4b0:	d01c      	beq.n	1000b4ec <__aeabi_dmul+0x4f8>
1000b4b2:	4a1c      	ldr	r2, [pc, #112]	; (1000b524 <__aeabi_dmul+0x530>)
1000b4b4:	4694      	mov	ip, r2
1000b4b6:	465a      	mov	r2, fp
1000b4b8:	4467      	add	r7, ip
1000b4ba:	40ba      	lsls	r2, r7
1000b4bc:	1c17      	adds	r7, r2, #0
1000b4be:	433e      	orrs	r6, r7
1000b4c0:	1e72      	subs	r2, r6, #1
1000b4c2:	4196      	sbcs	r6, r2
1000b4c4:	431e      	orrs	r6, r3
1000b4c6:	2307      	movs	r3, #7
1000b4c8:	2500      	movs	r5, #0
1000b4ca:	4033      	ands	r3, r6
1000b4cc:	d007      	beq.n	1000b4de <__aeabi_dmul+0x4ea>
1000b4ce:	230f      	movs	r3, #15
1000b4d0:	2500      	movs	r5, #0
1000b4d2:	4033      	ands	r3, r6
1000b4d4:	2b04      	cmp	r3, #4
1000b4d6:	d1d6      	bne.n	1000b486 <__aeabi_dmul+0x492>
1000b4d8:	076b      	lsls	r3, r5, #29
1000b4da:	026d      	lsls	r5, r5, #9
1000b4dc:	0b2d      	lsrs	r5, r5, #12
1000b4de:	2401      	movs	r4, #1
1000b4e0:	08f6      	lsrs	r6, r6, #3
1000b4e2:	431e      	orrs	r6, r3
1000b4e4:	9b02      	ldr	r3, [sp, #8]
1000b4e6:	401c      	ands	r4, r3
1000b4e8:	2300      	movs	r3, #0
1000b4ea:	e5e7      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b4ec:	2700      	movs	r7, #0
1000b4ee:	e7e6      	b.n	1000b4be <__aeabi_dmul+0x4ca>
1000b4f0:	2580      	movs	r5, #128	; 0x80
1000b4f2:	465b      	mov	r3, fp
1000b4f4:	2401      	movs	r4, #1
1000b4f6:	032d      	lsls	r5, r5, #12
1000b4f8:	431d      	orrs	r5, r3
1000b4fa:	9b01      	ldr	r3, [sp, #4]
1000b4fc:	032d      	lsls	r5, r5, #12
1000b4fe:	4023      	ands	r3, r4
1000b500:	1c1c      	adds	r4, r3, #0
1000b502:	0b2d      	lsrs	r5, r5, #12
1000b504:	4b03      	ldr	r3, [pc, #12]	; (1000b514 <__aeabi_dmul+0x520>)
1000b506:	e5d9      	b.n	1000b0bc <__aeabi_dmul+0xc8>
1000b508:	000003ff 	.word	0x000003ff
1000b50c:	feffffff 	.word	0xfeffffff
1000b510:	000007fe 	.word	0x000007fe
1000b514:	000007ff 	.word	0x000007ff
1000b518:	fffffc02 	.word	0xfffffc02
1000b51c:	0000041e 	.word	0x0000041e
1000b520:	fffffbe2 	.word	0xfffffbe2
1000b524:	0000043e 	.word	0x0000043e

1000b528 <__aeabi_dsub>:
1000b528:	b5f0      	push	{r4, r5, r6, r7, lr}
1000b52a:	464d      	mov	r5, r9
1000b52c:	4644      	mov	r4, r8
1000b52e:	465f      	mov	r7, fp
1000b530:	4656      	mov	r6, sl
1000b532:	b4f0      	push	{r4, r5, r6, r7}
1000b534:	1c0e      	adds	r6, r1, #0
1000b536:	1c11      	adds	r1, r2, #0
1000b538:	0332      	lsls	r2, r6, #12
1000b53a:	0a52      	lsrs	r2, r2, #9
1000b53c:	0f47      	lsrs	r7, r0, #29
1000b53e:	4317      	orrs	r7, r2
1000b540:	00c5      	lsls	r5, r0, #3
1000b542:	031a      	lsls	r2, r3, #12
1000b544:	0058      	lsls	r0, r3, #1
1000b546:	0fdb      	lsrs	r3, r3, #31
1000b548:	4699      	mov	r9, r3
1000b54a:	0a52      	lsrs	r2, r2, #9
1000b54c:	0f4b      	lsrs	r3, r1, #29
1000b54e:	b083      	sub	sp, #12
1000b550:	431a      	orrs	r2, r3
1000b552:	00cb      	lsls	r3, r1, #3
1000b554:	9301      	str	r3, [sp, #4]
1000b556:	4bcf      	ldr	r3, [pc, #828]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b558:	0074      	lsls	r4, r6, #1
1000b55a:	0ff6      	lsrs	r6, r6, #31
1000b55c:	0d64      	lsrs	r4, r4, #21
1000b55e:	46b0      	mov	r8, r6
1000b560:	0d40      	lsrs	r0, r0, #21
1000b562:	4298      	cmp	r0, r3
1000b564:	d100      	bne.n	1000b568 <__aeabi_dsub+0x40>
1000b566:	e0e8      	b.n	1000b73a <__aeabi_dsub+0x212>
1000b568:	2301      	movs	r3, #1
1000b56a:	4649      	mov	r1, r9
1000b56c:	4059      	eors	r1, r3
1000b56e:	1c0b      	adds	r3, r1, #0
1000b570:	429e      	cmp	r6, r3
1000b572:	d100      	bne.n	1000b576 <__aeabi_dsub+0x4e>
1000b574:	e0b1      	b.n	1000b6da <__aeabi_dsub+0x1b2>
1000b576:	1a26      	subs	r6, r4, r0
1000b578:	2e00      	cmp	r6, #0
1000b57a:	dc00      	bgt.n	1000b57e <__aeabi_dsub+0x56>
1000b57c:	e11c      	b.n	1000b7b8 <__aeabi_dsub+0x290>
1000b57e:	2800      	cmp	r0, #0
1000b580:	d142      	bne.n	1000b608 <__aeabi_dsub+0xe0>
1000b582:	1c13      	adds	r3, r2, #0
1000b584:	9901      	ldr	r1, [sp, #4]
1000b586:	430b      	orrs	r3, r1
1000b588:	d000      	beq.n	1000b58c <__aeabi_dsub+0x64>
1000b58a:	e0e6      	b.n	1000b75a <__aeabi_dsub+0x232>
1000b58c:	076b      	lsls	r3, r5, #29
1000b58e:	d100      	bne.n	1000b592 <__aeabi_dsub+0x6a>
1000b590:	e08e      	b.n	1000b6b0 <__aeabi_dsub+0x188>
1000b592:	230f      	movs	r3, #15
1000b594:	402b      	ands	r3, r5
1000b596:	2b04      	cmp	r3, #4
1000b598:	d100      	bne.n	1000b59c <__aeabi_dsub+0x74>
1000b59a:	e089      	b.n	1000b6b0 <__aeabi_dsub+0x188>
1000b59c:	1d2a      	adds	r2, r5, #4
1000b59e:	42aa      	cmp	r2, r5
1000b5a0:	41ad      	sbcs	r5, r5
1000b5a2:	2380      	movs	r3, #128	; 0x80
1000b5a4:	2601      	movs	r6, #1
1000b5a6:	4641      	mov	r1, r8
1000b5a8:	426d      	negs	r5, r5
1000b5aa:	197f      	adds	r7, r7, r5
1000b5ac:	041b      	lsls	r3, r3, #16
1000b5ae:	403b      	ands	r3, r7
1000b5b0:	400e      	ands	r6, r1
1000b5b2:	1c15      	adds	r5, r2, #0
1000b5b4:	2b00      	cmp	r3, #0
1000b5b6:	d100      	bne.n	1000b5ba <__aeabi_dsub+0x92>
1000b5b8:	e083      	b.n	1000b6c2 <__aeabi_dsub+0x19a>
1000b5ba:	4bb6      	ldr	r3, [pc, #728]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b5bc:	3401      	adds	r4, #1
1000b5be:	429c      	cmp	r4, r3
1000b5c0:	d100      	bne.n	1000b5c4 <__aeabi_dsub+0x9c>
1000b5c2:	e116      	b.n	1000b7f2 <__aeabi_dsub+0x2ca>
1000b5c4:	1c3a      	adds	r2, r7, #0
1000b5c6:	4bb4      	ldr	r3, [pc, #720]	; (1000b898 <__aeabi_dsub+0x370>)
1000b5c8:	08ed      	lsrs	r5, r5, #3
1000b5ca:	401a      	ands	r2, r3
1000b5cc:	0750      	lsls	r0, r2, #29
1000b5ce:	0564      	lsls	r4, r4, #21
1000b5d0:	0252      	lsls	r2, r2, #9
1000b5d2:	4305      	orrs	r5, r0
1000b5d4:	0b12      	lsrs	r2, r2, #12
1000b5d6:	0d64      	lsrs	r4, r4, #21
1000b5d8:	2100      	movs	r1, #0
1000b5da:	0312      	lsls	r2, r2, #12
1000b5dc:	0d0b      	lsrs	r3, r1, #20
1000b5de:	051b      	lsls	r3, r3, #20
1000b5e0:	0564      	lsls	r4, r4, #21
1000b5e2:	0b12      	lsrs	r2, r2, #12
1000b5e4:	431a      	orrs	r2, r3
1000b5e6:	0863      	lsrs	r3, r4, #1
1000b5e8:	4cac      	ldr	r4, [pc, #688]	; (1000b89c <__aeabi_dsub+0x374>)
1000b5ea:	07f6      	lsls	r6, r6, #31
1000b5ec:	4014      	ands	r4, r2
1000b5ee:	431c      	orrs	r4, r3
1000b5f0:	0064      	lsls	r4, r4, #1
1000b5f2:	0864      	lsrs	r4, r4, #1
1000b5f4:	4334      	orrs	r4, r6
1000b5f6:	1c28      	adds	r0, r5, #0
1000b5f8:	1c21      	adds	r1, r4, #0
1000b5fa:	b003      	add	sp, #12
1000b5fc:	bc3c      	pop	{r2, r3, r4, r5}
1000b5fe:	4690      	mov	r8, r2
1000b600:	4699      	mov	r9, r3
1000b602:	46a2      	mov	sl, r4
1000b604:	46ab      	mov	fp, r5
1000b606:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000b608:	4ba2      	ldr	r3, [pc, #648]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b60a:	429c      	cmp	r4, r3
1000b60c:	d0be      	beq.n	1000b58c <__aeabi_dsub+0x64>
1000b60e:	2380      	movs	r3, #128	; 0x80
1000b610:	041b      	lsls	r3, r3, #16
1000b612:	431a      	orrs	r2, r3
1000b614:	2e38      	cmp	r6, #56	; 0x38
1000b616:	dd00      	ble.n	1000b61a <__aeabi_dsub+0xf2>
1000b618:	e103      	b.n	1000b822 <__aeabi_dsub+0x2fa>
1000b61a:	2e1f      	cmp	r6, #31
1000b61c:	dd00      	ble.n	1000b620 <__aeabi_dsub+0xf8>
1000b61e:	e13f      	b.n	1000b8a0 <__aeabi_dsub+0x378>
1000b620:	2020      	movs	r0, #32
1000b622:	1b83      	subs	r3, r0, r6
1000b624:	4699      	mov	r9, r3
1000b626:	1c13      	adds	r3, r2, #0
1000b628:	4649      	mov	r1, r9
1000b62a:	408b      	lsls	r3, r1
1000b62c:	469c      	mov	ip, r3
1000b62e:	9b01      	ldr	r3, [sp, #4]
1000b630:	4660      	mov	r0, ip
1000b632:	40f3      	lsrs	r3, r6
1000b634:	4303      	orrs	r3, r0
1000b636:	9801      	ldr	r0, [sp, #4]
1000b638:	40f2      	lsrs	r2, r6
1000b63a:	4088      	lsls	r0, r1
1000b63c:	1c01      	adds	r1, r0, #0
1000b63e:	1e48      	subs	r0, r1, #1
1000b640:	4181      	sbcs	r1, r0
1000b642:	430b      	orrs	r3, r1
1000b644:	1aeb      	subs	r3, r5, r3
1000b646:	429d      	cmp	r5, r3
1000b648:	4180      	sbcs	r0, r0
1000b64a:	1c1d      	adds	r5, r3, #0
1000b64c:	1aba      	subs	r2, r7, r2
1000b64e:	4240      	negs	r0, r0
1000b650:	1a17      	subs	r7, r2, r0
1000b652:	023b      	lsls	r3, r7, #8
1000b654:	d400      	bmi.n	1000b658 <__aeabi_dsub+0x130>
1000b656:	e0a8      	b.n	1000b7aa <__aeabi_dsub+0x282>
1000b658:	027a      	lsls	r2, r7, #9
1000b65a:	0a56      	lsrs	r6, r2, #9
1000b65c:	2e00      	cmp	r6, #0
1000b65e:	d100      	bne.n	1000b662 <__aeabi_dsub+0x13a>
1000b660:	e0ca      	b.n	1000b7f8 <__aeabi_dsub+0x2d0>
1000b662:	1c30      	adds	r0, r6, #0
1000b664:	f000 fbbe 	bl	1000bde4 <__clzsi2>
1000b668:	1c03      	adds	r3, r0, #0
1000b66a:	3b08      	subs	r3, #8
1000b66c:	2b1f      	cmp	r3, #31
1000b66e:	dd00      	ble.n	1000b672 <__aeabi_dsub+0x14a>
1000b670:	e0cb      	b.n	1000b80a <__aeabi_dsub+0x2e2>
1000b672:	2228      	movs	r2, #40	; 0x28
1000b674:	1c29      	adds	r1, r5, #0
1000b676:	1a12      	subs	r2, r2, r0
1000b678:	40d1      	lsrs	r1, r2
1000b67a:	409e      	lsls	r6, r3
1000b67c:	1c0a      	adds	r2, r1, #0
1000b67e:	409d      	lsls	r5, r3
1000b680:	4332      	orrs	r2, r6
1000b682:	429c      	cmp	r4, r3
1000b684:	dd00      	ble.n	1000b688 <__aeabi_dsub+0x160>
1000b686:	e0c8      	b.n	1000b81a <__aeabi_dsub+0x2f2>
1000b688:	1b1c      	subs	r4, r3, r4
1000b68a:	1c67      	adds	r7, r4, #1
1000b68c:	2f1f      	cmp	r7, #31
1000b68e:	dd00      	ble.n	1000b692 <__aeabi_dsub+0x16a>
1000b690:	e0ed      	b.n	1000b86e <__aeabi_dsub+0x346>
1000b692:	231f      	movs	r3, #31
1000b694:	1c29      	adds	r1, r5, #0
1000b696:	1b1c      	subs	r4, r3, r4
1000b698:	1c13      	adds	r3, r2, #0
1000b69a:	40a5      	lsls	r5, r4
1000b69c:	40a3      	lsls	r3, r4
1000b69e:	40f9      	lsrs	r1, r7
1000b6a0:	1e6c      	subs	r4, r5, #1
1000b6a2:	41a5      	sbcs	r5, r4
1000b6a4:	40fa      	lsrs	r2, r7
1000b6a6:	4319      	orrs	r1, r3
1000b6a8:	430d      	orrs	r5, r1
1000b6aa:	1c17      	adds	r7, r2, #0
1000b6ac:	2400      	movs	r4, #0
1000b6ae:	e76d      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b6b0:	2380      	movs	r3, #128	; 0x80
1000b6b2:	2601      	movs	r6, #1
1000b6b4:	4642      	mov	r2, r8
1000b6b6:	041b      	lsls	r3, r3, #16
1000b6b8:	403b      	ands	r3, r7
1000b6ba:	4016      	ands	r6, r2
1000b6bc:	2b00      	cmp	r3, #0
1000b6be:	d000      	beq.n	1000b6c2 <__aeabi_dsub+0x19a>
1000b6c0:	e77b      	b.n	1000b5ba <__aeabi_dsub+0x92>
1000b6c2:	4b74      	ldr	r3, [pc, #464]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b6c4:	08ed      	lsrs	r5, r5, #3
1000b6c6:	0778      	lsls	r0, r7, #29
1000b6c8:	4305      	orrs	r5, r0
1000b6ca:	08fa      	lsrs	r2, r7, #3
1000b6cc:	429c      	cmp	r4, r3
1000b6ce:	d03b      	beq.n	1000b748 <__aeabi_dsub+0x220>
1000b6d0:	0312      	lsls	r2, r2, #12
1000b6d2:	0564      	lsls	r4, r4, #21
1000b6d4:	0b12      	lsrs	r2, r2, #12
1000b6d6:	0d64      	lsrs	r4, r4, #21
1000b6d8:	e77e      	b.n	1000b5d8 <__aeabi_dsub+0xb0>
1000b6da:	1a23      	subs	r3, r4, r0
1000b6dc:	469a      	mov	sl, r3
1000b6de:	2b00      	cmp	r3, #0
1000b6e0:	dc00      	bgt.n	1000b6e4 <__aeabi_dsub+0x1bc>
1000b6e2:	e0a5      	b.n	1000b830 <__aeabi_dsub+0x308>
1000b6e4:	2800      	cmp	r0, #0
1000b6e6:	d044      	beq.n	1000b772 <__aeabi_dsub+0x24a>
1000b6e8:	486a      	ldr	r0, [pc, #424]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b6ea:	4284      	cmp	r4, r0
1000b6ec:	d100      	bne.n	1000b6f0 <__aeabi_dsub+0x1c8>
1000b6ee:	e74d      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b6f0:	2080      	movs	r0, #128	; 0x80
1000b6f2:	0400      	lsls	r0, r0, #16
1000b6f4:	4302      	orrs	r2, r0
1000b6f6:	4653      	mov	r3, sl
1000b6f8:	2b38      	cmp	r3, #56	; 0x38
1000b6fa:	dc00      	bgt.n	1000b6fe <__aeabi_dsub+0x1d6>
1000b6fc:	e11c      	b.n	1000b938 <__aeabi_dsub+0x410>
1000b6fe:	9b01      	ldr	r3, [sp, #4]
1000b700:	431a      	orrs	r2, r3
1000b702:	1e51      	subs	r1, r2, #1
1000b704:	418a      	sbcs	r2, r1
1000b706:	b2d1      	uxtb	r1, r2
1000b708:	2200      	movs	r2, #0
1000b70a:	1949      	adds	r1, r1, r5
1000b70c:	42a9      	cmp	r1, r5
1000b70e:	4180      	sbcs	r0, r0
1000b710:	1c0d      	adds	r5, r1, #0
1000b712:	19d2      	adds	r2, r2, r7
1000b714:	4240      	negs	r0, r0
1000b716:	1817      	adds	r7, r2, r0
1000b718:	023b      	lsls	r3, r7, #8
1000b71a:	d546      	bpl.n	1000b7aa <__aeabi_dsub+0x282>
1000b71c:	4b5d      	ldr	r3, [pc, #372]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b71e:	3401      	adds	r4, #1
1000b720:	429c      	cmp	r4, r3
1000b722:	d100      	bne.n	1000b726 <__aeabi_dsub+0x1fe>
1000b724:	e169      	b.n	1000b9fa <__aeabi_dsub+0x4d2>
1000b726:	2001      	movs	r0, #1
1000b728:	4a5b      	ldr	r2, [pc, #364]	; (1000b898 <__aeabi_dsub+0x370>)
1000b72a:	086b      	lsrs	r3, r5, #1
1000b72c:	403a      	ands	r2, r7
1000b72e:	4028      	ands	r0, r5
1000b730:	4318      	orrs	r0, r3
1000b732:	07d5      	lsls	r5, r2, #31
1000b734:	4305      	orrs	r5, r0
1000b736:	0857      	lsrs	r7, r2, #1
1000b738:	e728      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b73a:	1c13      	adds	r3, r2, #0
1000b73c:	9901      	ldr	r1, [sp, #4]
1000b73e:	430b      	orrs	r3, r1
1000b740:	d100      	bne.n	1000b744 <__aeabi_dsub+0x21c>
1000b742:	e711      	b.n	1000b568 <__aeabi_dsub+0x40>
1000b744:	464b      	mov	r3, r9
1000b746:	e713      	b.n	1000b570 <__aeabi_dsub+0x48>
1000b748:	1c2b      	adds	r3, r5, #0
1000b74a:	4313      	orrs	r3, r2
1000b74c:	d051      	beq.n	1000b7f2 <__aeabi_dsub+0x2ca>
1000b74e:	2380      	movs	r3, #128	; 0x80
1000b750:	031b      	lsls	r3, r3, #12
1000b752:	431a      	orrs	r2, r3
1000b754:	0312      	lsls	r2, r2, #12
1000b756:	0b12      	lsrs	r2, r2, #12
1000b758:	e73e      	b.n	1000b5d8 <__aeabi_dsub+0xb0>
1000b75a:	3e01      	subs	r6, #1
1000b75c:	2e00      	cmp	r6, #0
1000b75e:	d000      	beq.n	1000b762 <__aeabi_dsub+0x23a>
1000b760:	e080      	b.n	1000b864 <__aeabi_dsub+0x33c>
1000b762:	1a69      	subs	r1, r5, r1
1000b764:	428d      	cmp	r5, r1
1000b766:	419b      	sbcs	r3, r3
1000b768:	1aba      	subs	r2, r7, r2
1000b76a:	425b      	negs	r3, r3
1000b76c:	1ad7      	subs	r7, r2, r3
1000b76e:	1c0d      	adds	r5, r1, #0
1000b770:	e76f      	b.n	1000b652 <__aeabi_dsub+0x12a>
1000b772:	1c10      	adds	r0, r2, #0
1000b774:	9b01      	ldr	r3, [sp, #4]
1000b776:	4318      	orrs	r0, r3
1000b778:	d100      	bne.n	1000b77c <__aeabi_dsub+0x254>
1000b77a:	e707      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b77c:	2301      	movs	r3, #1
1000b77e:	425b      	negs	r3, r3
1000b780:	469c      	mov	ip, r3
1000b782:	44e2      	add	sl, ip
1000b784:	4653      	mov	r3, sl
1000b786:	2b00      	cmp	r3, #0
1000b788:	d000      	beq.n	1000b78c <__aeabi_dsub+0x264>
1000b78a:	e102      	b.n	1000b992 <__aeabi_dsub+0x46a>
1000b78c:	9b01      	ldr	r3, [sp, #4]
1000b78e:	19d2      	adds	r2, r2, r7
1000b790:	1959      	adds	r1, r3, r5
1000b792:	42a9      	cmp	r1, r5
1000b794:	419b      	sbcs	r3, r3
1000b796:	425b      	negs	r3, r3
1000b798:	18d7      	adds	r7, r2, r3
1000b79a:	1c0d      	adds	r5, r1, #0
1000b79c:	e7bc      	b.n	1000b718 <__aeabi_dsub+0x1f0>
1000b79e:	4663      	mov	r3, ip
1000b7a0:	4303      	orrs	r3, r0
1000b7a2:	d100      	bne.n	1000b7a6 <__aeabi_dsub+0x27e>
1000b7a4:	e128      	b.n	1000b9f8 <__aeabi_dsub+0x4d0>
1000b7a6:	1c07      	adds	r7, r0, #0
1000b7a8:	4665      	mov	r5, ip
1000b7aa:	076b      	lsls	r3, r5, #29
1000b7ac:	d000      	beq.n	1000b7b0 <__aeabi_dsub+0x288>
1000b7ae:	e6f0      	b.n	1000b592 <__aeabi_dsub+0x6a>
1000b7b0:	2601      	movs	r6, #1
1000b7b2:	4643      	mov	r3, r8
1000b7b4:	401e      	ands	r6, r3
1000b7b6:	e784      	b.n	1000b6c2 <__aeabi_dsub+0x19a>
1000b7b8:	2e00      	cmp	r6, #0
1000b7ba:	d000      	beq.n	1000b7be <__aeabi_dsub+0x296>
1000b7bc:	e081      	b.n	1000b8c2 <__aeabi_dsub+0x39a>
1000b7be:	1c60      	adds	r0, r4, #1
1000b7c0:	0540      	lsls	r0, r0, #21
1000b7c2:	0d40      	lsrs	r0, r0, #21
1000b7c4:	2801      	cmp	r0, #1
1000b7c6:	dc00      	bgt.n	1000b7ca <__aeabi_dsub+0x2a2>
1000b7c8:	e107      	b.n	1000b9da <__aeabi_dsub+0x4b2>
1000b7ca:	9901      	ldr	r1, [sp, #4]
1000b7cc:	1a68      	subs	r0, r5, r1
1000b7ce:	4684      	mov	ip, r0
1000b7d0:	4565      	cmp	r5, ip
1000b7d2:	41b6      	sbcs	r6, r6
1000b7d4:	1ab8      	subs	r0, r7, r2
1000b7d6:	4276      	negs	r6, r6
1000b7d8:	1b86      	subs	r6, r0, r6
1000b7da:	0230      	lsls	r0, r6, #8
1000b7dc:	d400      	bmi.n	1000b7e0 <__aeabi_dsub+0x2b8>
1000b7de:	e0a1      	b.n	1000b924 <__aeabi_dsub+0x3fc>
1000b7e0:	468c      	mov	ip, r1
1000b7e2:	1b4d      	subs	r5, r1, r5
1000b7e4:	45ac      	cmp	ip, r5
1000b7e6:	4189      	sbcs	r1, r1
1000b7e8:	1bd2      	subs	r2, r2, r7
1000b7ea:	4249      	negs	r1, r1
1000b7ec:	1a56      	subs	r6, r2, r1
1000b7ee:	4698      	mov	r8, r3
1000b7f0:	e734      	b.n	1000b65c <__aeabi_dsub+0x134>
1000b7f2:	2200      	movs	r2, #0
1000b7f4:	2500      	movs	r5, #0
1000b7f6:	e6ef      	b.n	1000b5d8 <__aeabi_dsub+0xb0>
1000b7f8:	1c28      	adds	r0, r5, #0
1000b7fa:	f000 faf3 	bl	1000bde4 <__clzsi2>
1000b7fe:	3020      	adds	r0, #32
1000b800:	1c03      	adds	r3, r0, #0
1000b802:	3b08      	subs	r3, #8
1000b804:	2b1f      	cmp	r3, #31
1000b806:	dc00      	bgt.n	1000b80a <__aeabi_dsub+0x2e2>
1000b808:	e733      	b.n	1000b672 <__aeabi_dsub+0x14a>
1000b80a:	1c02      	adds	r2, r0, #0
1000b80c:	3a28      	subs	r2, #40	; 0x28
1000b80e:	4095      	lsls	r5, r2
1000b810:	1c2a      	adds	r2, r5, #0
1000b812:	2500      	movs	r5, #0
1000b814:	429c      	cmp	r4, r3
1000b816:	dc00      	bgt.n	1000b81a <__aeabi_dsub+0x2f2>
1000b818:	e736      	b.n	1000b688 <__aeabi_dsub+0x160>
1000b81a:	4f1f      	ldr	r7, [pc, #124]	; (1000b898 <__aeabi_dsub+0x370>)
1000b81c:	1ae4      	subs	r4, r4, r3
1000b81e:	4017      	ands	r7, r2
1000b820:	e6b4      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b822:	9b01      	ldr	r3, [sp, #4]
1000b824:	431a      	orrs	r2, r3
1000b826:	1e51      	subs	r1, r2, #1
1000b828:	418a      	sbcs	r2, r1
1000b82a:	b2d3      	uxtb	r3, r2
1000b82c:	2200      	movs	r2, #0
1000b82e:	e709      	b.n	1000b644 <__aeabi_dsub+0x11c>
1000b830:	2b00      	cmp	r3, #0
1000b832:	d000      	beq.n	1000b836 <__aeabi_dsub+0x30e>
1000b834:	e101      	b.n	1000ba3a <__aeabi_dsub+0x512>
1000b836:	1c60      	adds	r0, r4, #1
1000b838:	0543      	lsls	r3, r0, #21
1000b83a:	0d5b      	lsrs	r3, r3, #21
1000b83c:	2b01      	cmp	r3, #1
1000b83e:	dc00      	bgt.n	1000b842 <__aeabi_dsub+0x31a>
1000b840:	e0b0      	b.n	1000b9a4 <__aeabi_dsub+0x47c>
1000b842:	4b14      	ldr	r3, [pc, #80]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b844:	4298      	cmp	r0, r3
1000b846:	d100      	bne.n	1000b84a <__aeabi_dsub+0x322>
1000b848:	e11e      	b.n	1000ba88 <__aeabi_dsub+0x560>
1000b84a:	9b01      	ldr	r3, [sp, #4]
1000b84c:	19d2      	adds	r2, r2, r7
1000b84e:	1959      	adds	r1, r3, r5
1000b850:	42a9      	cmp	r1, r5
1000b852:	419b      	sbcs	r3, r3
1000b854:	425b      	negs	r3, r3
1000b856:	18d2      	adds	r2, r2, r3
1000b858:	0849      	lsrs	r1, r1, #1
1000b85a:	07d5      	lsls	r5, r2, #31
1000b85c:	430d      	orrs	r5, r1
1000b85e:	0857      	lsrs	r7, r2, #1
1000b860:	1c04      	adds	r4, r0, #0
1000b862:	e693      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b864:	4b0b      	ldr	r3, [pc, #44]	; (1000b894 <__aeabi_dsub+0x36c>)
1000b866:	429c      	cmp	r4, r3
1000b868:	d000      	beq.n	1000b86c <__aeabi_dsub+0x344>
1000b86a:	e6d3      	b.n	1000b614 <__aeabi_dsub+0xec>
1000b86c:	e68e      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b86e:	1c21      	adds	r1, r4, #0
1000b870:	1c13      	adds	r3, r2, #0
1000b872:	391f      	subs	r1, #31
1000b874:	40cb      	lsrs	r3, r1
1000b876:	1c19      	adds	r1, r3, #0
1000b878:	2f20      	cmp	r7, #32
1000b87a:	d100      	bne.n	1000b87e <__aeabi_dsub+0x356>
1000b87c:	e08e      	b.n	1000b99c <__aeabi_dsub+0x474>
1000b87e:	233f      	movs	r3, #63	; 0x3f
1000b880:	1b1c      	subs	r4, r3, r4
1000b882:	40a2      	lsls	r2, r4
1000b884:	4315      	orrs	r5, r2
1000b886:	1e6a      	subs	r2, r5, #1
1000b888:	4195      	sbcs	r5, r2
1000b88a:	2700      	movs	r7, #0
1000b88c:	430d      	orrs	r5, r1
1000b88e:	2400      	movs	r4, #0
1000b890:	e78b      	b.n	1000b7aa <__aeabi_dsub+0x282>
1000b892:	46c0      	nop			; (mov r8, r8)
1000b894:	000007ff 	.word	0x000007ff
1000b898:	ff7fffff 	.word	0xff7fffff
1000b89c:	800fffff 	.word	0x800fffff
1000b8a0:	1c33      	adds	r3, r6, #0
1000b8a2:	1c10      	adds	r0, r2, #0
1000b8a4:	3b20      	subs	r3, #32
1000b8a6:	40d8      	lsrs	r0, r3
1000b8a8:	2e20      	cmp	r6, #32
1000b8aa:	d079      	beq.n	1000b9a0 <__aeabi_dsub+0x478>
1000b8ac:	2340      	movs	r3, #64	; 0x40
1000b8ae:	1b9b      	subs	r3, r3, r6
1000b8b0:	409a      	lsls	r2, r3
1000b8b2:	1c13      	adds	r3, r2, #0
1000b8b4:	9a01      	ldr	r2, [sp, #4]
1000b8b6:	4313      	orrs	r3, r2
1000b8b8:	1e59      	subs	r1, r3, #1
1000b8ba:	418b      	sbcs	r3, r1
1000b8bc:	2200      	movs	r2, #0
1000b8be:	4303      	orrs	r3, r0
1000b8c0:	e6c0      	b.n	1000b644 <__aeabi_dsub+0x11c>
1000b8c2:	2c00      	cmp	r4, #0
1000b8c4:	d053      	beq.n	1000b96e <__aeabi_dsub+0x446>
1000b8c6:	4cc7      	ldr	r4, [pc, #796]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000b8c8:	42a0      	cmp	r0, r4
1000b8ca:	d100      	bne.n	1000b8ce <__aeabi_dsub+0x3a6>
1000b8cc:	e0b0      	b.n	1000ba30 <__aeabi_dsub+0x508>
1000b8ce:	2480      	movs	r4, #128	; 0x80
1000b8d0:	4271      	negs	r1, r6
1000b8d2:	4689      	mov	r9, r1
1000b8d4:	0424      	lsls	r4, r4, #16
1000b8d6:	4327      	orrs	r7, r4
1000b8d8:	4649      	mov	r1, r9
1000b8da:	2938      	cmp	r1, #56	; 0x38
1000b8dc:	dd00      	ble.n	1000b8e0 <__aeabi_dsub+0x3b8>
1000b8de:	e0cd      	b.n	1000ba7c <__aeabi_dsub+0x554>
1000b8e0:	291f      	cmp	r1, #31
1000b8e2:	dd00      	ble.n	1000b8e6 <__aeabi_dsub+0x3be>
1000b8e4:	e159      	b.n	1000bb9a <__aeabi_dsub+0x672>
1000b8e6:	2420      	movs	r4, #32
1000b8e8:	1c3e      	adds	r6, r7, #0
1000b8ea:	1a61      	subs	r1, r4, r1
1000b8ec:	408e      	lsls	r6, r1
1000b8ee:	468a      	mov	sl, r1
1000b8f0:	46b0      	mov	r8, r6
1000b8f2:	4649      	mov	r1, r9
1000b8f4:	1c2e      	adds	r6, r5, #0
1000b8f6:	40ce      	lsrs	r6, r1
1000b8f8:	4651      	mov	r1, sl
1000b8fa:	46b4      	mov	ip, r6
1000b8fc:	408d      	lsls	r5, r1
1000b8fe:	4664      	mov	r4, ip
1000b900:	4646      	mov	r6, r8
1000b902:	4649      	mov	r1, r9
1000b904:	4326      	orrs	r6, r4
1000b906:	1e6c      	subs	r4, r5, #1
1000b908:	41a5      	sbcs	r5, r4
1000b90a:	40cf      	lsrs	r7, r1
1000b90c:	4335      	orrs	r5, r6
1000b90e:	9901      	ldr	r1, [sp, #4]
1000b910:	1bd7      	subs	r7, r2, r7
1000b912:	468c      	mov	ip, r1
1000b914:	1b4d      	subs	r5, r1, r5
1000b916:	45ac      	cmp	ip, r5
1000b918:	4192      	sbcs	r2, r2
1000b91a:	4252      	negs	r2, r2
1000b91c:	1abf      	subs	r7, r7, r2
1000b91e:	1c04      	adds	r4, r0, #0
1000b920:	4698      	mov	r8, r3
1000b922:	e696      	b.n	1000b652 <__aeabi_dsub+0x12a>
1000b924:	4663      	mov	r3, ip
1000b926:	4665      	mov	r5, ip
1000b928:	4333      	orrs	r3, r6
1000b92a:	d000      	beq.n	1000b92e <__aeabi_dsub+0x406>
1000b92c:	e696      	b.n	1000b65c <__aeabi_dsub+0x134>
1000b92e:	2600      	movs	r6, #0
1000b930:	2700      	movs	r7, #0
1000b932:	2400      	movs	r4, #0
1000b934:	2500      	movs	r5, #0
1000b936:	e6c4      	b.n	1000b6c2 <__aeabi_dsub+0x19a>
1000b938:	2b1f      	cmp	r3, #31
1000b93a:	dc61      	bgt.n	1000ba00 <__aeabi_dsub+0x4d8>
1000b93c:	2020      	movs	r0, #32
1000b93e:	1ac3      	subs	r3, r0, r3
1000b940:	469b      	mov	fp, r3
1000b942:	1c13      	adds	r3, r2, #0
1000b944:	4659      	mov	r1, fp
1000b946:	408b      	lsls	r3, r1
1000b948:	4651      	mov	r1, sl
1000b94a:	4699      	mov	r9, r3
1000b94c:	9b01      	ldr	r3, [sp, #4]
1000b94e:	40cb      	lsrs	r3, r1
1000b950:	469c      	mov	ip, r3
1000b952:	464b      	mov	r3, r9
1000b954:	4660      	mov	r0, ip
1000b956:	4303      	orrs	r3, r0
1000b958:	469c      	mov	ip, r3
1000b95a:	465b      	mov	r3, fp
1000b95c:	9901      	ldr	r1, [sp, #4]
1000b95e:	4099      	lsls	r1, r3
1000b960:	4663      	mov	r3, ip
1000b962:	1e48      	subs	r0, r1, #1
1000b964:	4181      	sbcs	r1, r0
1000b966:	4319      	orrs	r1, r3
1000b968:	4653      	mov	r3, sl
1000b96a:	40da      	lsrs	r2, r3
1000b96c:	e6cd      	b.n	1000b70a <__aeabi_dsub+0x1e2>
1000b96e:	1c3c      	adds	r4, r7, #0
1000b970:	432c      	orrs	r4, r5
1000b972:	d05d      	beq.n	1000ba30 <__aeabi_dsub+0x508>
1000b974:	43f1      	mvns	r1, r6
1000b976:	4689      	mov	r9, r1
1000b978:	2900      	cmp	r1, #0
1000b97a:	d155      	bne.n	1000ba28 <__aeabi_dsub+0x500>
1000b97c:	9901      	ldr	r1, [sp, #4]
1000b97e:	1bd2      	subs	r2, r2, r7
1000b980:	468c      	mov	ip, r1
1000b982:	1b4d      	subs	r5, r1, r5
1000b984:	45ac      	cmp	ip, r5
1000b986:	4189      	sbcs	r1, r1
1000b988:	4249      	negs	r1, r1
1000b98a:	1a57      	subs	r7, r2, r1
1000b98c:	1c04      	adds	r4, r0, #0
1000b98e:	4698      	mov	r8, r3
1000b990:	e65f      	b.n	1000b652 <__aeabi_dsub+0x12a>
1000b992:	4894      	ldr	r0, [pc, #592]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000b994:	4284      	cmp	r4, r0
1000b996:	d000      	beq.n	1000b99a <__aeabi_dsub+0x472>
1000b998:	e6ad      	b.n	1000b6f6 <__aeabi_dsub+0x1ce>
1000b99a:	e5f7      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b99c:	2200      	movs	r2, #0
1000b99e:	e771      	b.n	1000b884 <__aeabi_dsub+0x35c>
1000b9a0:	2300      	movs	r3, #0
1000b9a2:	e787      	b.n	1000b8b4 <__aeabi_dsub+0x38c>
1000b9a4:	1c3b      	adds	r3, r7, #0
1000b9a6:	432b      	orrs	r3, r5
1000b9a8:	2c00      	cmp	r4, #0
1000b9aa:	d000      	beq.n	1000b9ae <__aeabi_dsub+0x486>
1000b9ac:	e0da      	b.n	1000bb64 <__aeabi_dsub+0x63c>
1000b9ae:	2b00      	cmp	r3, #0
1000b9b0:	d100      	bne.n	1000b9b4 <__aeabi_dsub+0x48c>
1000b9b2:	e113      	b.n	1000bbdc <__aeabi_dsub+0x6b4>
1000b9b4:	1c13      	adds	r3, r2, #0
1000b9b6:	9901      	ldr	r1, [sp, #4]
1000b9b8:	430b      	orrs	r3, r1
1000b9ba:	d100      	bne.n	1000b9be <__aeabi_dsub+0x496>
1000b9bc:	e5e6      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b9be:	1949      	adds	r1, r1, r5
1000b9c0:	42a9      	cmp	r1, r5
1000b9c2:	419b      	sbcs	r3, r3
1000b9c4:	19d2      	adds	r2, r2, r7
1000b9c6:	425b      	negs	r3, r3
1000b9c8:	18d7      	adds	r7, r2, r3
1000b9ca:	023b      	lsls	r3, r7, #8
1000b9cc:	d400      	bmi.n	1000b9d0 <__aeabi_dsub+0x4a8>
1000b9ce:	e121      	b.n	1000bc14 <__aeabi_dsub+0x6ec>
1000b9d0:	4b85      	ldr	r3, [pc, #532]	; (1000bbe8 <__aeabi_dsub+0x6c0>)
1000b9d2:	1c0d      	adds	r5, r1, #0
1000b9d4:	401f      	ands	r7, r3
1000b9d6:	1c04      	adds	r4, r0, #0
1000b9d8:	e5d8      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b9da:	1c38      	adds	r0, r7, #0
1000b9dc:	4328      	orrs	r0, r5
1000b9de:	2c00      	cmp	r4, #0
1000b9e0:	d140      	bne.n	1000ba64 <__aeabi_dsub+0x53c>
1000b9e2:	2800      	cmp	r0, #0
1000b9e4:	d000      	beq.n	1000b9e8 <__aeabi_dsub+0x4c0>
1000b9e6:	e083      	b.n	1000baf0 <__aeabi_dsub+0x5c8>
1000b9e8:	1c10      	adds	r0, r2, #0
1000b9ea:	9901      	ldr	r1, [sp, #4]
1000b9ec:	4308      	orrs	r0, r1
1000b9ee:	d003      	beq.n	1000b9f8 <__aeabi_dsub+0x4d0>
1000b9f0:	1c17      	adds	r7, r2, #0
1000b9f2:	1c0d      	adds	r5, r1, #0
1000b9f4:	4698      	mov	r8, r3
1000b9f6:	e5c9      	b.n	1000b58c <__aeabi_dsub+0x64>
1000b9f8:	2600      	movs	r6, #0
1000b9fa:	2700      	movs	r7, #0
1000b9fc:	2500      	movs	r5, #0
1000b9fe:	e660      	b.n	1000b6c2 <__aeabi_dsub+0x19a>
1000ba00:	4650      	mov	r0, sl
1000ba02:	1c13      	adds	r3, r2, #0
1000ba04:	3820      	subs	r0, #32
1000ba06:	40c3      	lsrs	r3, r0
1000ba08:	1c18      	adds	r0, r3, #0
1000ba0a:	4653      	mov	r3, sl
1000ba0c:	2b20      	cmp	r3, #32
1000ba0e:	d100      	bne.n	1000ba12 <__aeabi_dsub+0x4ea>
1000ba10:	e0c1      	b.n	1000bb96 <__aeabi_dsub+0x66e>
1000ba12:	2340      	movs	r3, #64	; 0x40
1000ba14:	4651      	mov	r1, sl
1000ba16:	1a5b      	subs	r3, r3, r1
1000ba18:	409a      	lsls	r2, r3
1000ba1a:	9901      	ldr	r1, [sp, #4]
1000ba1c:	4311      	orrs	r1, r2
1000ba1e:	1e4a      	subs	r2, r1, #1
1000ba20:	4191      	sbcs	r1, r2
1000ba22:	2200      	movs	r2, #0
1000ba24:	4301      	orrs	r1, r0
1000ba26:	e670      	b.n	1000b70a <__aeabi_dsub+0x1e2>
1000ba28:	4c6e      	ldr	r4, [pc, #440]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000ba2a:	42a0      	cmp	r0, r4
1000ba2c:	d000      	beq.n	1000ba30 <__aeabi_dsub+0x508>
1000ba2e:	e753      	b.n	1000b8d8 <__aeabi_dsub+0x3b0>
1000ba30:	1c17      	adds	r7, r2, #0
1000ba32:	9d01      	ldr	r5, [sp, #4]
1000ba34:	1c04      	adds	r4, r0, #0
1000ba36:	4698      	mov	r8, r3
1000ba38:	e5a8      	b.n	1000b58c <__aeabi_dsub+0x64>
1000ba3a:	2c00      	cmp	r4, #0
1000ba3c:	d128      	bne.n	1000ba90 <__aeabi_dsub+0x568>
1000ba3e:	1c3c      	adds	r4, r7, #0
1000ba40:	432c      	orrs	r4, r5
1000ba42:	d100      	bne.n	1000ba46 <__aeabi_dsub+0x51e>
1000ba44:	e08a      	b.n	1000bb5c <__aeabi_dsub+0x634>
1000ba46:	43db      	mvns	r3, r3
1000ba48:	469a      	mov	sl, r3
1000ba4a:	2b00      	cmp	r3, #0
1000ba4c:	d000      	beq.n	1000ba50 <__aeabi_dsub+0x528>
1000ba4e:	e082      	b.n	1000bb56 <__aeabi_dsub+0x62e>
1000ba50:	9b01      	ldr	r3, [sp, #4]
1000ba52:	19d2      	adds	r2, r2, r7
1000ba54:	469c      	mov	ip, r3
1000ba56:	4465      	add	r5, ip
1000ba58:	429d      	cmp	r5, r3
1000ba5a:	4189      	sbcs	r1, r1
1000ba5c:	4249      	negs	r1, r1
1000ba5e:	1857      	adds	r7, r2, r1
1000ba60:	1c04      	adds	r4, r0, #0
1000ba62:	e659      	b.n	1000b718 <__aeabi_dsub+0x1f0>
1000ba64:	2800      	cmp	r0, #0
1000ba66:	d15b      	bne.n	1000bb20 <__aeabi_dsub+0x5f8>
1000ba68:	1c10      	adds	r0, r2, #0
1000ba6a:	9901      	ldr	r1, [sp, #4]
1000ba6c:	4308      	orrs	r0, r1
1000ba6e:	d100      	bne.n	1000ba72 <__aeabi_dsub+0x54a>
1000ba70:	e0a4      	b.n	1000bbbc <__aeabi_dsub+0x694>
1000ba72:	1c17      	adds	r7, r2, #0
1000ba74:	1c0d      	adds	r5, r1, #0
1000ba76:	4698      	mov	r8, r3
1000ba78:	4c5a      	ldr	r4, [pc, #360]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000ba7a:	e587      	b.n	1000b58c <__aeabi_dsub+0x64>
1000ba7c:	433d      	orrs	r5, r7
1000ba7e:	1e6f      	subs	r7, r5, #1
1000ba80:	41bd      	sbcs	r5, r7
1000ba82:	2700      	movs	r7, #0
1000ba84:	b2ed      	uxtb	r5, r5
1000ba86:	e742      	b.n	1000b90e <__aeabi_dsub+0x3e6>
1000ba88:	1c04      	adds	r4, r0, #0
1000ba8a:	2700      	movs	r7, #0
1000ba8c:	2500      	movs	r5, #0
1000ba8e:	e618      	b.n	1000b6c2 <__aeabi_dsub+0x19a>
1000ba90:	4c54      	ldr	r4, [pc, #336]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000ba92:	42a0      	cmp	r0, r4
1000ba94:	d062      	beq.n	1000bb5c <__aeabi_dsub+0x634>
1000ba96:	4653      	mov	r3, sl
1000ba98:	2480      	movs	r4, #128	; 0x80
1000ba9a:	425b      	negs	r3, r3
1000ba9c:	469a      	mov	sl, r3
1000ba9e:	0424      	lsls	r4, r4, #16
1000baa0:	4327      	orrs	r7, r4
1000baa2:	4653      	mov	r3, sl
1000baa4:	2b38      	cmp	r3, #56	; 0x38
1000baa6:	dd00      	ble.n	1000baaa <__aeabi_dsub+0x582>
1000baa8:	e08e      	b.n	1000bbc8 <__aeabi_dsub+0x6a0>
1000baaa:	2b1f      	cmp	r3, #31
1000baac:	dd00      	ble.n	1000bab0 <__aeabi_dsub+0x588>
1000baae:	e09d      	b.n	1000bbec <__aeabi_dsub+0x6c4>
1000bab0:	2420      	movs	r4, #32
1000bab2:	1ae3      	subs	r3, r4, r3
1000bab4:	469b      	mov	fp, r3
1000bab6:	1c3b      	adds	r3, r7, #0
1000bab8:	4659      	mov	r1, fp
1000baba:	408b      	lsls	r3, r1
1000babc:	4651      	mov	r1, sl
1000babe:	4699      	mov	r9, r3
1000bac0:	1c2b      	adds	r3, r5, #0
1000bac2:	40cb      	lsrs	r3, r1
1000bac4:	469c      	mov	ip, r3
1000bac6:	464b      	mov	r3, r9
1000bac8:	4664      	mov	r4, ip
1000baca:	4323      	orrs	r3, r4
1000bacc:	469c      	mov	ip, r3
1000bace:	465b      	mov	r3, fp
1000bad0:	409d      	lsls	r5, r3
1000bad2:	4663      	mov	r3, ip
1000bad4:	1e6c      	subs	r4, r5, #1
1000bad6:	41a5      	sbcs	r5, r4
1000bad8:	40cf      	lsrs	r7, r1
1000bada:	431d      	orrs	r5, r3
1000badc:	9b01      	ldr	r3, [sp, #4]
1000bade:	18bf      	adds	r7, r7, r2
1000bae0:	469c      	mov	ip, r3
1000bae2:	4465      	add	r5, ip
1000bae4:	429d      	cmp	r5, r3
1000bae6:	4192      	sbcs	r2, r2
1000bae8:	4252      	negs	r2, r2
1000baea:	18bf      	adds	r7, r7, r2
1000baec:	1c04      	adds	r4, r0, #0
1000baee:	e613      	b.n	1000b718 <__aeabi_dsub+0x1f0>
1000baf0:	1c10      	adds	r0, r2, #0
1000baf2:	9901      	ldr	r1, [sp, #4]
1000baf4:	4308      	orrs	r0, r1
1000baf6:	d100      	bne.n	1000bafa <__aeabi_dsub+0x5d2>
1000baf8:	e548      	b.n	1000b58c <__aeabi_dsub+0x64>
1000bafa:	1a68      	subs	r0, r5, r1
1000bafc:	4684      	mov	ip, r0
1000bafe:	4285      	cmp	r5, r0
1000bb00:	4180      	sbcs	r0, r0
1000bb02:	1abe      	subs	r6, r7, r2
1000bb04:	4240      	negs	r0, r0
1000bb06:	1a30      	subs	r0, r6, r0
1000bb08:	0206      	lsls	r6, r0, #8
1000bb0a:	d400      	bmi.n	1000bb0e <__aeabi_dsub+0x5e6>
1000bb0c:	e647      	b.n	1000b79e <__aeabi_dsub+0x276>
1000bb0e:	468c      	mov	ip, r1
1000bb10:	1b4d      	subs	r5, r1, r5
1000bb12:	45ac      	cmp	ip, r5
1000bb14:	4189      	sbcs	r1, r1
1000bb16:	1bd2      	subs	r2, r2, r7
1000bb18:	4249      	negs	r1, r1
1000bb1a:	1a57      	subs	r7, r2, r1
1000bb1c:	4698      	mov	r8, r3
1000bb1e:	e535      	b.n	1000b58c <__aeabi_dsub+0x64>
1000bb20:	1c10      	adds	r0, r2, #0
1000bb22:	9901      	ldr	r1, [sp, #4]
1000bb24:	4308      	orrs	r0, r1
1000bb26:	d034      	beq.n	1000bb92 <__aeabi_dsub+0x66a>
1000bb28:	2480      	movs	r4, #128	; 0x80
1000bb2a:	0778      	lsls	r0, r7, #29
1000bb2c:	08ed      	lsrs	r5, r5, #3
1000bb2e:	08ff      	lsrs	r7, r7, #3
1000bb30:	0324      	lsls	r4, r4, #12
1000bb32:	4328      	orrs	r0, r5
1000bb34:	4227      	tst	r7, r4
1000bb36:	d008      	beq.n	1000bb4a <__aeabi_dsub+0x622>
1000bb38:	08d6      	lsrs	r6, r2, #3
1000bb3a:	4226      	tst	r6, r4
1000bb3c:	d105      	bne.n	1000bb4a <__aeabi_dsub+0x622>
1000bb3e:	08c9      	lsrs	r1, r1, #3
1000bb40:	0752      	lsls	r2, r2, #29
1000bb42:	430a      	orrs	r2, r1
1000bb44:	1c10      	adds	r0, r2, #0
1000bb46:	1c37      	adds	r7, r6, #0
1000bb48:	4698      	mov	r8, r3
1000bb4a:	00ff      	lsls	r7, r7, #3
1000bb4c:	0f42      	lsrs	r2, r0, #29
1000bb4e:	4317      	orrs	r7, r2
1000bb50:	00c5      	lsls	r5, r0, #3
1000bb52:	4c24      	ldr	r4, [pc, #144]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000bb54:	e51a      	b.n	1000b58c <__aeabi_dsub+0x64>
1000bb56:	4c23      	ldr	r4, [pc, #140]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000bb58:	42a0      	cmp	r0, r4
1000bb5a:	d1a2      	bne.n	1000baa2 <__aeabi_dsub+0x57a>
1000bb5c:	1c17      	adds	r7, r2, #0
1000bb5e:	9d01      	ldr	r5, [sp, #4]
1000bb60:	1c04      	adds	r4, r0, #0
1000bb62:	e513      	b.n	1000b58c <__aeabi_dsub+0x64>
1000bb64:	2b00      	cmp	r3, #0
1000bb66:	d035      	beq.n	1000bbd4 <__aeabi_dsub+0x6ac>
1000bb68:	1c13      	adds	r3, r2, #0
1000bb6a:	9901      	ldr	r1, [sp, #4]
1000bb6c:	430b      	orrs	r3, r1
1000bb6e:	d010      	beq.n	1000bb92 <__aeabi_dsub+0x66a>
1000bb70:	2480      	movs	r4, #128	; 0x80
1000bb72:	0778      	lsls	r0, r7, #29
1000bb74:	08ed      	lsrs	r5, r5, #3
1000bb76:	08ff      	lsrs	r7, r7, #3
1000bb78:	0324      	lsls	r4, r4, #12
1000bb7a:	4328      	orrs	r0, r5
1000bb7c:	4227      	tst	r7, r4
1000bb7e:	d0e4      	beq.n	1000bb4a <__aeabi_dsub+0x622>
1000bb80:	08d3      	lsrs	r3, r2, #3
1000bb82:	4223      	tst	r3, r4
1000bb84:	d1e1      	bne.n	1000bb4a <__aeabi_dsub+0x622>
1000bb86:	08c9      	lsrs	r1, r1, #3
1000bb88:	0752      	lsls	r2, r2, #29
1000bb8a:	430a      	orrs	r2, r1
1000bb8c:	1c10      	adds	r0, r2, #0
1000bb8e:	1c1f      	adds	r7, r3, #0
1000bb90:	e7db      	b.n	1000bb4a <__aeabi_dsub+0x622>
1000bb92:	4c14      	ldr	r4, [pc, #80]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000bb94:	e4fa      	b.n	1000b58c <__aeabi_dsub+0x64>
1000bb96:	2200      	movs	r2, #0
1000bb98:	e73f      	b.n	1000ba1a <__aeabi_dsub+0x4f2>
1000bb9a:	464c      	mov	r4, r9
1000bb9c:	1c3e      	adds	r6, r7, #0
1000bb9e:	3c20      	subs	r4, #32
1000bba0:	40e6      	lsrs	r6, r4
1000bba2:	4649      	mov	r1, r9
1000bba4:	1c34      	adds	r4, r6, #0
1000bba6:	2920      	cmp	r1, #32
1000bba8:	d032      	beq.n	1000bc10 <__aeabi_dsub+0x6e8>
1000bbaa:	2640      	movs	r6, #64	; 0x40
1000bbac:	1a76      	subs	r6, r6, r1
1000bbae:	40b7      	lsls	r7, r6
1000bbb0:	433d      	orrs	r5, r7
1000bbb2:	1e6f      	subs	r7, r5, #1
1000bbb4:	41bd      	sbcs	r5, r7
1000bbb6:	2700      	movs	r7, #0
1000bbb8:	4325      	orrs	r5, r4
1000bbba:	e6a8      	b.n	1000b90e <__aeabi_dsub+0x3e6>
1000bbbc:	2780      	movs	r7, #128	; 0x80
1000bbbe:	2600      	movs	r6, #0
1000bbc0:	03ff      	lsls	r7, r7, #15
1000bbc2:	4c08      	ldr	r4, [pc, #32]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000bbc4:	2500      	movs	r5, #0
1000bbc6:	e57c      	b.n	1000b6c2 <__aeabi_dsub+0x19a>
1000bbc8:	433d      	orrs	r5, r7
1000bbca:	1e6f      	subs	r7, r5, #1
1000bbcc:	41bd      	sbcs	r5, r7
1000bbce:	2700      	movs	r7, #0
1000bbd0:	b2ed      	uxtb	r5, r5
1000bbd2:	e783      	b.n	1000badc <__aeabi_dsub+0x5b4>
1000bbd4:	1c17      	adds	r7, r2, #0
1000bbd6:	9d01      	ldr	r5, [sp, #4]
1000bbd8:	4c02      	ldr	r4, [pc, #8]	; (1000bbe4 <__aeabi_dsub+0x6bc>)
1000bbda:	e4d7      	b.n	1000b58c <__aeabi_dsub+0x64>
1000bbdc:	1c17      	adds	r7, r2, #0
1000bbde:	9d01      	ldr	r5, [sp, #4]
1000bbe0:	e4d4      	b.n	1000b58c <__aeabi_dsub+0x64>
1000bbe2:	46c0      	nop			; (mov r8, r8)
1000bbe4:	000007ff 	.word	0x000007ff
1000bbe8:	ff7fffff 	.word	0xff7fffff
1000bbec:	4654      	mov	r4, sl
1000bbee:	1c3b      	adds	r3, r7, #0
1000bbf0:	3c20      	subs	r4, #32
1000bbf2:	40e3      	lsrs	r3, r4
1000bbf4:	1c1c      	adds	r4, r3, #0
1000bbf6:	4653      	mov	r3, sl
1000bbf8:	2b20      	cmp	r3, #32
1000bbfa:	d00d      	beq.n	1000bc18 <__aeabi_dsub+0x6f0>
1000bbfc:	2340      	movs	r3, #64	; 0x40
1000bbfe:	4651      	mov	r1, sl
1000bc00:	1a5b      	subs	r3, r3, r1
1000bc02:	409f      	lsls	r7, r3
1000bc04:	433d      	orrs	r5, r7
1000bc06:	1e6f      	subs	r7, r5, #1
1000bc08:	41bd      	sbcs	r5, r7
1000bc0a:	2700      	movs	r7, #0
1000bc0c:	4325      	orrs	r5, r4
1000bc0e:	e765      	b.n	1000badc <__aeabi_dsub+0x5b4>
1000bc10:	2700      	movs	r7, #0
1000bc12:	e7cd      	b.n	1000bbb0 <__aeabi_dsub+0x688>
1000bc14:	1c0d      	adds	r5, r1, #0
1000bc16:	e5c8      	b.n	1000b7aa <__aeabi_dsub+0x282>
1000bc18:	2700      	movs	r7, #0
1000bc1a:	e7f3      	b.n	1000bc04 <__aeabi_dsub+0x6dc>

1000bc1c <__aeabi_f2d>:
1000bc1c:	0042      	lsls	r2, r0, #1
1000bc1e:	0e12      	lsrs	r2, r2, #24
1000bc20:	1c51      	adds	r1, r2, #1
1000bc22:	b538      	push	{r3, r4, r5, lr}
1000bc24:	b2c9      	uxtb	r1, r1
1000bc26:	0243      	lsls	r3, r0, #9
1000bc28:	0a5d      	lsrs	r5, r3, #9
1000bc2a:	0fc4      	lsrs	r4, r0, #31
1000bc2c:	2901      	cmp	r1, #1
1000bc2e:	dd15      	ble.n	1000bc5c <__aeabi_f2d+0x40>
1000bc30:	21e0      	movs	r1, #224	; 0xe0
1000bc32:	0089      	lsls	r1, r1, #2
1000bc34:	468c      	mov	ip, r1
1000bc36:	076d      	lsls	r5, r5, #29
1000bc38:	0b1b      	lsrs	r3, r3, #12
1000bc3a:	4462      	add	r2, ip
1000bc3c:	2100      	movs	r1, #0
1000bc3e:	1c28      	adds	r0, r5, #0
1000bc40:	0d0d      	lsrs	r5, r1, #20
1000bc42:	052d      	lsls	r5, r5, #20
1000bc44:	432b      	orrs	r3, r5
1000bc46:	4d1c      	ldr	r5, [pc, #112]	; (1000bcb8 <__aeabi_f2d+0x9c>)
1000bc48:	0552      	lsls	r2, r2, #21
1000bc4a:	402b      	ands	r3, r5
1000bc4c:	0852      	lsrs	r2, r2, #1
1000bc4e:	4313      	orrs	r3, r2
1000bc50:	005b      	lsls	r3, r3, #1
1000bc52:	07e4      	lsls	r4, r4, #31
1000bc54:	085b      	lsrs	r3, r3, #1
1000bc56:	4323      	orrs	r3, r4
1000bc58:	1c19      	adds	r1, r3, #0
1000bc5a:	bd38      	pop	{r3, r4, r5, pc}
1000bc5c:	2a00      	cmp	r2, #0
1000bc5e:	d115      	bne.n	1000bc8c <__aeabi_f2d+0x70>
1000bc60:	2d00      	cmp	r5, #0
1000bc62:	d01f      	beq.n	1000bca4 <__aeabi_f2d+0x88>
1000bc64:	1c28      	adds	r0, r5, #0
1000bc66:	f000 f8bd 	bl	1000bde4 <__clzsi2>
1000bc6a:	280a      	cmp	r0, #10
1000bc6c:	dc1d      	bgt.n	1000bcaa <__aeabi_f2d+0x8e>
1000bc6e:	230b      	movs	r3, #11
1000bc70:	1c2a      	adds	r2, r5, #0
1000bc72:	1a1b      	subs	r3, r3, r0
1000bc74:	40da      	lsrs	r2, r3
1000bc76:	1c13      	adds	r3, r2, #0
1000bc78:	1c02      	adds	r2, r0, #0
1000bc7a:	3215      	adds	r2, #21
1000bc7c:	4095      	lsls	r5, r2
1000bc7e:	4a0f      	ldr	r2, [pc, #60]	; (1000bcbc <__aeabi_f2d+0xa0>)
1000bc80:	031b      	lsls	r3, r3, #12
1000bc82:	1a12      	subs	r2, r2, r0
1000bc84:	0552      	lsls	r2, r2, #21
1000bc86:	0b1b      	lsrs	r3, r3, #12
1000bc88:	0d52      	lsrs	r2, r2, #21
1000bc8a:	e7d7      	b.n	1000bc3c <__aeabi_f2d+0x20>
1000bc8c:	2d00      	cmp	r5, #0
1000bc8e:	d006      	beq.n	1000bc9e <__aeabi_f2d+0x82>
1000bc90:	2280      	movs	r2, #128	; 0x80
1000bc92:	0b1b      	lsrs	r3, r3, #12
1000bc94:	0312      	lsls	r2, r2, #12
1000bc96:	4313      	orrs	r3, r2
1000bc98:	076d      	lsls	r5, r5, #29
1000bc9a:	4a09      	ldr	r2, [pc, #36]	; (1000bcc0 <__aeabi_f2d+0xa4>)
1000bc9c:	e7ce      	b.n	1000bc3c <__aeabi_f2d+0x20>
1000bc9e:	4a08      	ldr	r2, [pc, #32]	; (1000bcc0 <__aeabi_f2d+0xa4>)
1000bca0:	2300      	movs	r3, #0
1000bca2:	e7cb      	b.n	1000bc3c <__aeabi_f2d+0x20>
1000bca4:	2200      	movs	r2, #0
1000bca6:	2300      	movs	r3, #0
1000bca8:	e7c8      	b.n	1000bc3c <__aeabi_f2d+0x20>
1000bcaa:	1c03      	adds	r3, r0, #0
1000bcac:	3b0b      	subs	r3, #11
1000bcae:	409d      	lsls	r5, r3
1000bcb0:	1c2b      	adds	r3, r5, #0
1000bcb2:	2500      	movs	r5, #0
1000bcb4:	e7e3      	b.n	1000bc7e <__aeabi_f2d+0x62>
1000bcb6:	46c0      	nop			; (mov r8, r8)
1000bcb8:	800fffff 	.word	0x800fffff
1000bcbc:	00000389 	.word	0x00000389
1000bcc0:	000007ff 	.word	0x000007ff

1000bcc4 <__aeabi_d2f>:
1000bcc4:	b570      	push	{r4, r5, r6, lr}
1000bcc6:	030b      	lsls	r3, r1, #12
1000bcc8:	004d      	lsls	r5, r1, #1
1000bcca:	0f44      	lsrs	r4, r0, #29
1000bccc:	0d6d      	lsrs	r5, r5, #21
1000bcce:	0a5b      	lsrs	r3, r3, #9
1000bcd0:	4323      	orrs	r3, r4
1000bcd2:	1c6c      	adds	r4, r5, #1
1000bcd4:	0564      	lsls	r4, r4, #21
1000bcd6:	0fc9      	lsrs	r1, r1, #31
1000bcd8:	00c2      	lsls	r2, r0, #3
1000bcda:	0d64      	lsrs	r4, r4, #21
1000bcdc:	2c01      	cmp	r4, #1
1000bcde:	dd2a      	ble.n	1000bd36 <__aeabi_d2f+0x72>
1000bce0:	4c3b      	ldr	r4, [pc, #236]	; (1000bdd0 <__aeabi_d2f+0x10c>)
1000bce2:	192c      	adds	r4, r5, r4
1000bce4:	2cfe      	cmp	r4, #254	; 0xfe
1000bce6:	dc1a      	bgt.n	1000bd1e <__aeabi_d2f+0x5a>
1000bce8:	2c00      	cmp	r4, #0
1000bcea:	dd35      	ble.n	1000bd58 <__aeabi_d2f+0x94>
1000bcec:	0180      	lsls	r0, r0, #6
1000bcee:	1e45      	subs	r5, r0, #1
1000bcf0:	41a8      	sbcs	r0, r5
1000bcf2:	00db      	lsls	r3, r3, #3
1000bcf4:	4303      	orrs	r3, r0
1000bcf6:	0f52      	lsrs	r2, r2, #29
1000bcf8:	4313      	orrs	r3, r2
1000bcfa:	075a      	lsls	r2, r3, #29
1000bcfc:	d004      	beq.n	1000bd08 <__aeabi_d2f+0x44>
1000bcfe:	220f      	movs	r2, #15
1000bd00:	401a      	ands	r2, r3
1000bd02:	2a04      	cmp	r2, #4
1000bd04:	d000      	beq.n	1000bd08 <__aeabi_d2f+0x44>
1000bd06:	3304      	adds	r3, #4
1000bd08:	2280      	movs	r2, #128	; 0x80
1000bd0a:	04d2      	lsls	r2, r2, #19
1000bd0c:	401a      	ands	r2, r3
1000bd0e:	d027      	beq.n	1000bd60 <__aeabi_d2f+0x9c>
1000bd10:	3401      	adds	r4, #1
1000bd12:	2cff      	cmp	r4, #255	; 0xff
1000bd14:	d003      	beq.n	1000bd1e <__aeabi_d2f+0x5a>
1000bd16:	019b      	lsls	r3, r3, #6
1000bd18:	0a5b      	lsrs	r3, r3, #9
1000bd1a:	b2e4      	uxtb	r4, r4
1000bd1c:	e001      	b.n	1000bd22 <__aeabi_d2f+0x5e>
1000bd1e:	24ff      	movs	r4, #255	; 0xff
1000bd20:	2300      	movs	r3, #0
1000bd22:	025b      	lsls	r3, r3, #9
1000bd24:	05e4      	lsls	r4, r4, #23
1000bd26:	0a5b      	lsrs	r3, r3, #9
1000bd28:	4323      	orrs	r3, r4
1000bd2a:	005b      	lsls	r3, r3, #1
1000bd2c:	07c9      	lsls	r1, r1, #31
1000bd2e:	085b      	lsrs	r3, r3, #1
1000bd30:	430b      	orrs	r3, r1
1000bd32:	1c18      	adds	r0, r3, #0
1000bd34:	bd70      	pop	{r4, r5, r6, pc}
1000bd36:	2d00      	cmp	r5, #0
1000bd38:	d106      	bne.n	1000bd48 <__aeabi_d2f+0x84>
1000bd3a:	4313      	orrs	r3, r2
1000bd3c:	d10e      	bne.n	1000bd5c <__aeabi_d2f+0x98>
1000bd3e:	2400      	movs	r4, #0
1000bd40:	025b      	lsls	r3, r3, #9
1000bd42:	0a5b      	lsrs	r3, r3, #9
1000bd44:	b2e4      	uxtb	r4, r4
1000bd46:	e7ec      	b.n	1000bd22 <__aeabi_d2f+0x5e>
1000bd48:	431a      	orrs	r2, r3
1000bd4a:	d0e8      	beq.n	1000bd1e <__aeabi_d2f+0x5a>
1000bd4c:	2080      	movs	r0, #128	; 0x80
1000bd4e:	00db      	lsls	r3, r3, #3
1000bd50:	0480      	lsls	r0, r0, #18
1000bd52:	4303      	orrs	r3, r0
1000bd54:	24ff      	movs	r4, #255	; 0xff
1000bd56:	e7d0      	b.n	1000bcfa <__aeabi_d2f+0x36>
1000bd58:	3417      	adds	r4, #23
1000bd5a:	da0c      	bge.n	1000bd76 <__aeabi_d2f+0xb2>
1000bd5c:	2305      	movs	r3, #5
1000bd5e:	2400      	movs	r4, #0
1000bd60:	08db      	lsrs	r3, r3, #3
1000bd62:	2cff      	cmp	r4, #255	; 0xff
1000bd64:	d1ec      	bne.n	1000bd40 <__aeabi_d2f+0x7c>
1000bd66:	2b00      	cmp	r3, #0
1000bd68:	d02d      	beq.n	1000bdc6 <__aeabi_d2f+0x102>
1000bd6a:	2280      	movs	r2, #128	; 0x80
1000bd6c:	03d2      	lsls	r2, r2, #15
1000bd6e:	4313      	orrs	r3, r2
1000bd70:	025b      	lsls	r3, r3, #9
1000bd72:	0a5b      	lsrs	r3, r3, #9
1000bd74:	e7d5      	b.n	1000bd22 <__aeabi_d2f+0x5e>
1000bd76:	2480      	movs	r4, #128	; 0x80
1000bd78:	4816      	ldr	r0, [pc, #88]	; (1000bdd4 <__aeabi_d2f+0x110>)
1000bd7a:	0424      	lsls	r4, r4, #16
1000bd7c:	4323      	orrs	r3, r4
1000bd7e:	1b40      	subs	r0, r0, r5
1000bd80:	281f      	cmp	r0, #31
1000bd82:	dc0d      	bgt.n	1000bda0 <__aeabi_d2f+0xdc>
1000bd84:	4c14      	ldr	r4, [pc, #80]	; (1000bdd8 <__aeabi_d2f+0x114>)
1000bd86:	46a4      	mov	ip, r4
1000bd88:	4465      	add	r5, ip
1000bd8a:	40ab      	lsls	r3, r5
1000bd8c:	1c1c      	adds	r4, r3, #0
1000bd8e:	1c13      	adds	r3, r2, #0
1000bd90:	40ab      	lsls	r3, r5
1000bd92:	1e5d      	subs	r5, r3, #1
1000bd94:	41ab      	sbcs	r3, r5
1000bd96:	40c2      	lsrs	r2, r0
1000bd98:	4323      	orrs	r3, r4
1000bd9a:	4313      	orrs	r3, r2
1000bd9c:	2400      	movs	r4, #0
1000bd9e:	e7ac      	b.n	1000bcfa <__aeabi_d2f+0x36>
1000bda0:	1c1e      	adds	r6, r3, #0
1000bda2:	4c0e      	ldr	r4, [pc, #56]	; (1000bddc <__aeabi_d2f+0x118>)
1000bda4:	1b64      	subs	r4, r4, r5
1000bda6:	40e6      	lsrs	r6, r4
1000bda8:	1c34      	adds	r4, r6, #0
1000bdaa:	2820      	cmp	r0, #32
1000bdac:	d00d      	beq.n	1000bdca <__aeabi_d2f+0x106>
1000bdae:	480c      	ldr	r0, [pc, #48]	; (1000bde0 <__aeabi_d2f+0x11c>)
1000bdb0:	4684      	mov	ip, r0
1000bdb2:	4465      	add	r5, ip
1000bdb4:	40ab      	lsls	r3, r5
1000bdb6:	1c1d      	adds	r5, r3, #0
1000bdb8:	432a      	orrs	r2, r5
1000bdba:	1e53      	subs	r3, r2, #1
1000bdbc:	419a      	sbcs	r2, r3
1000bdbe:	1c13      	adds	r3, r2, #0
1000bdc0:	4323      	orrs	r3, r4
1000bdc2:	2400      	movs	r4, #0
1000bdc4:	e799      	b.n	1000bcfa <__aeabi_d2f+0x36>
1000bdc6:	2300      	movs	r3, #0
1000bdc8:	e7ab      	b.n	1000bd22 <__aeabi_d2f+0x5e>
1000bdca:	2500      	movs	r5, #0
1000bdcc:	e7f4      	b.n	1000bdb8 <__aeabi_d2f+0xf4>
1000bdce:	46c0      	nop			; (mov r8, r8)
1000bdd0:	fffffc80 	.word	0xfffffc80
1000bdd4:	0000039e 	.word	0x0000039e
1000bdd8:	fffffc82 	.word	0xfffffc82
1000bddc:	0000037e 	.word	0x0000037e
1000bde0:	fffffca2 	.word	0xfffffca2

1000bde4 <__clzsi2>:
1000bde4:	211c      	movs	r1, #28
1000bde6:	2301      	movs	r3, #1
1000bde8:	041b      	lsls	r3, r3, #16
1000bdea:	4298      	cmp	r0, r3
1000bdec:	d301      	bcc.n	1000bdf2 <__clzsi2+0xe>
1000bdee:	0c00      	lsrs	r0, r0, #16
1000bdf0:	3910      	subs	r1, #16
1000bdf2:	0a1b      	lsrs	r3, r3, #8
1000bdf4:	4298      	cmp	r0, r3
1000bdf6:	d301      	bcc.n	1000bdfc <__clzsi2+0x18>
1000bdf8:	0a00      	lsrs	r0, r0, #8
1000bdfa:	3908      	subs	r1, #8
1000bdfc:	091b      	lsrs	r3, r3, #4
1000bdfe:	4298      	cmp	r0, r3
1000be00:	d301      	bcc.n	1000be06 <__clzsi2+0x22>
1000be02:	0900      	lsrs	r0, r0, #4
1000be04:	3904      	subs	r1, #4
1000be06:	a202      	add	r2, pc, #8	; (adr r2, 1000be10 <__clzsi2+0x2c>)
1000be08:	5c10      	ldrb	r0, [r2, r0]
1000be0a:	1840      	adds	r0, r0, r1
1000be0c:	4770      	bx	lr
1000be0e:	46c0      	nop			; (mov r8, r8)
1000be10:	02020304 	.word	0x02020304
1000be14:	01010101 	.word	0x01010101
	...

1000be20 <gcvt>:
1000be20:	b5f0      	push	{r4, r5, r6, r7, lr}
1000be22:	1c1c      	adds	r4, r3, #0
1000be24:	b085      	sub	sp, #20
1000be26:	2300      	movs	r3, #0
1000be28:	1c15      	adds	r5, r2, #0
1000be2a:	2200      	movs	r2, #0
1000be2c:	1c06      	adds	r6, r0, #0
1000be2e:	1c0f      	adds	r7, r1, #0
1000be30:	f7fd ffd8 	bl	10009de4 <__aeabi_dcmplt>
1000be34:	1c23      	adds	r3, r4, #0
1000be36:	2800      	cmp	r0, #0
1000be38:	d003      	beq.n	1000be42 <gcvt+0x22>
1000be3a:	232d      	movs	r3, #45	; 0x2d
1000be3c:	3d01      	subs	r5, #1
1000be3e:	7023      	strb	r3, [r4, #0]
1000be40:	1c63      	adds	r3, r4, #1
1000be42:	9301      	str	r3, [sp, #4]
1000be44:	2367      	movs	r3, #103	; 0x67
1000be46:	9302      	str	r3, [sp, #8]
1000be48:	2300      	movs	r3, #0
1000be4a:	9303      	str	r3, [sp, #12]
1000be4c:	4b05      	ldr	r3, [pc, #20]	; (1000be64 <gcvt+0x44>)
1000be4e:	9500      	str	r5, [sp, #0]
1000be50:	6818      	ldr	r0, [r3, #0]
1000be52:	1c32      	adds	r2, r6, #0
1000be54:	1c3b      	adds	r3, r7, #0
1000be56:	f000 f963 	bl	1000c120 <_gcvt>
1000be5a:	2800      	cmp	r0, #0
1000be5c:	d000      	beq.n	1000be60 <gcvt+0x40>
1000be5e:	1c20      	adds	r0, r4, #0
1000be60:	b005      	add	sp, #20
1000be62:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000be64:	1000ec08 	.word	0x1000ec08

1000be68 <__libc_init_array>:
1000be68:	4b0e      	ldr	r3, [pc, #56]	; (1000bea4 <__libc_init_array+0x3c>)
1000be6a:	b570      	push	{r4, r5, r6, lr}
1000be6c:	2500      	movs	r5, #0
1000be6e:	1c1e      	adds	r6, r3, #0
1000be70:	4c0d      	ldr	r4, [pc, #52]	; (1000bea8 <__libc_init_array+0x40>)
1000be72:	1ae4      	subs	r4, r4, r3
1000be74:	10a4      	asrs	r4, r4, #2
1000be76:	42a5      	cmp	r5, r4
1000be78:	d004      	beq.n	1000be84 <__libc_init_array+0x1c>
1000be7a:	00ab      	lsls	r3, r5, #2
1000be7c:	58f3      	ldr	r3, [r6, r3]
1000be7e:	4798      	blx	r3
1000be80:	3501      	adds	r5, #1
1000be82:	e7f8      	b.n	1000be76 <__libc_init_array+0xe>
1000be84:	f002 fe80 	bl	1000eb88 <_init>
1000be88:	4b08      	ldr	r3, [pc, #32]	; (1000beac <__libc_init_array+0x44>)
1000be8a:	2500      	movs	r5, #0
1000be8c:	1c1e      	adds	r6, r3, #0
1000be8e:	4c08      	ldr	r4, [pc, #32]	; (1000beb0 <__libc_init_array+0x48>)
1000be90:	1ae4      	subs	r4, r4, r3
1000be92:	10a4      	asrs	r4, r4, #2
1000be94:	42a5      	cmp	r5, r4
1000be96:	d004      	beq.n	1000bea2 <__libc_init_array+0x3a>
1000be98:	00ab      	lsls	r3, r5, #2
1000be9a:	58f3      	ldr	r3, [r6, r3]
1000be9c:	4798      	blx	r3
1000be9e:	3501      	adds	r5, #1
1000bea0:	e7f8      	b.n	1000be94 <__libc_init_array+0x2c>
1000bea2:	bd70      	pop	{r4, r5, r6, pc}
1000bea4:	1000eb94 	.word	0x1000eb94
1000bea8:	1000eb94 	.word	0x1000eb94
1000beac:	1000eb94 	.word	0x1000eb94
1000beb0:	1000eb98 	.word	0x1000eb98

1000beb4 <memcpy>:
1000beb4:	2300      	movs	r3, #0
1000beb6:	b510      	push	{r4, lr}
1000beb8:	4293      	cmp	r3, r2
1000beba:	d003      	beq.n	1000bec4 <memcpy+0x10>
1000bebc:	5ccc      	ldrb	r4, [r1, r3]
1000bebe:	54c4      	strb	r4, [r0, r3]
1000bec0:	3301      	adds	r3, #1
1000bec2:	e7f9      	b.n	1000beb8 <memcpy+0x4>
1000bec4:	bd10      	pop	{r4, pc}

1000bec6 <memset>:
1000bec6:	1c03      	adds	r3, r0, #0
1000bec8:	1882      	adds	r2, r0, r2
1000beca:	4293      	cmp	r3, r2
1000becc:	d002      	beq.n	1000bed4 <memset+0xe>
1000bece:	7019      	strb	r1, [r3, #0]
1000bed0:	3301      	adds	r3, #1
1000bed2:	e7fa      	b.n	1000beca <memset+0x4>
1000bed4:	4770      	bx	lr
	...

1000bed8 <iprintf>:
1000bed8:	b40f      	push	{r0, r1, r2, r3}
1000beda:	4b0b      	ldr	r3, [pc, #44]	; (1000bf08 <iprintf+0x30>)
1000bedc:	b513      	push	{r0, r1, r4, lr}
1000bede:	681c      	ldr	r4, [r3, #0]
1000bee0:	2c00      	cmp	r4, #0
1000bee2:	d005      	beq.n	1000bef0 <iprintf+0x18>
1000bee4:	69a3      	ldr	r3, [r4, #24]
1000bee6:	2b00      	cmp	r3, #0
1000bee8:	d102      	bne.n	1000bef0 <iprintf+0x18>
1000beea:	1c20      	adds	r0, r4, #0
1000beec:	f000 fad6 	bl	1000c49c <__sinit>
1000bef0:	ab05      	add	r3, sp, #20
1000bef2:	1c20      	adds	r0, r4, #0
1000bef4:	68a1      	ldr	r1, [r4, #8]
1000bef6:	9a04      	ldr	r2, [sp, #16]
1000bef8:	9301      	str	r3, [sp, #4]
1000befa:	f000 ff45 	bl	1000cd88 <_vfiprintf_r>
1000befe:	bc16      	pop	{r1, r2, r4}
1000bf00:	bc08      	pop	{r3}
1000bf02:	b004      	add	sp, #16
1000bf04:	4718      	bx	r3
1000bf06:	46c0      	nop			; (mov r8, r8)
1000bf08:	1000ec08 	.word	0x1000ec08

1000bf0c <setbuf>:
1000bf0c:	b508      	push	{r3, lr}
1000bf0e:	424a      	negs	r2, r1
1000bf10:	414a      	adcs	r2, r1
1000bf12:	2380      	movs	r3, #128	; 0x80
1000bf14:	0052      	lsls	r2, r2, #1
1000bf16:	00db      	lsls	r3, r3, #3
1000bf18:	f000 f802 	bl	1000bf20 <setvbuf>
1000bf1c:	bd08      	pop	{r3, pc}
	...

1000bf20 <setvbuf>:
1000bf20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000bf22:	1c1e      	adds	r6, r3, #0
1000bf24:	4b3c      	ldr	r3, [pc, #240]	; (1000c018 <setvbuf+0xf8>)
1000bf26:	1c04      	adds	r4, r0, #0
1000bf28:	681d      	ldr	r5, [r3, #0]
1000bf2a:	1c0f      	adds	r7, r1, #0
1000bf2c:	9201      	str	r2, [sp, #4]
1000bf2e:	2d00      	cmp	r5, #0
1000bf30:	d005      	beq.n	1000bf3e <setvbuf+0x1e>
1000bf32:	69ab      	ldr	r3, [r5, #24]
1000bf34:	2b00      	cmp	r3, #0
1000bf36:	d102      	bne.n	1000bf3e <setvbuf+0x1e>
1000bf38:	1c28      	adds	r0, r5, #0
1000bf3a:	f000 faaf 	bl	1000c49c <__sinit>
1000bf3e:	4b37      	ldr	r3, [pc, #220]	; (1000c01c <setvbuf+0xfc>)
1000bf40:	429c      	cmp	r4, r3
1000bf42:	d101      	bne.n	1000bf48 <setvbuf+0x28>
1000bf44:	686c      	ldr	r4, [r5, #4]
1000bf46:	e008      	b.n	1000bf5a <setvbuf+0x3a>
1000bf48:	4b35      	ldr	r3, [pc, #212]	; (1000c020 <setvbuf+0x100>)
1000bf4a:	429c      	cmp	r4, r3
1000bf4c:	d101      	bne.n	1000bf52 <setvbuf+0x32>
1000bf4e:	68ac      	ldr	r4, [r5, #8]
1000bf50:	e003      	b.n	1000bf5a <setvbuf+0x3a>
1000bf52:	4b34      	ldr	r3, [pc, #208]	; (1000c024 <setvbuf+0x104>)
1000bf54:	429c      	cmp	r4, r3
1000bf56:	d100      	bne.n	1000bf5a <setvbuf+0x3a>
1000bf58:	68ec      	ldr	r4, [r5, #12]
1000bf5a:	9b01      	ldr	r3, [sp, #4]
1000bf5c:	2b02      	cmp	r3, #2
1000bf5e:	d858      	bhi.n	1000c012 <setvbuf+0xf2>
1000bf60:	2e00      	cmp	r6, #0
1000bf62:	db56      	blt.n	1000c012 <setvbuf+0xf2>
1000bf64:	1c28      	adds	r0, r5, #0
1000bf66:	1c21      	adds	r1, r4, #0
1000bf68:	f000 fa2a 	bl	1000c3c0 <_fflush_r>
1000bf6c:	2300      	movs	r3, #0
1000bf6e:	6063      	str	r3, [r4, #4]
1000bf70:	61a3      	str	r3, [r4, #24]
1000bf72:	89a3      	ldrh	r3, [r4, #12]
1000bf74:	061b      	lsls	r3, r3, #24
1000bf76:	d503      	bpl.n	1000bf80 <setvbuf+0x60>
1000bf78:	1c28      	adds	r0, r5, #0
1000bf7a:	6921      	ldr	r1, [r4, #16]
1000bf7c:	f000 fe3e 	bl	1000cbfc <_free_r>
1000bf80:	2283      	movs	r2, #131	; 0x83
1000bf82:	89a3      	ldrh	r3, [r4, #12]
1000bf84:	4393      	bics	r3, r2
1000bf86:	81a3      	strh	r3, [r4, #12]
1000bf88:	9b01      	ldr	r3, [sp, #4]
1000bf8a:	2b02      	cmp	r3, #2
1000bf8c:	d013      	beq.n	1000bfb6 <setvbuf+0x96>
1000bf8e:	2f00      	cmp	r7, #0
1000bf90:	d125      	bne.n	1000bfde <setvbuf+0xbe>
1000bf92:	2e00      	cmp	r6, #0
1000bf94:	d101      	bne.n	1000bf9a <setvbuf+0x7a>
1000bf96:	2680      	movs	r6, #128	; 0x80
1000bf98:	00f6      	lsls	r6, r6, #3
1000bf9a:	1c30      	adds	r0, r6, #0
1000bf9c:	f000 fb10 	bl	1000c5c0 <malloc>
1000bfa0:	1e07      	subs	r7, r0, #0
1000bfa2:	d118      	bne.n	1000bfd6 <setvbuf+0xb6>
1000bfa4:	2080      	movs	r0, #128	; 0x80
1000bfa6:	00c0      	lsls	r0, r0, #3
1000bfa8:	f000 fb0a 	bl	1000c5c0 <malloc>
1000bfac:	1e07      	subs	r7, r0, #0
1000bfae:	d110      	bne.n	1000bfd2 <setvbuf+0xb2>
1000bfb0:	2001      	movs	r0, #1
1000bfb2:	4240      	negs	r0, r0
1000bfb4:	e000      	b.n	1000bfb8 <setvbuf+0x98>
1000bfb6:	2000      	movs	r0, #0
1000bfb8:	2202      	movs	r2, #2
1000bfba:	89a3      	ldrh	r3, [r4, #12]
1000bfbc:	4313      	orrs	r3, r2
1000bfbe:	81a3      	strh	r3, [r4, #12]
1000bfc0:	2300      	movs	r3, #0
1000bfc2:	60a3      	str	r3, [r4, #8]
1000bfc4:	1c23      	adds	r3, r4, #0
1000bfc6:	3347      	adds	r3, #71	; 0x47
1000bfc8:	6023      	str	r3, [r4, #0]
1000bfca:	6123      	str	r3, [r4, #16]
1000bfcc:	2301      	movs	r3, #1
1000bfce:	6163      	str	r3, [r4, #20]
1000bfd0:	e021      	b.n	1000c016 <setvbuf+0xf6>
1000bfd2:	2680      	movs	r6, #128	; 0x80
1000bfd4:	00f6      	lsls	r6, r6, #3
1000bfd6:	2280      	movs	r2, #128	; 0x80
1000bfd8:	89a3      	ldrh	r3, [r4, #12]
1000bfda:	4313      	orrs	r3, r2
1000bfdc:	81a3      	strh	r3, [r4, #12]
1000bfde:	9b01      	ldr	r3, [sp, #4]
1000bfe0:	2b01      	cmp	r3, #1
1000bfe2:	d105      	bne.n	1000bff0 <setvbuf+0xd0>
1000bfe4:	89a3      	ldrh	r3, [r4, #12]
1000bfe6:	9a01      	ldr	r2, [sp, #4]
1000bfe8:	431a      	orrs	r2, r3
1000bfea:	4273      	negs	r3, r6
1000bfec:	81a2      	strh	r2, [r4, #12]
1000bfee:	61a3      	str	r3, [r4, #24]
1000bff0:	4b0d      	ldr	r3, [pc, #52]	; (1000c028 <setvbuf+0x108>)
1000bff2:	2000      	movs	r0, #0
1000bff4:	62ab      	str	r3, [r5, #40]	; 0x28
1000bff6:	89a2      	ldrh	r2, [r4, #12]
1000bff8:	6027      	str	r7, [r4, #0]
1000bffa:	6127      	str	r7, [r4, #16]
1000bffc:	6166      	str	r6, [r4, #20]
1000bffe:	0713      	lsls	r3, r2, #28
1000c000:	d509      	bpl.n	1000c016 <setvbuf+0xf6>
1000c002:	2303      	movs	r3, #3
1000c004:	401a      	ands	r2, r3
1000c006:	4253      	negs	r3, r2
1000c008:	4153      	adcs	r3, r2
1000c00a:	425b      	negs	r3, r3
1000c00c:	401e      	ands	r6, r3
1000c00e:	60a6      	str	r6, [r4, #8]
1000c010:	e001      	b.n	1000c016 <setvbuf+0xf6>
1000c012:	2001      	movs	r0, #1
1000c014:	4240      	negs	r0, r0
1000c016:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000c018:	1000ec08 	.word	0x1000ec08
1000c01c:	1000e9e8 	.word	0x1000e9e8
1000c020:	1000ea08 	.word	0x1000ea08
1000c024:	1000ea28 	.word	0x1000ea28
1000c028:	1000c419 	.word	0x1000c419

1000c02c <print_e>:
1000c02c:	b570      	push	{r4, r5, r6, lr}
1000c02e:	b08a      	sub	sp, #40	; 0x28
1000c030:	1c0e      	adds	r6, r1, #0
1000c032:	a90e      	add	r1, sp, #56	; 0x38
1000c034:	c920      	ldmia	r1!, {r5}
1000c036:	780c      	ldrb	r4, [r1, #0]
1000c038:	2102      	movs	r1, #2
1000c03a:	9100      	str	r1, [sp, #0]
1000c03c:	1c69      	adds	r1, r5, #1
1000c03e:	9101      	str	r1, [sp, #4]
1000c040:	a909      	add	r1, sp, #36	; 0x24
1000c042:	9102      	str	r1, [sp, #8]
1000c044:	a907      	add	r1, sp, #28
1000c046:	9103      	str	r1, [sp, #12]
1000c048:	a908      	add	r1, sp, #32
1000c04a:	9104      	str	r1, [sp, #16]
1000c04c:	f001 fb12 	bl	1000d674 <_dtoa_r>
1000c050:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000c052:	4b32      	ldr	r3, [pc, #200]	; (1000c11c <print_e+0xf0>)
1000c054:	1c01      	adds	r1, r0, #0
1000c056:	429a      	cmp	r2, r3
1000c058:	d103      	bne.n	1000c062 <print_e+0x36>
1000c05a:	1c30      	adds	r0, r6, #0
1000c05c:	f001 f988 	bl	1000d370 <strcpy>
1000c060:	e059      	b.n	1000c116 <print_e+0xea>
1000c062:	780b      	ldrb	r3, [r1, #0]
1000c064:	3001      	adds	r0, #1
1000c066:	7033      	strb	r3, [r6, #0]
1000c068:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000c06a:	432b      	orrs	r3, r5
1000c06c:	d102      	bne.n	1000c074 <print_e+0x48>
1000c06e:	1c71      	adds	r1, r6, #1
1000c070:	1c1d      	adds	r5, r3, #0
1000c072:	e009      	b.n	1000c088 <print_e+0x5c>
1000c074:	232e      	movs	r3, #46	; 0x2e
1000c076:	1cb1      	adds	r1, r6, #2
1000c078:	7073      	strb	r3, [r6, #1]
1000c07a:	e005      	b.n	1000c088 <print_e+0x5c>
1000c07c:	2d00      	cmp	r5, #0
1000c07e:	dd06      	ble.n	1000c08e <print_e+0x62>
1000c080:	700b      	strb	r3, [r1, #0]
1000c082:	3001      	adds	r0, #1
1000c084:	3d01      	subs	r5, #1
1000c086:	3101      	adds	r1, #1
1000c088:	7803      	ldrb	r3, [r0, #0]
1000c08a:	2b00      	cmp	r3, #0
1000c08c:	d1f6      	bne.n	1000c07c <print_e+0x50>
1000c08e:	1c28      	adds	r0, r5, #0
1000c090:	1c0b      	adds	r3, r1, #0
1000c092:	2c67      	cmp	r4, #103	; 0x67
1000c094:	d00e      	beq.n	1000c0b4 <print_e+0x88>
1000c096:	2c47      	cmp	r4, #71	; 0x47
1000c098:	d00e      	beq.n	1000c0b8 <print_e+0x8c>
1000c09a:	1c0b      	adds	r3, r1, #0
1000c09c:	2800      	cmp	r0, #0
1000c09e:	dd04      	ble.n	1000c0aa <print_e+0x7e>
1000c0a0:	2630      	movs	r6, #48	; 0x30
1000c0a2:	3801      	subs	r0, #1
1000c0a4:	701e      	strb	r6, [r3, #0]
1000c0a6:	3301      	adds	r3, #1
1000c0a8:	e7f8      	b.n	1000c09c <print_e+0x70>
1000c0aa:	43eb      	mvns	r3, r5
1000c0ac:	17db      	asrs	r3, r3, #31
1000c0ae:	402b      	ands	r3, r5
1000c0b0:	18cb      	adds	r3, r1, r3
1000c0b2:	e002      	b.n	1000c0ba <print_e+0x8e>
1000c0b4:	2465      	movs	r4, #101	; 0x65
1000c0b6:	e000      	b.n	1000c0ba <print_e+0x8e>
1000c0b8:	2445      	movs	r4, #69	; 0x45
1000c0ba:	3a01      	subs	r2, #1
1000c0bc:	1c9d      	adds	r5, r3, #2
1000c0be:	701c      	strb	r4, [r3, #0]
1000c0c0:	9209      	str	r2, [sp, #36]	; 0x24
1000c0c2:	1c2c      	adds	r4, r5, #0
1000c0c4:	2a00      	cmp	r2, #0
1000c0c6:	da04      	bge.n	1000c0d2 <print_e+0xa6>
1000c0c8:	212d      	movs	r1, #45	; 0x2d
1000c0ca:	4252      	negs	r2, r2
1000c0cc:	7059      	strb	r1, [r3, #1]
1000c0ce:	9209      	str	r2, [sp, #36]	; 0x24
1000c0d0:	e001      	b.n	1000c0d6 <print_e+0xaa>
1000c0d2:	222b      	movs	r2, #43	; 0x2b
1000c0d4:	705a      	strb	r2, [r3, #1]
1000c0d6:	9e09      	ldr	r6, [sp, #36]	; 0x24
1000c0d8:	2e63      	cmp	r6, #99	; 0x63
1000c0da:	dd0c      	ble.n	1000c0f6 <print_e+0xca>
1000c0dc:	1c30      	adds	r0, r6, #0
1000c0de:	2164      	movs	r1, #100	; 0x64
1000c0e0:	f002 f982 	bl	1000e3e8 <__aeabi_idiv>
1000c0e4:	1c03      	adds	r3, r0, #0
1000c0e6:	3330      	adds	r3, #48	; 0x30
1000c0e8:	702b      	strb	r3, [r5, #0]
1000c0ea:	2364      	movs	r3, #100	; 0x64
1000c0ec:	425b      	negs	r3, r3
1000c0ee:	4358      	muls	r0, r3
1000c0f0:	1830      	adds	r0, r6, r0
1000c0f2:	9009      	str	r0, [sp, #36]	; 0x24
1000c0f4:	1c6c      	adds	r4, r5, #1
1000c0f6:	9d09      	ldr	r5, [sp, #36]	; 0x24
1000c0f8:	210a      	movs	r1, #10
1000c0fa:	1c28      	adds	r0, r5, #0
1000c0fc:	f002 f974 	bl	1000e3e8 <__aeabi_idiv>
1000c100:	1c03      	adds	r3, r0, #0
1000c102:	3330      	adds	r3, #48	; 0x30
1000c104:	7023      	strb	r3, [r4, #0]
1000c106:	230a      	movs	r3, #10
1000c108:	425b      	negs	r3, r3
1000c10a:	4358      	muls	r0, r3
1000c10c:	2300      	movs	r3, #0
1000c10e:	1828      	adds	r0, r5, r0
1000c110:	3030      	adds	r0, #48	; 0x30
1000c112:	7060      	strb	r0, [r4, #1]
1000c114:	70a3      	strb	r3, [r4, #2]
1000c116:	b00a      	add	sp, #40	; 0x28
1000c118:	bd70      	pop	{r4, r5, r6, pc}
1000c11a:	46c0      	nop			; (mov r8, r8)
1000c11c:	0000270f 	.word	0x0000270f

1000c120 <_gcvt>:
1000c120:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c122:	1c1d      	adds	r5, r3, #0
1000c124:	b08d      	sub	sp, #52	; 0x34
1000c126:	ab14      	add	r3, sp, #80	; 0x50
1000c128:	781b      	ldrb	r3, [r3, #0]
1000c12a:	1c07      	adds	r7, r0, #0
1000c12c:	1c16      	adds	r6, r2, #0
1000c12e:	9307      	str	r3, [sp, #28]
1000c130:	1c10      	adds	r0, r2, #0
1000c132:	1c29      	adds	r1, r5, #0
1000c134:	2200      	movs	r2, #0
1000c136:	2300      	movs	r3, #0
1000c138:	9c13      	ldr	r4, [sp, #76]	; 0x4c
1000c13a:	f7fd fe53 	bl	10009de4 <__aeabi_dcmplt>
1000c13e:	2800      	cmp	r0, #0
1000c140:	d002      	beq.n	1000c148 <_gcvt+0x28>
1000c142:	2380      	movs	r3, #128	; 0x80
1000c144:	061b      	lsls	r3, r3, #24
1000c146:	18ed      	adds	r5, r5, r3
1000c148:	1c30      	adds	r0, r6, #0
1000c14a:	1c29      	adds	r1, r5, #0
1000c14c:	2200      	movs	r2, #0
1000c14e:	2300      	movs	r3, #0
1000c150:	f7fd fe42 	bl	10009dd8 <__aeabi_dcmpeq>
1000c154:	2800      	cmp	r0, #0
1000c156:	d004      	beq.n	1000c162 <_gcvt+0x42>
1000c158:	2330      	movs	r3, #48	; 0x30
1000c15a:	7023      	strb	r3, [r4, #0]
1000c15c:	2300      	movs	r3, #0
1000c15e:	7063      	strb	r3, [r4, #1]
1000c160:	e098      	b.n	1000c294 <_gcvt+0x174>
1000c162:	1c30      	adds	r0, r6, #0
1000c164:	1c29      	adds	r1, r5, #0
1000c166:	4a4d      	ldr	r2, [pc, #308]	; (1000c29c <_gcvt+0x17c>)
1000c168:	4b4d      	ldr	r3, [pc, #308]	; (1000c2a0 <_gcvt+0x180>)
1000c16a:	f7fd fe45 	bl	10009df8 <__aeabi_dcmple>
1000c16e:	2800      	cmp	r0, #0
1000c170:	d00d      	beq.n	1000c18e <_gcvt+0x6e>
1000c172:	9b12      	ldr	r3, [sp, #72]	; 0x48
1000c174:	1c38      	adds	r0, r7, #0
1000c176:	3b01      	subs	r3, #1
1000c178:	9300      	str	r3, [sp, #0]
1000c17a:	9b07      	ldr	r3, [sp, #28]
1000c17c:	1c21      	adds	r1, r4, #0
1000c17e:	9301      	str	r3, [sp, #4]
1000c180:	9b15      	ldr	r3, [sp, #84]	; 0x54
1000c182:	1c32      	adds	r2, r6, #0
1000c184:	9302      	str	r3, [sp, #8]
1000c186:	1c2b      	adds	r3, r5, #0
1000c188:	f7ff ff50 	bl	1000c02c <print_e>
1000c18c:	e082      	b.n	1000c294 <_gcvt+0x174>
1000c18e:	9812      	ldr	r0, [sp, #72]	; 0x48
1000c190:	f000 fd0c 	bl	1000cbac <_mprec_log10>
1000c194:	1c02      	adds	r2, r0, #0
1000c196:	1c0b      	adds	r3, r1, #0
1000c198:	1c30      	adds	r0, r6, #0
1000c19a:	1c29      	adds	r1, r5, #0
1000c19c:	f7fd fe40 	bl	10009e20 <__aeabi_dcmpge>
1000c1a0:	2800      	cmp	r0, #0
1000c1a2:	d1e6      	bne.n	1000c172 <_gcvt+0x52>
1000c1a4:	2200      	movs	r2, #0
1000c1a6:	4b3f      	ldr	r3, [pc, #252]	; (1000c2a4 <_gcvt+0x184>)
1000c1a8:	1c30      	adds	r0, r6, #0
1000c1aa:	1c29      	adds	r1, r5, #0
1000c1ac:	f7fd fe1a 	bl	10009de4 <__aeabi_dcmplt>
1000c1b0:	ab09      	add	r3, sp, #36	; 0x24
1000c1b2:	2203      	movs	r2, #3
1000c1b4:	2800      	cmp	r0, #0
1000c1b6:	d100      	bne.n	1000c1ba <_gcvt+0x9a>
1000c1b8:	2202      	movs	r2, #2
1000c1ba:	9200      	str	r2, [sp, #0]
1000c1bc:	9302      	str	r3, [sp, #8]
1000c1be:	9a12      	ldr	r2, [sp, #72]	; 0x48
1000c1c0:	ab0a      	add	r3, sp, #40	; 0x28
1000c1c2:	9303      	str	r3, [sp, #12]
1000c1c4:	ab0b      	add	r3, sp, #44	; 0x2c
1000c1c6:	9201      	str	r2, [sp, #4]
1000c1c8:	9304      	str	r3, [sp, #16]
1000c1ca:	1c32      	adds	r2, r6, #0
1000c1cc:	1c2b      	adds	r3, r5, #0
1000c1ce:	1c38      	adds	r0, r7, #0
1000c1d0:	f001 fa50 	bl	1000d674 <_dtoa_r>
1000c1d4:	4b34      	ldr	r3, [pc, #208]	; (1000c2a8 <_gcvt+0x188>)
1000c1d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000c1d8:	1c01      	adds	r1, r0, #0
1000c1da:	429a      	cmp	r2, r3
1000c1dc:	d001      	beq.n	1000c1e2 <_gcvt+0xc2>
1000c1de:	1c22      	adds	r2, r4, #0
1000c1e0:	e00a      	b.n	1000c1f8 <_gcvt+0xd8>
1000c1e2:	1c20      	adds	r0, r4, #0
1000c1e4:	f001 f8c4 	bl	1000d370 <strcpy>
1000c1e8:	e054      	b.n	1000c294 <_gcvt+0x174>
1000c1ea:	2e00      	cmp	r6, #0
1000c1ec:	dd0b      	ble.n	1000c206 <_gcvt+0xe6>
1000c1ee:	3e01      	subs	r6, #1
1000c1f0:	7010      	strb	r0, [r2, #0]
1000c1f2:	3101      	adds	r1, #1
1000c1f4:	9609      	str	r6, [sp, #36]	; 0x24
1000c1f6:	3201      	adds	r2, #1
1000c1f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
1000c1fa:	7808      	ldrb	r0, [r1, #0]
1000c1fc:	1a9b      	subs	r3, r3, r2
1000c1fe:	18e3      	adds	r3, r4, r3
1000c200:	9e09      	ldr	r6, [sp, #36]	; 0x24
1000c202:	2800      	cmp	r0, #0
1000c204:	d1f1      	bne.n	1000c1ea <_gcvt+0xca>
1000c206:	1c18      	adds	r0, r3, #0
1000c208:	1c0d      	adds	r5, r1, #0
1000c20a:	1af7      	subs	r7, r6, r3
1000c20c:	183f      	adds	r7, r7, r0
1000c20e:	2f00      	cmp	r7, #0
1000c210:	dc05      	bgt.n	1000c21e <_gcvt+0xfe>
1000c212:	9e15      	ldr	r6, [sp, #84]	; 0x54
1000c214:	9709      	str	r7, [sp, #36]	; 0x24
1000c216:	1c13      	adds	r3, r2, #0
1000c218:	2e00      	cmp	r6, #0
1000c21a:	d10a      	bne.n	1000c232 <_gcvt+0x112>
1000c21c:	e006      	b.n	1000c22c <_gcvt+0x10c>
1000c21e:	2800      	cmp	r0, #0
1000c220:	ddf7      	ble.n	1000c212 <_gcvt+0xf2>
1000c222:	2730      	movs	r7, #48	; 0x30
1000c224:	3801      	subs	r0, #1
1000c226:	7017      	strb	r7, [r2, #0]
1000c228:	3201      	adds	r2, #1
1000c22a:	e7ee      	b.n	1000c20a <_gcvt+0xea>
1000c22c:	7809      	ldrb	r1, [r1, #0]
1000c22e:	2900      	cmp	r1, #0
1000c230:	d02e      	beq.n	1000c290 <_gcvt+0x170>
1000c232:	4294      	cmp	r4, r2
1000c234:	d102      	bne.n	1000c23c <_gcvt+0x11c>
1000c236:	2230      	movs	r2, #48	; 0x30
1000c238:	1c63      	adds	r3, r4, #1
1000c23a:	7022      	strb	r2, [r4, #0]
1000c23c:	222e      	movs	r2, #46	; 0x2e
1000c23e:	701a      	strb	r2, [r3, #0]
1000c240:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000c242:	3301      	adds	r3, #1
1000c244:	2a00      	cmp	r2, #0
1000c246:	db02      	blt.n	1000c24e <_gcvt+0x12e>
1000c248:	9209      	str	r2, [sp, #36]	; 0x24
1000c24a:	1c19      	adds	r1, r3, #0
1000c24c:	e00c      	b.n	1000c268 <_gcvt+0x148>
1000c24e:	2800      	cmp	r0, #0
1000c250:	ddfa      	ble.n	1000c248 <_gcvt+0x128>
1000c252:	2130      	movs	r1, #48	; 0x30
1000c254:	3201      	adds	r2, #1
1000c256:	7019      	strb	r1, [r3, #0]
1000c258:	3801      	subs	r0, #1
1000c25a:	e7f2      	b.n	1000c242 <_gcvt+0x122>
1000c25c:	2800      	cmp	r0, #0
1000c25e:	dd07      	ble.n	1000c270 <_gcvt+0x150>
1000c260:	700a      	strb	r2, [r1, #0]
1000c262:	3501      	adds	r5, #1
1000c264:	3801      	subs	r0, #1
1000c266:	3101      	adds	r1, #1
1000c268:	782a      	ldrb	r2, [r5, #0]
1000c26a:	1c0b      	adds	r3, r1, #0
1000c26c:	2a00      	cmp	r2, #0
1000c26e:	d1f5      	bne.n	1000c25c <_gcvt+0x13c>
1000c270:	9d15      	ldr	r5, [sp, #84]	; 0x54
1000c272:	1c02      	adds	r2, r0, #0
1000c274:	2d00      	cmp	r5, #0
1000c276:	d00b      	beq.n	1000c290 <_gcvt+0x170>
1000c278:	1c0b      	adds	r3, r1, #0
1000c27a:	2a00      	cmp	r2, #0
1000c27c:	dd04      	ble.n	1000c288 <_gcvt+0x168>
1000c27e:	2530      	movs	r5, #48	; 0x30
1000c280:	3a01      	subs	r2, #1
1000c282:	701d      	strb	r5, [r3, #0]
1000c284:	3301      	adds	r3, #1
1000c286:	e7f8      	b.n	1000c27a <_gcvt+0x15a>
1000c288:	43c2      	mvns	r2, r0
1000c28a:	17d2      	asrs	r2, r2, #31
1000c28c:	4002      	ands	r2, r0
1000c28e:	188b      	adds	r3, r1, r2
1000c290:	2200      	movs	r2, #0
1000c292:	701a      	strb	r2, [r3, #0]
1000c294:	1c20      	adds	r0, r4, #0
1000c296:	b00d      	add	sp, #52	; 0x34
1000c298:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000c29a:	46c0      	nop			; (mov r8, r8)
1000c29c:	eb1c432d 	.word	0xeb1c432d
1000c2a0:	3f1a36e2 	.word	0x3f1a36e2
1000c2a4:	3ff00000 	.word	0x3ff00000
1000c2a8:	0000270f 	.word	0x0000270f

1000c2ac <__sflush_r>:
1000c2ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c2ae:	898a      	ldrh	r2, [r1, #12]
1000c2b0:	1c05      	adds	r5, r0, #0
1000c2b2:	1c0c      	adds	r4, r1, #0
1000c2b4:	0713      	lsls	r3, r2, #28
1000c2b6:	d45e      	bmi.n	1000c376 <__sflush_r+0xca>
1000c2b8:	684b      	ldr	r3, [r1, #4]
1000c2ba:	2b00      	cmp	r3, #0
1000c2bc:	dc02      	bgt.n	1000c2c4 <__sflush_r+0x18>
1000c2be:	6c0b      	ldr	r3, [r1, #64]	; 0x40
1000c2c0:	2b00      	cmp	r3, #0
1000c2c2:	dd1a      	ble.n	1000c2fa <__sflush_r+0x4e>
1000c2c4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
1000c2c6:	2f00      	cmp	r7, #0
1000c2c8:	d017      	beq.n	1000c2fa <__sflush_r+0x4e>
1000c2ca:	2300      	movs	r3, #0
1000c2cc:	682e      	ldr	r6, [r5, #0]
1000c2ce:	602b      	str	r3, [r5, #0]
1000c2d0:	2380      	movs	r3, #128	; 0x80
1000c2d2:	015b      	lsls	r3, r3, #5
1000c2d4:	401a      	ands	r2, r3
1000c2d6:	d001      	beq.n	1000c2dc <__sflush_r+0x30>
1000c2d8:	6d62      	ldr	r2, [r4, #84]	; 0x54
1000c2da:	e015      	b.n	1000c308 <__sflush_r+0x5c>
1000c2dc:	1c28      	adds	r0, r5, #0
1000c2de:	6a21      	ldr	r1, [r4, #32]
1000c2e0:	2301      	movs	r3, #1
1000c2e2:	47b8      	blx	r7
1000c2e4:	1c02      	adds	r2, r0, #0
1000c2e6:	1c43      	adds	r3, r0, #1
1000c2e8:	d10e      	bne.n	1000c308 <__sflush_r+0x5c>
1000c2ea:	682b      	ldr	r3, [r5, #0]
1000c2ec:	2b00      	cmp	r3, #0
1000c2ee:	d00b      	beq.n	1000c308 <__sflush_r+0x5c>
1000c2f0:	2b1d      	cmp	r3, #29
1000c2f2:	d001      	beq.n	1000c2f8 <__sflush_r+0x4c>
1000c2f4:	2b16      	cmp	r3, #22
1000c2f6:	d102      	bne.n	1000c2fe <__sflush_r+0x52>
1000c2f8:	602e      	str	r6, [r5, #0]
1000c2fa:	2000      	movs	r0, #0
1000c2fc:	e05e      	b.n	1000c3bc <__sflush_r+0x110>
1000c2fe:	2140      	movs	r1, #64	; 0x40
1000c300:	89a3      	ldrh	r3, [r4, #12]
1000c302:	430b      	orrs	r3, r1
1000c304:	81a3      	strh	r3, [r4, #12]
1000c306:	e059      	b.n	1000c3bc <__sflush_r+0x110>
1000c308:	89a3      	ldrh	r3, [r4, #12]
1000c30a:	075b      	lsls	r3, r3, #29
1000c30c:	d506      	bpl.n	1000c31c <__sflush_r+0x70>
1000c30e:	6863      	ldr	r3, [r4, #4]
1000c310:	1ad2      	subs	r2, r2, r3
1000c312:	6b63      	ldr	r3, [r4, #52]	; 0x34
1000c314:	2b00      	cmp	r3, #0
1000c316:	d001      	beq.n	1000c31c <__sflush_r+0x70>
1000c318:	6c23      	ldr	r3, [r4, #64]	; 0x40
1000c31a:	1ad2      	subs	r2, r2, r3
1000c31c:	2300      	movs	r3, #0
1000c31e:	1c28      	adds	r0, r5, #0
1000c320:	6a21      	ldr	r1, [r4, #32]
1000c322:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
1000c324:	47b8      	blx	r7
1000c326:	89a3      	ldrh	r3, [r4, #12]
1000c328:	1c42      	adds	r2, r0, #1
1000c32a:	d106      	bne.n	1000c33a <__sflush_r+0x8e>
1000c32c:	682a      	ldr	r2, [r5, #0]
1000c32e:	2a00      	cmp	r2, #0
1000c330:	d003      	beq.n	1000c33a <__sflush_r+0x8e>
1000c332:	2a1d      	cmp	r2, #29
1000c334:	d001      	beq.n	1000c33a <__sflush_r+0x8e>
1000c336:	2a16      	cmp	r2, #22
1000c338:	d119      	bne.n	1000c36e <__sflush_r+0xc2>
1000c33a:	2200      	movs	r2, #0
1000c33c:	6062      	str	r2, [r4, #4]
1000c33e:	6922      	ldr	r2, [r4, #16]
1000c340:	6022      	str	r2, [r4, #0]
1000c342:	04db      	lsls	r3, r3, #19
1000c344:	d505      	bpl.n	1000c352 <__sflush_r+0xa6>
1000c346:	1c43      	adds	r3, r0, #1
1000c348:	d102      	bne.n	1000c350 <__sflush_r+0xa4>
1000c34a:	682b      	ldr	r3, [r5, #0]
1000c34c:	2b00      	cmp	r3, #0
1000c34e:	d100      	bne.n	1000c352 <__sflush_r+0xa6>
1000c350:	6560      	str	r0, [r4, #84]	; 0x54
1000c352:	6b61      	ldr	r1, [r4, #52]	; 0x34
1000c354:	602e      	str	r6, [r5, #0]
1000c356:	2900      	cmp	r1, #0
1000c358:	d0cf      	beq.n	1000c2fa <__sflush_r+0x4e>
1000c35a:	1c23      	adds	r3, r4, #0
1000c35c:	3344      	adds	r3, #68	; 0x44
1000c35e:	4299      	cmp	r1, r3
1000c360:	d002      	beq.n	1000c368 <__sflush_r+0xbc>
1000c362:	1c28      	adds	r0, r5, #0
1000c364:	f000 fc4a 	bl	1000cbfc <_free_r>
1000c368:	2000      	movs	r0, #0
1000c36a:	6360      	str	r0, [r4, #52]	; 0x34
1000c36c:	e026      	b.n	1000c3bc <__sflush_r+0x110>
1000c36e:	2240      	movs	r2, #64	; 0x40
1000c370:	4313      	orrs	r3, r2
1000c372:	81a3      	strh	r3, [r4, #12]
1000c374:	e022      	b.n	1000c3bc <__sflush_r+0x110>
1000c376:	690f      	ldr	r7, [r1, #16]
1000c378:	2f00      	cmp	r7, #0
1000c37a:	d0be      	beq.n	1000c2fa <__sflush_r+0x4e>
1000c37c:	680b      	ldr	r3, [r1, #0]
1000c37e:	600f      	str	r7, [r1, #0]
1000c380:	1bdb      	subs	r3, r3, r7
1000c382:	9301      	str	r3, [sp, #4]
1000c384:	2300      	movs	r3, #0
1000c386:	0792      	lsls	r2, r2, #30
1000c388:	d100      	bne.n	1000c38c <__sflush_r+0xe0>
1000c38a:	694b      	ldr	r3, [r1, #20]
1000c38c:	60a3      	str	r3, [r4, #8]
1000c38e:	9b01      	ldr	r3, [sp, #4]
1000c390:	2b00      	cmp	r3, #0
1000c392:	ddb2      	ble.n	1000c2fa <__sflush_r+0x4e>
1000c394:	1c28      	adds	r0, r5, #0
1000c396:	6a21      	ldr	r1, [r4, #32]
1000c398:	1c3a      	adds	r2, r7, #0
1000c39a:	9b01      	ldr	r3, [sp, #4]
1000c39c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
1000c39e:	47b0      	blx	r6
1000c3a0:	2800      	cmp	r0, #0
1000c3a2:	dc06      	bgt.n	1000c3b2 <__sflush_r+0x106>
1000c3a4:	2240      	movs	r2, #64	; 0x40
1000c3a6:	2001      	movs	r0, #1
1000c3a8:	89a3      	ldrh	r3, [r4, #12]
1000c3aa:	4240      	negs	r0, r0
1000c3ac:	4313      	orrs	r3, r2
1000c3ae:	81a3      	strh	r3, [r4, #12]
1000c3b0:	e004      	b.n	1000c3bc <__sflush_r+0x110>
1000c3b2:	9b01      	ldr	r3, [sp, #4]
1000c3b4:	183f      	adds	r7, r7, r0
1000c3b6:	1a1b      	subs	r3, r3, r0
1000c3b8:	9301      	str	r3, [sp, #4]
1000c3ba:	e7e8      	b.n	1000c38e <__sflush_r+0xe2>
1000c3bc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

1000c3c0 <_fflush_r>:
1000c3c0:	b538      	push	{r3, r4, r5, lr}
1000c3c2:	690b      	ldr	r3, [r1, #16]
1000c3c4:	1c05      	adds	r5, r0, #0
1000c3c6:	1c0c      	adds	r4, r1, #0
1000c3c8:	2b00      	cmp	r3, #0
1000c3ca:	d101      	bne.n	1000c3d0 <_fflush_r+0x10>
1000c3cc:	2000      	movs	r0, #0
1000c3ce:	e01c      	b.n	1000c40a <_fflush_r+0x4a>
1000c3d0:	2800      	cmp	r0, #0
1000c3d2:	d004      	beq.n	1000c3de <_fflush_r+0x1e>
1000c3d4:	6983      	ldr	r3, [r0, #24]
1000c3d6:	2b00      	cmp	r3, #0
1000c3d8:	d101      	bne.n	1000c3de <_fflush_r+0x1e>
1000c3da:	f000 f85f 	bl	1000c49c <__sinit>
1000c3de:	4b0b      	ldr	r3, [pc, #44]	; (1000c40c <_fflush_r+0x4c>)
1000c3e0:	429c      	cmp	r4, r3
1000c3e2:	d101      	bne.n	1000c3e8 <_fflush_r+0x28>
1000c3e4:	686c      	ldr	r4, [r5, #4]
1000c3e6:	e008      	b.n	1000c3fa <_fflush_r+0x3a>
1000c3e8:	4b09      	ldr	r3, [pc, #36]	; (1000c410 <_fflush_r+0x50>)
1000c3ea:	429c      	cmp	r4, r3
1000c3ec:	d101      	bne.n	1000c3f2 <_fflush_r+0x32>
1000c3ee:	68ac      	ldr	r4, [r5, #8]
1000c3f0:	e003      	b.n	1000c3fa <_fflush_r+0x3a>
1000c3f2:	4b08      	ldr	r3, [pc, #32]	; (1000c414 <_fflush_r+0x54>)
1000c3f4:	429c      	cmp	r4, r3
1000c3f6:	d100      	bne.n	1000c3fa <_fflush_r+0x3a>
1000c3f8:	68ec      	ldr	r4, [r5, #12]
1000c3fa:	220c      	movs	r2, #12
1000c3fc:	5ea3      	ldrsh	r3, [r4, r2]
1000c3fe:	2b00      	cmp	r3, #0
1000c400:	d0e4      	beq.n	1000c3cc <_fflush_r+0xc>
1000c402:	1c28      	adds	r0, r5, #0
1000c404:	1c21      	adds	r1, r4, #0
1000c406:	f7ff ff51 	bl	1000c2ac <__sflush_r>
1000c40a:	bd38      	pop	{r3, r4, r5, pc}
1000c40c:	1000e9e8 	.word	0x1000e9e8
1000c410:	1000ea08 	.word	0x1000ea08
1000c414:	1000ea28 	.word	0x1000ea28

1000c418 <_cleanup_r>:
1000c418:	b508      	push	{r3, lr}
1000c41a:	4902      	ldr	r1, [pc, #8]	; (1000c424 <_cleanup_r+0xc>)
1000c41c:	f000 f8ae 	bl	1000c57c <_fwalk_reent>
1000c420:	bd08      	pop	{r3, pc}
1000c422:	46c0      	nop			; (mov r8, r8)
1000c424:	1000c3c1 	.word	0x1000c3c1

1000c428 <std.isra.0>:
1000c428:	2300      	movs	r3, #0
1000c42a:	b510      	push	{r4, lr}
1000c42c:	1c04      	adds	r4, r0, #0
1000c42e:	6003      	str	r3, [r0, #0]
1000c430:	6043      	str	r3, [r0, #4]
1000c432:	6083      	str	r3, [r0, #8]
1000c434:	8181      	strh	r1, [r0, #12]
1000c436:	6643      	str	r3, [r0, #100]	; 0x64
1000c438:	81c2      	strh	r2, [r0, #14]
1000c43a:	6103      	str	r3, [r0, #16]
1000c43c:	6143      	str	r3, [r0, #20]
1000c43e:	6183      	str	r3, [r0, #24]
1000c440:	1c19      	adds	r1, r3, #0
1000c442:	2208      	movs	r2, #8
1000c444:	305c      	adds	r0, #92	; 0x5c
1000c446:	f7ff fd3e 	bl	1000bec6 <memset>
1000c44a:	4b05      	ldr	r3, [pc, #20]	; (1000c460 <std.isra.0+0x38>)
1000c44c:	6224      	str	r4, [r4, #32]
1000c44e:	6263      	str	r3, [r4, #36]	; 0x24
1000c450:	4b04      	ldr	r3, [pc, #16]	; (1000c464 <std.isra.0+0x3c>)
1000c452:	62a3      	str	r3, [r4, #40]	; 0x28
1000c454:	4b04      	ldr	r3, [pc, #16]	; (1000c468 <std.isra.0+0x40>)
1000c456:	62e3      	str	r3, [r4, #44]	; 0x2c
1000c458:	4b04      	ldr	r3, [pc, #16]	; (1000c46c <std.isra.0+0x44>)
1000c45a:	6323      	str	r3, [r4, #48]	; 0x30
1000c45c:	bd10      	pop	{r4, pc}
1000c45e:	46c0      	nop			; (mov r8, r8)
1000c460:	1000d2d9 	.word	0x1000d2d9
1000c464:	1000d301 	.word	0x1000d301
1000c468:	1000d339 	.word	0x1000d339
1000c46c:	1000d365 	.word	0x1000d365

1000c470 <__sfmoreglue>:
1000c470:	b570      	push	{r4, r5, r6, lr}
1000c472:	2568      	movs	r5, #104	; 0x68
1000c474:	1e4b      	subs	r3, r1, #1
1000c476:	435d      	muls	r5, r3
1000c478:	1c0e      	adds	r6, r1, #0
1000c47a:	1c29      	adds	r1, r5, #0
1000c47c:	3174      	adds	r1, #116	; 0x74
1000c47e:	f000 fc03 	bl	1000cc88 <_malloc_r>
1000c482:	1e04      	subs	r4, r0, #0
1000c484:	d008      	beq.n	1000c498 <__sfmoreglue+0x28>
1000c486:	2100      	movs	r1, #0
1000c488:	1c2a      	adds	r2, r5, #0
1000c48a:	6001      	str	r1, [r0, #0]
1000c48c:	6046      	str	r6, [r0, #4]
1000c48e:	300c      	adds	r0, #12
1000c490:	60a0      	str	r0, [r4, #8]
1000c492:	3268      	adds	r2, #104	; 0x68
1000c494:	f7ff fd17 	bl	1000bec6 <memset>
1000c498:	1c20      	adds	r0, r4, #0
1000c49a:	bd70      	pop	{r4, r5, r6, pc}

1000c49c <__sinit>:
1000c49c:	6983      	ldr	r3, [r0, #24]
1000c49e:	b513      	push	{r0, r1, r4, lr}
1000c4a0:	2b00      	cmp	r3, #0
1000c4a2:	d128      	bne.n	1000c4f6 <__sinit+0x5a>
1000c4a4:	6483      	str	r3, [r0, #72]	; 0x48
1000c4a6:	64c3      	str	r3, [r0, #76]	; 0x4c
1000c4a8:	6503      	str	r3, [r0, #80]	; 0x50
1000c4aa:	4b13      	ldr	r3, [pc, #76]	; (1000c4f8 <__sinit+0x5c>)
1000c4ac:	4a13      	ldr	r2, [pc, #76]	; (1000c4fc <__sinit+0x60>)
1000c4ae:	681b      	ldr	r3, [r3, #0]
1000c4b0:	6282      	str	r2, [r0, #40]	; 0x28
1000c4b2:	9301      	str	r3, [sp, #4]
1000c4b4:	4298      	cmp	r0, r3
1000c4b6:	d101      	bne.n	1000c4bc <__sinit+0x20>
1000c4b8:	2301      	movs	r3, #1
1000c4ba:	6183      	str	r3, [r0, #24]
1000c4bc:	1c04      	adds	r4, r0, #0
1000c4be:	f000 f81f 	bl	1000c500 <__sfp>
1000c4c2:	6060      	str	r0, [r4, #4]
1000c4c4:	1c20      	adds	r0, r4, #0
1000c4c6:	f000 f81b 	bl	1000c500 <__sfp>
1000c4ca:	60a0      	str	r0, [r4, #8]
1000c4cc:	1c20      	adds	r0, r4, #0
1000c4ce:	f000 f817 	bl	1000c500 <__sfp>
1000c4d2:	2104      	movs	r1, #4
1000c4d4:	60e0      	str	r0, [r4, #12]
1000c4d6:	2200      	movs	r2, #0
1000c4d8:	6860      	ldr	r0, [r4, #4]
1000c4da:	f7ff ffa5 	bl	1000c428 <std.isra.0>
1000c4de:	68a0      	ldr	r0, [r4, #8]
1000c4e0:	2109      	movs	r1, #9
1000c4e2:	2201      	movs	r2, #1
1000c4e4:	f7ff ffa0 	bl	1000c428 <std.isra.0>
1000c4e8:	68e0      	ldr	r0, [r4, #12]
1000c4ea:	2112      	movs	r1, #18
1000c4ec:	2202      	movs	r2, #2
1000c4ee:	f7ff ff9b 	bl	1000c428 <std.isra.0>
1000c4f2:	2301      	movs	r3, #1
1000c4f4:	61a3      	str	r3, [r4, #24]
1000c4f6:	bd13      	pop	{r0, r1, r4, pc}
1000c4f8:	1000e9e4 	.word	0x1000e9e4
1000c4fc:	1000c419 	.word	0x1000c419

1000c500 <__sfp>:
1000c500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000c502:	4b1d      	ldr	r3, [pc, #116]	; (1000c578 <__sfp+0x78>)
1000c504:	1c06      	adds	r6, r0, #0
1000c506:	681d      	ldr	r5, [r3, #0]
1000c508:	69ab      	ldr	r3, [r5, #24]
1000c50a:	2b00      	cmp	r3, #0
1000c50c:	d102      	bne.n	1000c514 <__sfp+0x14>
1000c50e:	1c28      	adds	r0, r5, #0
1000c510:	f7ff ffc4 	bl	1000c49c <__sinit>
1000c514:	3548      	adds	r5, #72	; 0x48
1000c516:	68ac      	ldr	r4, [r5, #8]
1000c518:	686b      	ldr	r3, [r5, #4]
1000c51a:	3b01      	subs	r3, #1
1000c51c:	d405      	bmi.n	1000c52a <__sfp+0x2a>
1000c51e:	220c      	movs	r2, #12
1000c520:	5ea7      	ldrsh	r7, [r4, r2]
1000c522:	2f00      	cmp	r7, #0
1000c524:	d010      	beq.n	1000c548 <__sfp+0x48>
1000c526:	3468      	adds	r4, #104	; 0x68
1000c528:	e7f7      	b.n	1000c51a <__sfp+0x1a>
1000c52a:	682b      	ldr	r3, [r5, #0]
1000c52c:	2b00      	cmp	r3, #0
1000c52e:	d106      	bne.n	1000c53e <__sfp+0x3e>
1000c530:	1c30      	adds	r0, r6, #0
1000c532:	2104      	movs	r1, #4
1000c534:	f7ff ff9c 	bl	1000c470 <__sfmoreglue>
1000c538:	6028      	str	r0, [r5, #0]
1000c53a:	2800      	cmp	r0, #0
1000c53c:	d001      	beq.n	1000c542 <__sfp+0x42>
1000c53e:	682d      	ldr	r5, [r5, #0]
1000c540:	e7e9      	b.n	1000c516 <__sfp+0x16>
1000c542:	230c      	movs	r3, #12
1000c544:	6033      	str	r3, [r6, #0]
1000c546:	e016      	b.n	1000c576 <__sfp+0x76>
1000c548:	2301      	movs	r3, #1
1000c54a:	1c20      	adds	r0, r4, #0
1000c54c:	425b      	negs	r3, r3
1000c54e:	81e3      	strh	r3, [r4, #14]
1000c550:	3302      	adds	r3, #2
1000c552:	81a3      	strh	r3, [r4, #12]
1000c554:	6667      	str	r7, [r4, #100]	; 0x64
1000c556:	6027      	str	r7, [r4, #0]
1000c558:	60a7      	str	r7, [r4, #8]
1000c55a:	6067      	str	r7, [r4, #4]
1000c55c:	6127      	str	r7, [r4, #16]
1000c55e:	6167      	str	r7, [r4, #20]
1000c560:	61a7      	str	r7, [r4, #24]
1000c562:	305c      	adds	r0, #92	; 0x5c
1000c564:	1c39      	adds	r1, r7, #0
1000c566:	2208      	movs	r2, #8
1000c568:	f7ff fcad 	bl	1000bec6 <memset>
1000c56c:	1c20      	adds	r0, r4, #0
1000c56e:	6367      	str	r7, [r4, #52]	; 0x34
1000c570:	63a7      	str	r7, [r4, #56]	; 0x38
1000c572:	64a7      	str	r7, [r4, #72]	; 0x48
1000c574:	64e7      	str	r7, [r4, #76]	; 0x4c
1000c576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000c578:	1000e9e4 	.word	0x1000e9e4

1000c57c <_fwalk_reent>:
1000c57c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c57e:	1c04      	adds	r4, r0, #0
1000c580:	1c07      	adds	r7, r0, #0
1000c582:	2600      	movs	r6, #0
1000c584:	9101      	str	r1, [sp, #4]
1000c586:	3448      	adds	r4, #72	; 0x48
1000c588:	2c00      	cmp	r4, #0
1000c58a:	d016      	beq.n	1000c5ba <_fwalk_reent+0x3e>
1000c58c:	6863      	ldr	r3, [r4, #4]
1000c58e:	68a5      	ldr	r5, [r4, #8]
1000c590:	9300      	str	r3, [sp, #0]
1000c592:	9b00      	ldr	r3, [sp, #0]
1000c594:	3b01      	subs	r3, #1
1000c596:	9300      	str	r3, [sp, #0]
1000c598:	d40d      	bmi.n	1000c5b6 <_fwalk_reent+0x3a>
1000c59a:	89ab      	ldrh	r3, [r5, #12]
1000c59c:	2b01      	cmp	r3, #1
1000c59e:	d908      	bls.n	1000c5b2 <_fwalk_reent+0x36>
1000c5a0:	220e      	movs	r2, #14
1000c5a2:	5eab      	ldrsh	r3, [r5, r2]
1000c5a4:	3301      	adds	r3, #1
1000c5a6:	d004      	beq.n	1000c5b2 <_fwalk_reent+0x36>
1000c5a8:	1c38      	adds	r0, r7, #0
1000c5aa:	1c29      	adds	r1, r5, #0
1000c5ac:	9b01      	ldr	r3, [sp, #4]
1000c5ae:	4798      	blx	r3
1000c5b0:	4306      	orrs	r6, r0
1000c5b2:	3568      	adds	r5, #104	; 0x68
1000c5b4:	e7ed      	b.n	1000c592 <_fwalk_reent+0x16>
1000c5b6:	6824      	ldr	r4, [r4, #0]
1000c5b8:	e7e6      	b.n	1000c588 <_fwalk_reent+0xc>
1000c5ba:	1c30      	adds	r0, r6, #0
1000c5bc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

1000c5c0 <malloc>:
1000c5c0:	b508      	push	{r3, lr}
1000c5c2:	4b03      	ldr	r3, [pc, #12]	; (1000c5d0 <malloc+0x10>)
1000c5c4:	1c01      	adds	r1, r0, #0
1000c5c6:	6818      	ldr	r0, [r3, #0]
1000c5c8:	f000 fb5e 	bl	1000cc88 <_malloc_r>
1000c5cc:	bd08      	pop	{r3, pc}
1000c5ce:	46c0      	nop			; (mov r8, r8)
1000c5d0:	1000ec08 	.word	0x1000ec08

1000c5d4 <_Balloc>:
1000c5d4:	b570      	push	{r4, r5, r6, lr}
1000c5d6:	6a46      	ldr	r6, [r0, #36]	; 0x24
1000c5d8:	1c04      	adds	r4, r0, #0
1000c5da:	1c0d      	adds	r5, r1, #0
1000c5dc:	2e00      	cmp	r6, #0
1000c5de:	d107      	bne.n	1000c5f0 <_Balloc+0x1c>
1000c5e0:	2010      	movs	r0, #16
1000c5e2:	f7ff ffed 	bl	1000c5c0 <malloc>
1000c5e6:	6260      	str	r0, [r4, #36]	; 0x24
1000c5e8:	6046      	str	r6, [r0, #4]
1000c5ea:	6086      	str	r6, [r0, #8]
1000c5ec:	6006      	str	r6, [r0, #0]
1000c5ee:	60c6      	str	r6, [r0, #12]
1000c5f0:	6a66      	ldr	r6, [r4, #36]	; 0x24
1000c5f2:	68f3      	ldr	r3, [r6, #12]
1000c5f4:	2b00      	cmp	r3, #0
1000c5f6:	d009      	beq.n	1000c60c <_Balloc+0x38>
1000c5f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
1000c5fa:	00ab      	lsls	r3, r5, #2
1000c5fc:	68d2      	ldr	r2, [r2, #12]
1000c5fe:	18d3      	adds	r3, r2, r3
1000c600:	6818      	ldr	r0, [r3, #0]
1000c602:	2800      	cmp	r0, #0
1000c604:	d00e      	beq.n	1000c624 <_Balloc+0x50>
1000c606:	6802      	ldr	r2, [r0, #0]
1000c608:	601a      	str	r2, [r3, #0]
1000c60a:	e017      	b.n	1000c63c <_Balloc+0x68>
1000c60c:	1c20      	adds	r0, r4, #0
1000c60e:	2104      	movs	r1, #4
1000c610:	2221      	movs	r2, #33	; 0x21
1000c612:	f000 fae5 	bl	1000cbe0 <_calloc_r>
1000c616:	6a63      	ldr	r3, [r4, #36]	; 0x24
1000c618:	60f0      	str	r0, [r6, #12]
1000c61a:	68db      	ldr	r3, [r3, #12]
1000c61c:	2b00      	cmp	r3, #0
1000c61e:	d1eb      	bne.n	1000c5f8 <_Balloc+0x24>
1000c620:	2000      	movs	r0, #0
1000c622:	e00e      	b.n	1000c642 <_Balloc+0x6e>
1000c624:	2101      	movs	r1, #1
1000c626:	1c0e      	adds	r6, r1, #0
1000c628:	40ae      	lsls	r6, r5
1000c62a:	1d72      	adds	r2, r6, #5
1000c62c:	0092      	lsls	r2, r2, #2
1000c62e:	1c20      	adds	r0, r4, #0
1000c630:	f000 fad6 	bl	1000cbe0 <_calloc_r>
1000c634:	2800      	cmp	r0, #0
1000c636:	d0f3      	beq.n	1000c620 <_Balloc+0x4c>
1000c638:	6045      	str	r5, [r0, #4]
1000c63a:	6086      	str	r6, [r0, #8]
1000c63c:	2300      	movs	r3, #0
1000c63e:	6103      	str	r3, [r0, #16]
1000c640:	60c3      	str	r3, [r0, #12]
1000c642:	bd70      	pop	{r4, r5, r6, pc}

1000c644 <_Bfree>:
1000c644:	b570      	push	{r4, r5, r6, lr}
1000c646:	6a45      	ldr	r5, [r0, #36]	; 0x24
1000c648:	1c06      	adds	r6, r0, #0
1000c64a:	1c0c      	adds	r4, r1, #0
1000c64c:	2d00      	cmp	r5, #0
1000c64e:	d107      	bne.n	1000c660 <_Bfree+0x1c>
1000c650:	2010      	movs	r0, #16
1000c652:	f7ff ffb5 	bl	1000c5c0 <malloc>
1000c656:	6270      	str	r0, [r6, #36]	; 0x24
1000c658:	6045      	str	r5, [r0, #4]
1000c65a:	6085      	str	r5, [r0, #8]
1000c65c:	6005      	str	r5, [r0, #0]
1000c65e:	60c5      	str	r5, [r0, #12]
1000c660:	2c00      	cmp	r4, #0
1000c662:	d007      	beq.n	1000c674 <_Bfree+0x30>
1000c664:	6a72      	ldr	r2, [r6, #36]	; 0x24
1000c666:	6863      	ldr	r3, [r4, #4]
1000c668:	68d2      	ldr	r2, [r2, #12]
1000c66a:	009b      	lsls	r3, r3, #2
1000c66c:	18d3      	adds	r3, r2, r3
1000c66e:	681a      	ldr	r2, [r3, #0]
1000c670:	6022      	str	r2, [r4, #0]
1000c672:	601c      	str	r4, [r3, #0]
1000c674:	bd70      	pop	{r4, r5, r6, pc}

1000c676 <__multadd>:
1000c676:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c678:	1c1e      	adds	r6, r3, #0
1000c67a:	2314      	movs	r3, #20
1000c67c:	469c      	mov	ip, r3
1000c67e:	1c07      	adds	r7, r0, #0
1000c680:	1c0c      	adds	r4, r1, #0
1000c682:	2000      	movs	r0, #0
1000c684:	690d      	ldr	r5, [r1, #16]
1000c686:	448c      	add	ip, r1
1000c688:	4663      	mov	r3, ip
1000c68a:	8819      	ldrh	r1, [r3, #0]
1000c68c:	681b      	ldr	r3, [r3, #0]
1000c68e:	4351      	muls	r1, r2
1000c690:	0c1b      	lsrs	r3, r3, #16
1000c692:	4353      	muls	r3, r2
1000c694:	1989      	adds	r1, r1, r6
1000c696:	0c0e      	lsrs	r6, r1, #16
1000c698:	18f3      	adds	r3, r6, r3
1000c69a:	b289      	uxth	r1, r1
1000c69c:	0c1e      	lsrs	r6, r3, #16
1000c69e:	041b      	lsls	r3, r3, #16
1000c6a0:	185b      	adds	r3, r3, r1
1000c6a2:	4661      	mov	r1, ip
1000c6a4:	3001      	adds	r0, #1
1000c6a6:	c108      	stmia	r1!, {r3}
1000c6a8:	468c      	mov	ip, r1
1000c6aa:	42a8      	cmp	r0, r5
1000c6ac:	dbec      	blt.n	1000c688 <__multadd+0x12>
1000c6ae:	2e00      	cmp	r6, #0
1000c6b0:	d01b      	beq.n	1000c6ea <__multadd+0x74>
1000c6b2:	68a3      	ldr	r3, [r4, #8]
1000c6b4:	429d      	cmp	r5, r3
1000c6b6:	db12      	blt.n	1000c6de <__multadd+0x68>
1000c6b8:	6863      	ldr	r3, [r4, #4]
1000c6ba:	1c38      	adds	r0, r7, #0
1000c6bc:	1c59      	adds	r1, r3, #1
1000c6be:	f7ff ff89 	bl	1000c5d4 <_Balloc>
1000c6c2:	1c21      	adds	r1, r4, #0
1000c6c4:	6923      	ldr	r3, [r4, #16]
1000c6c6:	9001      	str	r0, [sp, #4]
1000c6c8:	1c9a      	adds	r2, r3, #2
1000c6ca:	310c      	adds	r1, #12
1000c6cc:	0092      	lsls	r2, r2, #2
1000c6ce:	300c      	adds	r0, #12
1000c6d0:	f7ff fbf0 	bl	1000beb4 <memcpy>
1000c6d4:	1c21      	adds	r1, r4, #0
1000c6d6:	1c38      	adds	r0, r7, #0
1000c6d8:	f7ff ffb4 	bl	1000c644 <_Bfree>
1000c6dc:	9c01      	ldr	r4, [sp, #4]
1000c6de:	1d2b      	adds	r3, r5, #4
1000c6e0:	009b      	lsls	r3, r3, #2
1000c6e2:	18e3      	adds	r3, r4, r3
1000c6e4:	3501      	adds	r5, #1
1000c6e6:	605e      	str	r6, [r3, #4]
1000c6e8:	6125      	str	r5, [r4, #16]
1000c6ea:	1c20      	adds	r0, r4, #0
1000c6ec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1000c6ee <__hi0bits>:
1000c6ee:	2200      	movs	r2, #0
1000c6f0:	1c03      	adds	r3, r0, #0
1000c6f2:	0c01      	lsrs	r1, r0, #16
1000c6f4:	4291      	cmp	r1, r2
1000c6f6:	d101      	bne.n	1000c6fc <__hi0bits+0xe>
1000c6f8:	0403      	lsls	r3, r0, #16
1000c6fa:	3210      	adds	r2, #16
1000c6fc:	0e19      	lsrs	r1, r3, #24
1000c6fe:	d101      	bne.n	1000c704 <__hi0bits+0x16>
1000c700:	3208      	adds	r2, #8
1000c702:	021b      	lsls	r3, r3, #8
1000c704:	0f19      	lsrs	r1, r3, #28
1000c706:	d101      	bne.n	1000c70c <__hi0bits+0x1e>
1000c708:	3204      	adds	r2, #4
1000c70a:	011b      	lsls	r3, r3, #4
1000c70c:	0f99      	lsrs	r1, r3, #30
1000c70e:	d101      	bne.n	1000c714 <__hi0bits+0x26>
1000c710:	3202      	adds	r2, #2
1000c712:	009b      	lsls	r3, r3, #2
1000c714:	1c10      	adds	r0, r2, #0
1000c716:	2b00      	cmp	r3, #0
1000c718:	db03      	blt.n	1000c722 <__hi0bits+0x34>
1000c71a:	2020      	movs	r0, #32
1000c71c:	005b      	lsls	r3, r3, #1
1000c71e:	d500      	bpl.n	1000c722 <__hi0bits+0x34>
1000c720:	1c50      	adds	r0, r2, #1
1000c722:	4770      	bx	lr

1000c724 <__lo0bits>:
1000c724:	2207      	movs	r2, #7
1000c726:	6803      	ldr	r3, [r0, #0]
1000c728:	b510      	push	{r4, lr}
1000c72a:	1c01      	adds	r1, r0, #0
1000c72c:	401a      	ands	r2, r3
1000c72e:	d00c      	beq.n	1000c74a <__lo0bits+0x26>
1000c730:	2401      	movs	r4, #1
1000c732:	2000      	movs	r0, #0
1000c734:	4223      	tst	r3, r4
1000c736:	d123      	bne.n	1000c780 <__lo0bits+0x5c>
1000c738:	2202      	movs	r2, #2
1000c73a:	4213      	tst	r3, r2
1000c73c:	d003      	beq.n	1000c746 <__lo0bits+0x22>
1000c73e:	40e3      	lsrs	r3, r4
1000c740:	1c20      	adds	r0, r4, #0
1000c742:	600b      	str	r3, [r1, #0]
1000c744:	e01c      	b.n	1000c780 <__lo0bits+0x5c>
1000c746:	089b      	lsrs	r3, r3, #2
1000c748:	e018      	b.n	1000c77c <__lo0bits+0x58>
1000c74a:	b298      	uxth	r0, r3
1000c74c:	2800      	cmp	r0, #0
1000c74e:	d101      	bne.n	1000c754 <__lo0bits+0x30>
1000c750:	2210      	movs	r2, #16
1000c752:	0c1b      	lsrs	r3, r3, #16
1000c754:	b2d8      	uxtb	r0, r3
1000c756:	2800      	cmp	r0, #0
1000c758:	d101      	bne.n	1000c75e <__lo0bits+0x3a>
1000c75a:	3208      	adds	r2, #8
1000c75c:	0a1b      	lsrs	r3, r3, #8
1000c75e:	0718      	lsls	r0, r3, #28
1000c760:	d101      	bne.n	1000c766 <__lo0bits+0x42>
1000c762:	3204      	adds	r2, #4
1000c764:	091b      	lsrs	r3, r3, #4
1000c766:	0798      	lsls	r0, r3, #30
1000c768:	d101      	bne.n	1000c76e <__lo0bits+0x4a>
1000c76a:	3202      	adds	r2, #2
1000c76c:	089b      	lsrs	r3, r3, #2
1000c76e:	07d8      	lsls	r0, r3, #31
1000c770:	d404      	bmi.n	1000c77c <__lo0bits+0x58>
1000c772:	085b      	lsrs	r3, r3, #1
1000c774:	2020      	movs	r0, #32
1000c776:	2b00      	cmp	r3, #0
1000c778:	d002      	beq.n	1000c780 <__lo0bits+0x5c>
1000c77a:	3201      	adds	r2, #1
1000c77c:	1c10      	adds	r0, r2, #0
1000c77e:	600b      	str	r3, [r1, #0]
1000c780:	bd10      	pop	{r4, pc}

1000c782 <__i2b>:
1000c782:	b510      	push	{r4, lr}
1000c784:	1c0c      	adds	r4, r1, #0
1000c786:	2101      	movs	r1, #1
1000c788:	f7ff ff24 	bl	1000c5d4 <_Balloc>
1000c78c:	2301      	movs	r3, #1
1000c78e:	6144      	str	r4, [r0, #20]
1000c790:	6103      	str	r3, [r0, #16]
1000c792:	bd10      	pop	{r4, pc}

1000c794 <__multiply>:
1000c794:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c796:	690b      	ldr	r3, [r1, #16]
1000c798:	1c14      	adds	r4, r2, #0
1000c79a:	6912      	ldr	r2, [r2, #16]
1000c79c:	b089      	sub	sp, #36	; 0x24
1000c79e:	1c0d      	adds	r5, r1, #0
1000c7a0:	4293      	cmp	r3, r2
1000c7a2:	da01      	bge.n	1000c7a8 <__multiply+0x14>
1000c7a4:	1c25      	adds	r5, r4, #0
1000c7a6:	1c0c      	adds	r4, r1, #0
1000c7a8:	692f      	ldr	r7, [r5, #16]
1000c7aa:	6926      	ldr	r6, [r4, #16]
1000c7ac:	68aa      	ldr	r2, [r5, #8]
1000c7ae:	19bb      	adds	r3, r7, r6
1000c7b0:	6869      	ldr	r1, [r5, #4]
1000c7b2:	9300      	str	r3, [sp, #0]
1000c7b4:	4293      	cmp	r3, r2
1000c7b6:	dd00      	ble.n	1000c7ba <__multiply+0x26>
1000c7b8:	3101      	adds	r1, #1
1000c7ba:	f7ff ff0b 	bl	1000c5d4 <_Balloc>
1000c7be:	1c01      	adds	r1, r0, #0
1000c7c0:	9b00      	ldr	r3, [sp, #0]
1000c7c2:	3114      	adds	r1, #20
1000c7c4:	4684      	mov	ip, r0
1000c7c6:	0098      	lsls	r0, r3, #2
1000c7c8:	1c0b      	adds	r3, r1, #0
1000c7ca:	1808      	adds	r0, r1, r0
1000c7cc:	4283      	cmp	r3, r0
1000c7ce:	d202      	bcs.n	1000c7d6 <__multiply+0x42>
1000c7d0:	2200      	movs	r2, #0
1000c7d2:	c304      	stmia	r3!, {r2}
1000c7d4:	e7fa      	b.n	1000c7cc <__multiply+0x38>
1000c7d6:	3514      	adds	r5, #20
1000c7d8:	00bf      	lsls	r7, r7, #2
1000c7da:	19eb      	adds	r3, r5, r7
1000c7dc:	3414      	adds	r4, #20
1000c7de:	00b6      	lsls	r6, r6, #2
1000c7e0:	9304      	str	r3, [sp, #16]
1000c7e2:	19a3      	adds	r3, r4, r6
1000c7e4:	9502      	str	r5, [sp, #8]
1000c7e6:	9306      	str	r3, [sp, #24]
1000c7e8:	9b06      	ldr	r3, [sp, #24]
1000c7ea:	429c      	cmp	r4, r3
1000c7ec:	d256      	bcs.n	1000c89c <__multiply+0x108>
1000c7ee:	8823      	ldrh	r3, [r4, #0]
1000c7f0:	9303      	str	r3, [sp, #12]
1000c7f2:	2b00      	cmp	r3, #0
1000c7f4:	d022      	beq.n	1000c83c <__multiply+0xa8>
1000c7f6:	1c0e      	adds	r6, r1, #0
1000c7f8:	2700      	movs	r7, #0
1000c7fa:	9b02      	ldr	r3, [sp, #8]
1000c7fc:	9301      	str	r3, [sp, #4]
1000c7fe:	9b01      	ldr	r3, [sp, #4]
1000c800:	9d03      	ldr	r5, [sp, #12]
1000c802:	cb04      	ldmia	r3!, {r2}
1000c804:	9605      	str	r6, [sp, #20]
1000c806:	9301      	str	r3, [sp, #4]
1000c808:	8833      	ldrh	r3, [r6, #0]
1000c80a:	9307      	str	r3, [sp, #28]
1000c80c:	b293      	uxth	r3, r2
1000c80e:	436b      	muls	r3, r5
1000c810:	9d07      	ldr	r5, [sp, #28]
1000c812:	0c12      	lsrs	r2, r2, #16
1000c814:	18eb      	adds	r3, r5, r3
1000c816:	6835      	ldr	r5, [r6, #0]
1000c818:	19db      	adds	r3, r3, r7
1000c81a:	0c2f      	lsrs	r7, r5, #16
1000c81c:	9d03      	ldr	r5, [sp, #12]
1000c81e:	436a      	muls	r2, r5
1000c820:	18ba      	adds	r2, r7, r2
1000c822:	0c1f      	lsrs	r7, r3, #16
1000c824:	19d2      	adds	r2, r2, r7
1000c826:	0c17      	lsrs	r7, r2, #16
1000c828:	b29b      	uxth	r3, r3
1000c82a:	0412      	lsls	r2, r2, #16
1000c82c:	4313      	orrs	r3, r2
1000c82e:	c608      	stmia	r6!, {r3}
1000c830:	9a01      	ldr	r2, [sp, #4]
1000c832:	9b04      	ldr	r3, [sp, #16]
1000c834:	429a      	cmp	r2, r3
1000c836:	d3e2      	bcc.n	1000c7fe <__multiply+0x6a>
1000c838:	9b05      	ldr	r3, [sp, #20]
1000c83a:	605f      	str	r7, [r3, #4]
1000c83c:	6823      	ldr	r3, [r4, #0]
1000c83e:	0c1b      	lsrs	r3, r3, #16
1000c840:	9301      	str	r3, [sp, #4]
1000c842:	d021      	beq.n	1000c888 <__multiply+0xf4>
1000c844:	2200      	movs	r2, #0
1000c846:	1c0d      	adds	r5, r1, #0
1000c848:	680b      	ldr	r3, [r1, #0]
1000c84a:	9f02      	ldr	r7, [sp, #8]
1000c84c:	9203      	str	r2, [sp, #12]
1000c84e:	883e      	ldrh	r6, [r7, #0]
1000c850:	9a01      	ldr	r2, [sp, #4]
1000c852:	b29b      	uxth	r3, r3
1000c854:	4356      	muls	r6, r2
1000c856:	682a      	ldr	r2, [r5, #0]
1000c858:	9505      	str	r5, [sp, #20]
1000c85a:	0c12      	lsrs	r2, r2, #16
1000c85c:	18b2      	adds	r2, r6, r2
1000c85e:	9e03      	ldr	r6, [sp, #12]
1000c860:	1992      	adds	r2, r2, r6
1000c862:	0416      	lsls	r6, r2, #16
1000c864:	4333      	orrs	r3, r6
1000c866:	602b      	str	r3, [r5, #0]
1000c868:	cf08      	ldmia	r7!, {r3}
1000c86a:	9e01      	ldr	r6, [sp, #4]
1000c86c:	0c1b      	lsrs	r3, r3, #16
1000c86e:	4373      	muls	r3, r6
1000c870:	88ae      	ldrh	r6, [r5, #4]
1000c872:	0c12      	lsrs	r2, r2, #16
1000c874:	199b      	adds	r3, r3, r6
1000c876:	189b      	adds	r3, r3, r2
1000c878:	0c1a      	lsrs	r2, r3, #16
1000c87a:	9203      	str	r2, [sp, #12]
1000c87c:	9a04      	ldr	r2, [sp, #16]
1000c87e:	3504      	adds	r5, #4
1000c880:	42ba      	cmp	r2, r7
1000c882:	d8e4      	bhi.n	1000c84e <__multiply+0xba>
1000c884:	9a05      	ldr	r2, [sp, #20]
1000c886:	6053      	str	r3, [r2, #4]
1000c888:	3404      	adds	r4, #4
1000c88a:	3104      	adds	r1, #4
1000c88c:	e7ac      	b.n	1000c7e8 <__multiply+0x54>
1000c88e:	3804      	subs	r0, #4
1000c890:	6803      	ldr	r3, [r0, #0]
1000c892:	2b00      	cmp	r3, #0
1000c894:	d105      	bne.n	1000c8a2 <__multiply+0x10e>
1000c896:	9b00      	ldr	r3, [sp, #0]
1000c898:	3b01      	subs	r3, #1
1000c89a:	9300      	str	r3, [sp, #0]
1000c89c:	9b00      	ldr	r3, [sp, #0]
1000c89e:	2b00      	cmp	r3, #0
1000c8a0:	dcf5      	bgt.n	1000c88e <__multiply+0xfa>
1000c8a2:	4663      	mov	r3, ip
1000c8a4:	4660      	mov	r0, ip
1000c8a6:	9a00      	ldr	r2, [sp, #0]
1000c8a8:	611a      	str	r2, [r3, #16]
1000c8aa:	b009      	add	sp, #36	; 0x24
1000c8ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

1000c8b0 <__pow5mult>:
1000c8b0:	2303      	movs	r3, #3
1000c8b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000c8b4:	4013      	ands	r3, r2
1000c8b6:	1c05      	adds	r5, r0, #0
1000c8b8:	1c0e      	adds	r6, r1, #0
1000c8ba:	1c14      	adds	r4, r2, #0
1000c8bc:	2b00      	cmp	r3, #0
1000c8be:	d007      	beq.n	1000c8d0 <__pow5mult+0x20>
1000c8c0:	4a22      	ldr	r2, [pc, #136]	; (1000c94c <__pow5mult+0x9c>)
1000c8c2:	3b01      	subs	r3, #1
1000c8c4:	009b      	lsls	r3, r3, #2
1000c8c6:	589a      	ldr	r2, [r3, r2]
1000c8c8:	2300      	movs	r3, #0
1000c8ca:	f7ff fed4 	bl	1000c676 <__multadd>
1000c8ce:	1c06      	adds	r6, r0, #0
1000c8d0:	10a3      	asrs	r3, r4, #2
1000c8d2:	9301      	str	r3, [sp, #4]
1000c8d4:	d037      	beq.n	1000c946 <__pow5mult+0x96>
1000c8d6:	6a6c      	ldr	r4, [r5, #36]	; 0x24
1000c8d8:	2c00      	cmp	r4, #0
1000c8da:	d107      	bne.n	1000c8ec <__pow5mult+0x3c>
1000c8dc:	2010      	movs	r0, #16
1000c8de:	f7ff fe6f 	bl	1000c5c0 <malloc>
1000c8e2:	6268      	str	r0, [r5, #36]	; 0x24
1000c8e4:	6044      	str	r4, [r0, #4]
1000c8e6:	6084      	str	r4, [r0, #8]
1000c8e8:	6004      	str	r4, [r0, #0]
1000c8ea:	60c4      	str	r4, [r0, #12]
1000c8ec:	6a6f      	ldr	r7, [r5, #36]	; 0x24
1000c8ee:	68bc      	ldr	r4, [r7, #8]
1000c8f0:	2c00      	cmp	r4, #0
1000c8f2:	d110      	bne.n	1000c916 <__pow5mult+0x66>
1000c8f4:	1c28      	adds	r0, r5, #0
1000c8f6:	4916      	ldr	r1, [pc, #88]	; (1000c950 <__pow5mult+0xa0>)
1000c8f8:	f7ff ff43 	bl	1000c782 <__i2b>
1000c8fc:	2300      	movs	r3, #0
1000c8fe:	60b8      	str	r0, [r7, #8]
1000c900:	1c04      	adds	r4, r0, #0
1000c902:	6003      	str	r3, [r0, #0]
1000c904:	e007      	b.n	1000c916 <__pow5mult+0x66>
1000c906:	9b01      	ldr	r3, [sp, #4]
1000c908:	105b      	asrs	r3, r3, #1
1000c90a:	9301      	str	r3, [sp, #4]
1000c90c:	d01b      	beq.n	1000c946 <__pow5mult+0x96>
1000c90e:	6820      	ldr	r0, [r4, #0]
1000c910:	2800      	cmp	r0, #0
1000c912:	d00f      	beq.n	1000c934 <__pow5mult+0x84>
1000c914:	1c04      	adds	r4, r0, #0
1000c916:	9b01      	ldr	r3, [sp, #4]
1000c918:	07db      	lsls	r3, r3, #31
1000c91a:	d5f4      	bpl.n	1000c906 <__pow5mult+0x56>
1000c91c:	1c31      	adds	r1, r6, #0
1000c91e:	1c22      	adds	r2, r4, #0
1000c920:	1c28      	adds	r0, r5, #0
1000c922:	f7ff ff37 	bl	1000c794 <__multiply>
1000c926:	1c07      	adds	r7, r0, #0
1000c928:	1c31      	adds	r1, r6, #0
1000c92a:	1c28      	adds	r0, r5, #0
1000c92c:	f7ff fe8a 	bl	1000c644 <_Bfree>
1000c930:	1c3e      	adds	r6, r7, #0
1000c932:	e7e8      	b.n	1000c906 <__pow5mult+0x56>
1000c934:	1c28      	adds	r0, r5, #0
1000c936:	1c21      	adds	r1, r4, #0
1000c938:	1c22      	adds	r2, r4, #0
1000c93a:	f7ff ff2b 	bl	1000c794 <__multiply>
1000c93e:	2300      	movs	r3, #0
1000c940:	6020      	str	r0, [r4, #0]
1000c942:	6003      	str	r3, [r0, #0]
1000c944:	e7e6      	b.n	1000c914 <__pow5mult+0x64>
1000c946:	1c30      	adds	r0, r6, #0
1000c948:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000c94a:	46c0      	nop			; (mov r8, r8)
1000c94c:	1000eb38 	.word	0x1000eb38
1000c950:	00000271 	.word	0x00000271

1000c954 <__lshift>:
1000c954:	b5f0      	push	{r4, r5, r6, r7, lr}
1000c956:	1c0c      	adds	r4, r1, #0
1000c958:	1c17      	adds	r7, r2, #0
1000c95a:	6923      	ldr	r3, [r4, #16]
1000c95c:	1155      	asrs	r5, r2, #5
1000c95e:	b085      	sub	sp, #20
1000c960:	18eb      	adds	r3, r5, r3
1000c962:	9301      	str	r3, [sp, #4]
1000c964:	3301      	adds	r3, #1
1000c966:	9300      	str	r3, [sp, #0]
1000c968:	6849      	ldr	r1, [r1, #4]
1000c96a:	68a3      	ldr	r3, [r4, #8]
1000c96c:	9002      	str	r0, [sp, #8]
1000c96e:	9a00      	ldr	r2, [sp, #0]
1000c970:	429a      	cmp	r2, r3
1000c972:	dd02      	ble.n	1000c97a <__lshift+0x26>
1000c974:	3101      	adds	r1, #1
1000c976:	005b      	lsls	r3, r3, #1
1000c978:	e7f9      	b.n	1000c96e <__lshift+0x1a>
1000c97a:	9802      	ldr	r0, [sp, #8]
1000c97c:	f7ff fe2a 	bl	1000c5d4 <_Balloc>
1000c980:	1c02      	adds	r2, r0, #0
1000c982:	1c06      	adds	r6, r0, #0
1000c984:	2300      	movs	r3, #0
1000c986:	3214      	adds	r2, #20
1000c988:	42ab      	cmp	r3, r5
1000c98a:	da04      	bge.n	1000c996 <__lshift+0x42>
1000c98c:	2000      	movs	r0, #0
1000c98e:	0099      	lsls	r1, r3, #2
1000c990:	5050      	str	r0, [r2, r1]
1000c992:	3301      	adds	r3, #1
1000c994:	e7f8      	b.n	1000c988 <__lshift+0x34>
1000c996:	43eb      	mvns	r3, r5
1000c998:	17db      	asrs	r3, r3, #31
1000c99a:	401d      	ands	r5, r3
1000c99c:	1c23      	adds	r3, r4, #0
1000c99e:	00ad      	lsls	r5, r5, #2
1000c9a0:	1955      	adds	r5, r2, r5
1000c9a2:	6922      	ldr	r2, [r4, #16]
1000c9a4:	3314      	adds	r3, #20
1000c9a6:	0092      	lsls	r2, r2, #2
1000c9a8:	189a      	adds	r2, r3, r2
1000c9aa:	4694      	mov	ip, r2
1000c9ac:	221f      	movs	r2, #31
1000c9ae:	4017      	ands	r7, r2
1000c9b0:	d014      	beq.n	1000c9dc <__lshift+0x88>
1000c9b2:	3201      	adds	r2, #1
1000c9b4:	1bd2      	subs	r2, r2, r7
1000c9b6:	9203      	str	r2, [sp, #12]
1000c9b8:	2200      	movs	r2, #0
1000c9ba:	6819      	ldr	r1, [r3, #0]
1000c9bc:	1c28      	adds	r0, r5, #0
1000c9be:	40b9      	lsls	r1, r7
1000c9c0:	430a      	orrs	r2, r1
1000c9c2:	c504      	stmia	r5!, {r2}
1000c9c4:	cb04      	ldmia	r3!, {r2}
1000c9c6:	9903      	ldr	r1, [sp, #12]
1000c9c8:	40ca      	lsrs	r2, r1
1000c9ca:	459c      	cmp	ip, r3
1000c9cc:	d8f5      	bhi.n	1000c9ba <__lshift+0x66>
1000c9ce:	6042      	str	r2, [r0, #4]
1000c9d0:	2a00      	cmp	r2, #0
1000c9d2:	d007      	beq.n	1000c9e4 <__lshift+0x90>
1000c9d4:	9b01      	ldr	r3, [sp, #4]
1000c9d6:	3302      	adds	r3, #2
1000c9d8:	9300      	str	r3, [sp, #0]
1000c9da:	e003      	b.n	1000c9e4 <__lshift+0x90>
1000c9dc:	cb04      	ldmia	r3!, {r2}
1000c9de:	c504      	stmia	r5!, {r2}
1000c9e0:	459c      	cmp	ip, r3
1000c9e2:	d8fb      	bhi.n	1000c9dc <__lshift+0x88>
1000c9e4:	9b00      	ldr	r3, [sp, #0]
1000c9e6:	9802      	ldr	r0, [sp, #8]
1000c9e8:	3b01      	subs	r3, #1
1000c9ea:	6133      	str	r3, [r6, #16]
1000c9ec:	1c21      	adds	r1, r4, #0
1000c9ee:	f7ff fe29 	bl	1000c644 <_Bfree>
1000c9f2:	1c30      	adds	r0, r6, #0
1000c9f4:	b005      	add	sp, #20
1000c9f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

1000c9f8 <__mcmp>:
1000c9f8:	6903      	ldr	r3, [r0, #16]
1000c9fa:	690a      	ldr	r2, [r1, #16]
1000c9fc:	b510      	push	{r4, lr}
1000c9fe:	1a9b      	subs	r3, r3, r2
1000ca00:	1c04      	adds	r4, r0, #0
1000ca02:	1e18      	subs	r0, r3, #0
1000ca04:	d112      	bne.n	1000ca2c <__mcmp+0x34>
1000ca06:	0093      	lsls	r3, r2, #2
1000ca08:	3414      	adds	r4, #20
1000ca0a:	3114      	adds	r1, #20
1000ca0c:	18e2      	adds	r2, r4, r3
1000ca0e:	18c9      	adds	r1, r1, r3
1000ca10:	3a04      	subs	r2, #4
1000ca12:	3904      	subs	r1, #4
1000ca14:	6813      	ldr	r3, [r2, #0]
1000ca16:	6808      	ldr	r0, [r1, #0]
1000ca18:	4283      	cmp	r3, r0
1000ca1a:	d004      	beq.n	1000ca26 <__mcmp+0x2e>
1000ca1c:	4283      	cmp	r3, r0
1000ca1e:	419b      	sbcs	r3, r3
1000ca20:	2001      	movs	r0, #1
1000ca22:	4318      	orrs	r0, r3
1000ca24:	e002      	b.n	1000ca2c <__mcmp+0x34>
1000ca26:	42a2      	cmp	r2, r4
1000ca28:	d8f2      	bhi.n	1000ca10 <__mcmp+0x18>
1000ca2a:	2000      	movs	r0, #0
1000ca2c:	bd10      	pop	{r4, pc}

1000ca2e <__mdiff>:
1000ca2e:	b5f0      	push	{r4, r5, r6, r7, lr}
1000ca30:	1c07      	adds	r7, r0, #0
1000ca32:	b085      	sub	sp, #20
1000ca34:	1c08      	adds	r0, r1, #0
1000ca36:	1c0c      	adds	r4, r1, #0
1000ca38:	1c11      	adds	r1, r2, #0
1000ca3a:	1c15      	adds	r5, r2, #0
1000ca3c:	f7ff ffdc 	bl	1000c9f8 <__mcmp>
1000ca40:	1e06      	subs	r6, r0, #0
1000ca42:	d107      	bne.n	1000ca54 <__mdiff+0x26>
1000ca44:	1c38      	adds	r0, r7, #0
1000ca46:	1c31      	adds	r1, r6, #0
1000ca48:	f7ff fdc4 	bl	1000c5d4 <_Balloc>
1000ca4c:	2301      	movs	r3, #1
1000ca4e:	6146      	str	r6, [r0, #20]
1000ca50:	6103      	str	r3, [r0, #16]
1000ca52:	e055      	b.n	1000cb00 <__mdiff+0xd2>
1000ca54:	2300      	movs	r3, #0
1000ca56:	9301      	str	r3, [sp, #4]
1000ca58:	4298      	cmp	r0, r3
1000ca5a:	da04      	bge.n	1000ca66 <__mdiff+0x38>
1000ca5c:	1c23      	adds	r3, r4, #0
1000ca5e:	1c2c      	adds	r4, r5, #0
1000ca60:	1c1d      	adds	r5, r3, #0
1000ca62:	2301      	movs	r3, #1
1000ca64:	9301      	str	r3, [sp, #4]
1000ca66:	1c38      	adds	r0, r7, #0
1000ca68:	6861      	ldr	r1, [r4, #4]
1000ca6a:	f7ff fdb3 	bl	1000c5d4 <_Balloc>
1000ca6e:	9b01      	ldr	r3, [sp, #4]
1000ca70:	6926      	ldr	r6, [r4, #16]
1000ca72:	1c2f      	adds	r7, r5, #0
1000ca74:	60c3      	str	r3, [r0, #12]
1000ca76:	3414      	adds	r4, #20
1000ca78:	00b3      	lsls	r3, r6, #2
1000ca7a:	18e3      	adds	r3, r4, r3
1000ca7c:	1c02      	adds	r2, r0, #0
1000ca7e:	9302      	str	r3, [sp, #8]
1000ca80:	692b      	ldr	r3, [r5, #16]
1000ca82:	2500      	movs	r5, #0
1000ca84:	3714      	adds	r7, #20
1000ca86:	009b      	lsls	r3, r3, #2
1000ca88:	18fb      	adds	r3, r7, r3
1000ca8a:	9303      	str	r3, [sp, #12]
1000ca8c:	3214      	adds	r2, #20
1000ca8e:	cc08      	ldmia	r4!, {r3}
1000ca90:	4669      	mov	r1, sp
1000ca92:	469c      	mov	ip, r3
1000ca94:	cf08      	ldmia	r7!, {r3}
1000ca96:	3204      	adds	r2, #4
1000ca98:	9300      	str	r3, [sp, #0]
1000ca9a:	4663      	mov	r3, ip
1000ca9c:	808b      	strh	r3, [r1, #4]
1000ca9e:	888b      	ldrh	r3, [r1, #4]
1000caa0:	195d      	adds	r5, r3, r5
1000caa2:	9b00      	ldr	r3, [sp, #0]
1000caa4:	b29b      	uxth	r3, r3
1000caa6:	1aeb      	subs	r3, r5, r3
1000caa8:	4665      	mov	r5, ip
1000caaa:	9301      	str	r3, [sp, #4]
1000caac:	9b00      	ldr	r3, [sp, #0]
1000caae:	0c2d      	lsrs	r5, r5, #16
1000cab0:	0c19      	lsrs	r1, r3, #16
1000cab2:	9b01      	ldr	r3, [sp, #4]
1000cab4:	1a69      	subs	r1, r5, r1
1000cab6:	141d      	asrs	r5, r3, #16
1000cab8:	1f13      	subs	r3, r2, #4
1000caba:	469c      	mov	ip, r3
1000cabc:	466b      	mov	r3, sp
1000cabe:	1949      	adds	r1, r1, r5
1000cac0:	889b      	ldrh	r3, [r3, #4]
1000cac2:	140d      	asrs	r5, r1, #16
1000cac4:	0409      	lsls	r1, r1, #16
1000cac6:	430b      	orrs	r3, r1
1000cac8:	4661      	mov	r1, ip
1000caca:	600b      	str	r3, [r1, #0]
1000cacc:	9b03      	ldr	r3, [sp, #12]
1000cace:	429f      	cmp	r7, r3
1000cad0:	d3dd      	bcc.n	1000ca8e <__mdiff+0x60>
1000cad2:	9902      	ldr	r1, [sp, #8]
1000cad4:	1c13      	adds	r3, r2, #0
1000cad6:	428c      	cmp	r4, r1
1000cad8:	d20b      	bcs.n	1000caf2 <__mdiff+0xc4>
1000cada:	cc08      	ldmia	r4!, {r3}
1000cadc:	b299      	uxth	r1, r3
1000cade:	1949      	adds	r1, r1, r5
1000cae0:	140d      	asrs	r5, r1, #16
1000cae2:	0c1b      	lsrs	r3, r3, #16
1000cae4:	18eb      	adds	r3, r5, r3
1000cae6:	141d      	asrs	r5, r3, #16
1000cae8:	b289      	uxth	r1, r1
1000caea:	041b      	lsls	r3, r3, #16
1000caec:	430b      	orrs	r3, r1
1000caee:	c208      	stmia	r2!, {r3}
1000caf0:	e7ef      	b.n	1000cad2 <__mdiff+0xa4>
1000caf2:	3b04      	subs	r3, #4
1000caf4:	681a      	ldr	r2, [r3, #0]
1000caf6:	2a00      	cmp	r2, #0
1000caf8:	d101      	bne.n	1000cafe <__mdiff+0xd0>
1000cafa:	3e01      	subs	r6, #1
1000cafc:	e7f9      	b.n	1000caf2 <__mdiff+0xc4>
1000cafe:	6106      	str	r6, [r0, #16]
1000cb00:	b005      	add	sp, #20
1000cb02:	bdf0      	pop	{r4, r5, r6, r7, pc}

1000cb04 <__d2b>:
1000cb04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000cb06:	1c1d      	adds	r5, r3, #0
1000cb08:	2101      	movs	r1, #1
1000cb0a:	9f08      	ldr	r7, [sp, #32]
1000cb0c:	1c14      	adds	r4, r2, #0
1000cb0e:	f7ff fd61 	bl	1000c5d4 <_Balloc>
1000cb12:	032b      	lsls	r3, r5, #12
1000cb14:	006d      	lsls	r5, r5, #1
1000cb16:	1c06      	adds	r6, r0, #0
1000cb18:	0b1b      	lsrs	r3, r3, #12
1000cb1a:	0d6d      	lsrs	r5, r5, #21
1000cb1c:	d002      	beq.n	1000cb24 <__d2b+0x20>
1000cb1e:	2280      	movs	r2, #128	; 0x80
1000cb20:	0352      	lsls	r2, r2, #13
1000cb22:	4313      	orrs	r3, r2
1000cb24:	9301      	str	r3, [sp, #4]
1000cb26:	2c00      	cmp	r4, #0
1000cb28:	d018      	beq.n	1000cb5c <__d2b+0x58>
1000cb2a:	4668      	mov	r0, sp
1000cb2c:	9400      	str	r4, [sp, #0]
1000cb2e:	f7ff fdf9 	bl	1000c724 <__lo0bits>
1000cb32:	9c00      	ldr	r4, [sp, #0]
1000cb34:	2800      	cmp	r0, #0
1000cb36:	d009      	beq.n	1000cb4c <__d2b+0x48>
1000cb38:	2320      	movs	r3, #32
1000cb3a:	9a01      	ldr	r2, [sp, #4]
1000cb3c:	1a19      	subs	r1, r3, r0
1000cb3e:	1c13      	adds	r3, r2, #0
1000cb40:	408b      	lsls	r3, r1
1000cb42:	40c2      	lsrs	r2, r0
1000cb44:	4323      	orrs	r3, r4
1000cb46:	6173      	str	r3, [r6, #20]
1000cb48:	9201      	str	r2, [sp, #4]
1000cb4a:	e000      	b.n	1000cb4e <__d2b+0x4a>
1000cb4c:	6174      	str	r4, [r6, #20]
1000cb4e:	9c01      	ldr	r4, [sp, #4]
1000cb50:	61b4      	str	r4, [r6, #24]
1000cb52:	1e63      	subs	r3, r4, #1
1000cb54:	419c      	sbcs	r4, r3
1000cb56:	3401      	adds	r4, #1
1000cb58:	6134      	str	r4, [r6, #16]
1000cb5a:	e007      	b.n	1000cb6c <__d2b+0x68>
1000cb5c:	a801      	add	r0, sp, #4
1000cb5e:	f7ff fde1 	bl	1000c724 <__lo0bits>
1000cb62:	2401      	movs	r4, #1
1000cb64:	9b01      	ldr	r3, [sp, #4]
1000cb66:	6134      	str	r4, [r6, #16]
1000cb68:	6173      	str	r3, [r6, #20]
1000cb6a:	3020      	adds	r0, #32
1000cb6c:	2d00      	cmp	r5, #0
1000cb6e:	d006      	beq.n	1000cb7e <__d2b+0x7a>
1000cb70:	4b0b      	ldr	r3, [pc, #44]	; (1000cba0 <__d2b+0x9c>)
1000cb72:	18ed      	adds	r5, r5, r3
1000cb74:	2335      	movs	r3, #53	; 0x35
1000cb76:	182d      	adds	r5, r5, r0
1000cb78:	603d      	str	r5, [r7, #0]
1000cb7a:	1a18      	subs	r0, r3, r0
1000cb7c:	e00b      	b.n	1000cb96 <__d2b+0x92>
1000cb7e:	4b09      	ldr	r3, [pc, #36]	; (1000cba4 <__d2b+0xa0>)
1000cb80:	18c0      	adds	r0, r0, r3
1000cb82:	4b09      	ldr	r3, [pc, #36]	; (1000cba8 <__d2b+0xa4>)
1000cb84:	6038      	str	r0, [r7, #0]
1000cb86:	18e3      	adds	r3, r4, r3
1000cb88:	009b      	lsls	r3, r3, #2
1000cb8a:	18f3      	adds	r3, r6, r3
1000cb8c:	6958      	ldr	r0, [r3, #20]
1000cb8e:	f7ff fdae 	bl	1000c6ee <__hi0bits>
1000cb92:	0164      	lsls	r4, r4, #5
1000cb94:	1a20      	subs	r0, r4, r0
1000cb96:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000cb98:	6018      	str	r0, [r3, #0]
1000cb9a:	1c30      	adds	r0, r6, #0
1000cb9c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1000cb9e:	46c0      	nop			; (mov r8, r8)
1000cba0:	fffffbcd 	.word	0xfffffbcd
1000cba4:	fffffbce 	.word	0xfffffbce
1000cba8:	3fffffff 	.word	0x3fffffff

1000cbac <_mprec_log10>:
1000cbac:	b510      	push	{r4, lr}
1000cbae:	1e04      	subs	r4, r0, #0
1000cbb0:	2c17      	cmp	r4, #23
1000cbb2:	dc05      	bgt.n	1000cbc0 <_mprec_log10+0x14>
1000cbb4:	4b07      	ldr	r3, [pc, #28]	; (1000cbd4 <_mprec_log10+0x28>)
1000cbb6:	00c4      	lsls	r4, r0, #3
1000cbb8:	191c      	adds	r4, r3, r4
1000cbba:	6820      	ldr	r0, [r4, #0]
1000cbbc:	6861      	ldr	r1, [r4, #4]
1000cbbe:	e008      	b.n	1000cbd2 <_mprec_log10+0x26>
1000cbc0:	2000      	movs	r0, #0
1000cbc2:	4905      	ldr	r1, [pc, #20]	; (1000cbd8 <_mprec_log10+0x2c>)
1000cbc4:	2200      	movs	r2, #0
1000cbc6:	4b05      	ldr	r3, [pc, #20]	; (1000cbdc <_mprec_log10+0x30>)
1000cbc8:	3c01      	subs	r4, #1
1000cbca:	f7fe fa13 	bl	1000aff4 <__aeabi_dmul>
1000cbce:	2c00      	cmp	r4, #0
1000cbd0:	d1f8      	bne.n	1000cbc4 <_mprec_log10+0x18>
1000cbd2:	bd10      	pop	{r4, pc}
1000cbd4:	1000ea48 	.word	0x1000ea48
1000cbd8:	3ff00000 	.word	0x3ff00000
1000cbdc:	40240000 	.word	0x40240000

1000cbe0 <_calloc_r>:
1000cbe0:	434a      	muls	r2, r1
1000cbe2:	b538      	push	{r3, r4, r5, lr}
1000cbe4:	1c11      	adds	r1, r2, #0
1000cbe6:	1c14      	adds	r4, r2, #0
1000cbe8:	f000 f84e 	bl	1000cc88 <_malloc_r>
1000cbec:	1e05      	subs	r5, r0, #0
1000cbee:	d003      	beq.n	1000cbf8 <_calloc_r+0x18>
1000cbf0:	2100      	movs	r1, #0
1000cbf2:	1c22      	adds	r2, r4, #0
1000cbf4:	f7ff f967 	bl	1000bec6 <memset>
1000cbf8:	1c28      	adds	r0, r5, #0
1000cbfa:	bd38      	pop	{r3, r4, r5, pc}

1000cbfc <_free_r>:
1000cbfc:	b530      	push	{r4, r5, lr}
1000cbfe:	2900      	cmp	r1, #0
1000cc00:	d03e      	beq.n	1000cc80 <_free_r+0x84>
1000cc02:	3904      	subs	r1, #4
1000cc04:	680b      	ldr	r3, [r1, #0]
1000cc06:	2b00      	cmp	r3, #0
1000cc08:	da00      	bge.n	1000cc0c <_free_r+0x10>
1000cc0a:	18c9      	adds	r1, r1, r3
1000cc0c:	4a1d      	ldr	r2, [pc, #116]	; (1000cc84 <_free_r+0x88>)
1000cc0e:	6813      	ldr	r3, [r2, #0]
1000cc10:	1c14      	adds	r4, r2, #0
1000cc12:	2b00      	cmp	r3, #0
1000cc14:	d102      	bne.n	1000cc1c <_free_r+0x20>
1000cc16:	604b      	str	r3, [r1, #4]
1000cc18:	6011      	str	r1, [r2, #0]
1000cc1a:	e031      	b.n	1000cc80 <_free_r+0x84>
1000cc1c:	4299      	cmp	r1, r3
1000cc1e:	d20d      	bcs.n	1000cc3c <_free_r+0x40>
1000cc20:	6808      	ldr	r0, [r1, #0]
1000cc22:	180a      	adds	r2, r1, r0
1000cc24:	429a      	cmp	r2, r3
1000cc26:	d103      	bne.n	1000cc30 <_free_r+0x34>
1000cc28:	6813      	ldr	r3, [r2, #0]
1000cc2a:	18c3      	adds	r3, r0, r3
1000cc2c:	600b      	str	r3, [r1, #0]
1000cc2e:	6853      	ldr	r3, [r2, #4]
1000cc30:	604b      	str	r3, [r1, #4]
1000cc32:	6021      	str	r1, [r4, #0]
1000cc34:	e024      	b.n	1000cc80 <_free_r+0x84>
1000cc36:	428a      	cmp	r2, r1
1000cc38:	d803      	bhi.n	1000cc42 <_free_r+0x46>
1000cc3a:	1c13      	adds	r3, r2, #0
1000cc3c:	685a      	ldr	r2, [r3, #4]
1000cc3e:	2a00      	cmp	r2, #0
1000cc40:	d1f9      	bne.n	1000cc36 <_free_r+0x3a>
1000cc42:	681d      	ldr	r5, [r3, #0]
1000cc44:	195c      	adds	r4, r3, r5
1000cc46:	428c      	cmp	r4, r1
1000cc48:	d10b      	bne.n	1000cc62 <_free_r+0x66>
1000cc4a:	6809      	ldr	r1, [r1, #0]
1000cc4c:	1869      	adds	r1, r5, r1
1000cc4e:	1858      	adds	r0, r3, r1
1000cc50:	6019      	str	r1, [r3, #0]
1000cc52:	4290      	cmp	r0, r2
1000cc54:	d114      	bne.n	1000cc80 <_free_r+0x84>
1000cc56:	6810      	ldr	r0, [r2, #0]
1000cc58:	6852      	ldr	r2, [r2, #4]
1000cc5a:	1809      	adds	r1, r1, r0
1000cc5c:	6019      	str	r1, [r3, #0]
1000cc5e:	605a      	str	r2, [r3, #4]
1000cc60:	e00e      	b.n	1000cc80 <_free_r+0x84>
1000cc62:	428c      	cmp	r4, r1
1000cc64:	d902      	bls.n	1000cc6c <_free_r+0x70>
1000cc66:	230c      	movs	r3, #12
1000cc68:	6003      	str	r3, [r0, #0]
1000cc6a:	e009      	b.n	1000cc80 <_free_r+0x84>
1000cc6c:	6808      	ldr	r0, [r1, #0]
1000cc6e:	180c      	adds	r4, r1, r0
1000cc70:	4294      	cmp	r4, r2
1000cc72:	d103      	bne.n	1000cc7c <_free_r+0x80>
1000cc74:	6814      	ldr	r4, [r2, #0]
1000cc76:	6852      	ldr	r2, [r2, #4]
1000cc78:	1900      	adds	r0, r0, r4
1000cc7a:	6008      	str	r0, [r1, #0]
1000cc7c:	604a      	str	r2, [r1, #4]
1000cc7e:	6059      	str	r1, [r3, #4]
1000cc80:	bd30      	pop	{r4, r5, pc}
1000cc82:	46c0      	nop			; (mov r8, r8)
1000cc84:	1000ec40 	.word	0x1000ec40

1000cc88 <_malloc_r>:
1000cc88:	2303      	movs	r3, #3
1000cc8a:	b570      	push	{r4, r5, r6, lr}
1000cc8c:	1ccc      	adds	r4, r1, #3
1000cc8e:	439c      	bics	r4, r3
1000cc90:	3408      	adds	r4, #8
1000cc92:	1c05      	adds	r5, r0, #0
1000cc94:	2c0c      	cmp	r4, #12
1000cc96:	d201      	bcs.n	1000cc9c <_malloc_r+0x14>
1000cc98:	240c      	movs	r4, #12
1000cc9a:	e005      	b.n	1000cca8 <_malloc_r+0x20>
1000cc9c:	2c00      	cmp	r4, #0
1000cc9e:	da03      	bge.n	1000cca8 <_malloc_r+0x20>
1000cca0:	230c      	movs	r3, #12
1000cca2:	2000      	movs	r0, #0
1000cca4:	602b      	str	r3, [r5, #0]
1000cca6:	e042      	b.n	1000cd2e <_malloc_r+0xa6>
1000cca8:	428c      	cmp	r4, r1
1000ccaa:	d3f9      	bcc.n	1000cca0 <_malloc_r+0x18>
1000ccac:	4a20      	ldr	r2, [pc, #128]	; (1000cd30 <_malloc_r+0xa8>)
1000ccae:	6813      	ldr	r3, [r2, #0]
1000ccb0:	1c10      	adds	r0, r2, #0
1000ccb2:	1c19      	adds	r1, r3, #0
1000ccb4:	2900      	cmp	r1, #0
1000ccb6:	d013      	beq.n	1000cce0 <_malloc_r+0x58>
1000ccb8:	680a      	ldr	r2, [r1, #0]
1000ccba:	1b12      	subs	r2, r2, r4
1000ccbc:	d40d      	bmi.n	1000ccda <_malloc_r+0x52>
1000ccbe:	2a0b      	cmp	r2, #11
1000ccc0:	d902      	bls.n	1000ccc8 <_malloc_r+0x40>
1000ccc2:	600a      	str	r2, [r1, #0]
1000ccc4:	188b      	adds	r3, r1, r2
1000ccc6:	e01f      	b.n	1000cd08 <_malloc_r+0x80>
1000ccc8:	428b      	cmp	r3, r1
1000ccca:	d102      	bne.n	1000ccd2 <_malloc_r+0x4a>
1000cccc:	685a      	ldr	r2, [r3, #4]
1000ccce:	6002      	str	r2, [r0, #0]
1000ccd0:	e01b      	b.n	1000cd0a <_malloc_r+0x82>
1000ccd2:	684a      	ldr	r2, [r1, #4]
1000ccd4:	605a      	str	r2, [r3, #4]
1000ccd6:	1c0b      	adds	r3, r1, #0
1000ccd8:	e017      	b.n	1000cd0a <_malloc_r+0x82>
1000ccda:	1c0b      	adds	r3, r1, #0
1000ccdc:	6849      	ldr	r1, [r1, #4]
1000ccde:	e7e9      	b.n	1000ccb4 <_malloc_r+0x2c>
1000cce0:	4e14      	ldr	r6, [pc, #80]	; (1000cd34 <_malloc_r+0xac>)
1000cce2:	6833      	ldr	r3, [r6, #0]
1000cce4:	2b00      	cmp	r3, #0
1000cce6:	d103      	bne.n	1000ccf0 <_malloc_r+0x68>
1000cce8:	1c28      	adds	r0, r5, #0
1000ccea:	f000 fae3 	bl	1000d2b4 <_sbrk_r>
1000ccee:	6030      	str	r0, [r6, #0]
1000ccf0:	1c28      	adds	r0, r5, #0
1000ccf2:	1c21      	adds	r1, r4, #0
1000ccf4:	f000 fade 	bl	1000d2b4 <_sbrk_r>
1000ccf8:	1c03      	adds	r3, r0, #0
1000ccfa:	1c42      	adds	r2, r0, #1
1000ccfc:	d0d0      	beq.n	1000cca0 <_malloc_r+0x18>
1000ccfe:	2203      	movs	r2, #3
1000cd00:	1cc6      	adds	r6, r0, #3
1000cd02:	4396      	bics	r6, r2
1000cd04:	4286      	cmp	r6, r0
1000cd06:	d10a      	bne.n	1000cd1e <_malloc_r+0x96>
1000cd08:	601c      	str	r4, [r3, #0]
1000cd0a:	1c18      	adds	r0, r3, #0
1000cd0c:	2107      	movs	r1, #7
1000cd0e:	300b      	adds	r0, #11
1000cd10:	1d1a      	adds	r2, r3, #4
1000cd12:	4388      	bics	r0, r1
1000cd14:	1a82      	subs	r2, r0, r2
1000cd16:	d00a      	beq.n	1000cd2e <_malloc_r+0xa6>
1000cd18:	4251      	negs	r1, r2
1000cd1a:	5099      	str	r1, [r3, r2]
1000cd1c:	e007      	b.n	1000cd2e <_malloc_r+0xa6>
1000cd1e:	1a31      	subs	r1, r6, r0
1000cd20:	1c28      	adds	r0, r5, #0
1000cd22:	f000 fac7 	bl	1000d2b4 <_sbrk_r>
1000cd26:	1c43      	adds	r3, r0, #1
1000cd28:	d0ba      	beq.n	1000cca0 <_malloc_r+0x18>
1000cd2a:	1c33      	adds	r3, r6, #0
1000cd2c:	e7ec      	b.n	1000cd08 <_malloc_r+0x80>
1000cd2e:	bd70      	pop	{r4, r5, r6, pc}
1000cd30:	1000ec40 	.word	0x1000ec40
1000cd34:	1000ec3c 	.word	0x1000ec3c

1000cd38 <__sfputc_r>:
1000cd38:	6893      	ldr	r3, [r2, #8]
1000cd3a:	b510      	push	{r4, lr}
1000cd3c:	3b01      	subs	r3, #1
1000cd3e:	6093      	str	r3, [r2, #8]
1000cd40:	2b00      	cmp	r3, #0
1000cd42:	da05      	bge.n	1000cd50 <__sfputc_r+0x18>
1000cd44:	6994      	ldr	r4, [r2, #24]
1000cd46:	42a3      	cmp	r3, r4
1000cd48:	db08      	blt.n	1000cd5c <__sfputc_r+0x24>
1000cd4a:	b2cb      	uxtb	r3, r1
1000cd4c:	2b0a      	cmp	r3, #10
1000cd4e:	d005      	beq.n	1000cd5c <__sfputc_r+0x24>
1000cd50:	6813      	ldr	r3, [r2, #0]
1000cd52:	1c58      	adds	r0, r3, #1
1000cd54:	6010      	str	r0, [r2, #0]
1000cd56:	7019      	strb	r1, [r3, #0]
1000cd58:	b2c8      	uxtb	r0, r1
1000cd5a:	e001      	b.n	1000cd60 <__sfputc_r+0x28>
1000cd5c:	f000 fb10 	bl	1000d380 <__swbuf_r>
1000cd60:	bd10      	pop	{r4, pc}

1000cd62 <__sfputs_r>:
1000cd62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000cd64:	1c06      	adds	r6, r0, #0
1000cd66:	1c0f      	adds	r7, r1, #0
1000cd68:	1c14      	adds	r4, r2, #0
1000cd6a:	18d5      	adds	r5, r2, r3
1000cd6c:	42ac      	cmp	r4, r5
1000cd6e:	d008      	beq.n	1000cd82 <__sfputs_r+0x20>
1000cd70:	7821      	ldrb	r1, [r4, #0]
1000cd72:	1c30      	adds	r0, r6, #0
1000cd74:	1c3a      	adds	r2, r7, #0
1000cd76:	f7ff ffdf 	bl	1000cd38 <__sfputc_r>
1000cd7a:	3401      	adds	r4, #1
1000cd7c:	1c43      	adds	r3, r0, #1
1000cd7e:	d1f5      	bne.n	1000cd6c <__sfputs_r+0xa>
1000cd80:	e000      	b.n	1000cd84 <__sfputs_r+0x22>
1000cd82:	2000      	movs	r0, #0
1000cd84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

1000cd88 <_vfiprintf_r>:
1000cd88:	b5f0      	push	{r4, r5, r6, r7, lr}
1000cd8a:	b09f      	sub	sp, #124	; 0x7c
1000cd8c:	1c06      	adds	r6, r0, #0
1000cd8e:	1c0f      	adds	r7, r1, #0
1000cd90:	9202      	str	r2, [sp, #8]
1000cd92:	9305      	str	r3, [sp, #20]
1000cd94:	2800      	cmp	r0, #0
1000cd96:	d004      	beq.n	1000cda2 <_vfiprintf_r+0x1a>
1000cd98:	6983      	ldr	r3, [r0, #24]
1000cd9a:	2b00      	cmp	r3, #0
1000cd9c:	d101      	bne.n	1000cda2 <_vfiprintf_r+0x1a>
1000cd9e:	f7ff fb7d 	bl	1000c49c <__sinit>
1000cda2:	4b79      	ldr	r3, [pc, #484]	; (1000cf88 <_vfiprintf_r+0x200>)
1000cda4:	429f      	cmp	r7, r3
1000cda6:	d101      	bne.n	1000cdac <_vfiprintf_r+0x24>
1000cda8:	6877      	ldr	r7, [r6, #4]
1000cdaa:	e008      	b.n	1000cdbe <_vfiprintf_r+0x36>
1000cdac:	4b77      	ldr	r3, [pc, #476]	; (1000cf8c <_vfiprintf_r+0x204>)
1000cdae:	429f      	cmp	r7, r3
1000cdb0:	d101      	bne.n	1000cdb6 <_vfiprintf_r+0x2e>
1000cdb2:	68b7      	ldr	r7, [r6, #8]
1000cdb4:	e003      	b.n	1000cdbe <_vfiprintf_r+0x36>
1000cdb6:	4b76      	ldr	r3, [pc, #472]	; (1000cf90 <_vfiprintf_r+0x208>)
1000cdb8:	429f      	cmp	r7, r3
1000cdba:	d100      	bne.n	1000cdbe <_vfiprintf_r+0x36>
1000cdbc:	68f7      	ldr	r7, [r6, #12]
1000cdbe:	89bb      	ldrh	r3, [r7, #12]
1000cdc0:	071b      	lsls	r3, r3, #28
1000cdc2:	d50a      	bpl.n	1000cdda <_vfiprintf_r+0x52>
1000cdc4:	693b      	ldr	r3, [r7, #16]
1000cdc6:	2b00      	cmp	r3, #0
1000cdc8:	d007      	beq.n	1000cdda <_vfiprintf_r+0x52>
1000cdca:	2300      	movs	r3, #0
1000cdcc:	ad06      	add	r5, sp, #24
1000cdce:	616b      	str	r3, [r5, #20]
1000cdd0:	3320      	adds	r3, #32
1000cdd2:	766b      	strb	r3, [r5, #25]
1000cdd4:	3310      	adds	r3, #16
1000cdd6:	76ab      	strb	r3, [r5, #26]
1000cdd8:	e03d      	b.n	1000ce56 <_vfiprintf_r+0xce>
1000cdda:	1c30      	adds	r0, r6, #0
1000cddc:	1c39      	adds	r1, r7, #0
1000cdde:	f000 fb3b 	bl	1000d458 <__swsetup_r>
1000cde2:	2800      	cmp	r0, #0
1000cde4:	d0f1      	beq.n	1000cdca <_vfiprintf_r+0x42>
1000cde6:	2001      	movs	r0, #1
1000cde8:	4240      	negs	r0, r0
1000cdea:	e0ca      	b.n	1000cf82 <_vfiprintf_r+0x1fa>
1000cdec:	9a05      	ldr	r2, [sp, #20]
1000cdee:	1d11      	adds	r1, r2, #4
1000cdf0:	6812      	ldr	r2, [r2, #0]
1000cdf2:	9105      	str	r1, [sp, #20]
1000cdf4:	2a00      	cmp	r2, #0
1000cdf6:	db7e      	blt.n	1000cef6 <_vfiprintf_r+0x16e>
1000cdf8:	9209      	str	r2, [sp, #36]	; 0x24
1000cdfa:	3401      	adds	r4, #1
1000cdfc:	7823      	ldrb	r3, [r4, #0]
1000cdfe:	2b2e      	cmp	r3, #46	; 0x2e
1000ce00:	d100      	bne.n	1000ce04 <_vfiprintf_r+0x7c>
1000ce02:	e089      	b.n	1000cf18 <_vfiprintf_r+0x190>
1000ce04:	7821      	ldrb	r1, [r4, #0]
1000ce06:	4863      	ldr	r0, [pc, #396]	; (1000cf94 <_vfiprintf_r+0x20c>)
1000ce08:	2203      	movs	r2, #3
1000ce0a:	f001 fa9f 	bl	1000e34c <memchr>
1000ce0e:	2800      	cmp	r0, #0
1000ce10:	d008      	beq.n	1000ce24 <_vfiprintf_r+0x9c>
1000ce12:	4b60      	ldr	r3, [pc, #384]	; (1000cf94 <_vfiprintf_r+0x20c>)
1000ce14:	3401      	adds	r4, #1
1000ce16:	1ac0      	subs	r0, r0, r3
1000ce18:	2340      	movs	r3, #64	; 0x40
1000ce1a:	4083      	lsls	r3, r0
1000ce1c:	1c18      	adds	r0, r3, #0
1000ce1e:	682b      	ldr	r3, [r5, #0]
1000ce20:	4318      	orrs	r0, r3
1000ce22:	6028      	str	r0, [r5, #0]
1000ce24:	7821      	ldrb	r1, [r4, #0]
1000ce26:	1c63      	adds	r3, r4, #1
1000ce28:	485b      	ldr	r0, [pc, #364]	; (1000cf98 <_vfiprintf_r+0x210>)
1000ce2a:	2206      	movs	r2, #6
1000ce2c:	9302      	str	r3, [sp, #8]
1000ce2e:	7629      	strb	r1, [r5, #24]
1000ce30:	f001 fa8c 	bl	1000e34c <memchr>
1000ce34:	2800      	cmp	r0, #0
1000ce36:	d100      	bne.n	1000ce3a <_vfiprintf_r+0xb2>
1000ce38:	e091      	b.n	1000cf5e <_vfiprintf_r+0x1d6>
1000ce3a:	4b58      	ldr	r3, [pc, #352]	; (1000cf9c <_vfiprintf_r+0x214>)
1000ce3c:	2b00      	cmp	r3, #0
1000ce3e:	d000      	beq.n	1000ce42 <_vfiprintf_r+0xba>
1000ce40:	e084      	b.n	1000cf4c <_vfiprintf_r+0x1c4>
1000ce42:	2207      	movs	r2, #7
1000ce44:	9b05      	ldr	r3, [sp, #20]
1000ce46:	3307      	adds	r3, #7
1000ce48:	4393      	bics	r3, r2
1000ce4a:	3308      	adds	r3, #8
1000ce4c:	9305      	str	r3, [sp, #20]
1000ce4e:	696b      	ldr	r3, [r5, #20]
1000ce50:	9a03      	ldr	r2, [sp, #12]
1000ce52:	189b      	adds	r3, r3, r2
1000ce54:	616b      	str	r3, [r5, #20]
1000ce56:	9c02      	ldr	r4, [sp, #8]
1000ce58:	7823      	ldrb	r3, [r4, #0]
1000ce5a:	2b00      	cmp	r3, #0
1000ce5c:	d104      	bne.n	1000ce68 <_vfiprintf_r+0xe0>
1000ce5e:	9b02      	ldr	r3, [sp, #8]
1000ce60:	1ae3      	subs	r3, r4, r3
1000ce62:	9304      	str	r3, [sp, #16]
1000ce64:	d011      	beq.n	1000ce8a <_vfiprintf_r+0x102>
1000ce66:	e003      	b.n	1000ce70 <_vfiprintf_r+0xe8>
1000ce68:	2b25      	cmp	r3, #37	; 0x25
1000ce6a:	d0f8      	beq.n	1000ce5e <_vfiprintf_r+0xd6>
1000ce6c:	3401      	adds	r4, #1
1000ce6e:	e7f3      	b.n	1000ce58 <_vfiprintf_r+0xd0>
1000ce70:	9b04      	ldr	r3, [sp, #16]
1000ce72:	1c30      	adds	r0, r6, #0
1000ce74:	1c39      	adds	r1, r7, #0
1000ce76:	9a02      	ldr	r2, [sp, #8]
1000ce78:	f7ff ff73 	bl	1000cd62 <__sfputs_r>
1000ce7c:	1c43      	adds	r3, r0, #1
1000ce7e:	d07b      	beq.n	1000cf78 <_vfiprintf_r+0x1f0>
1000ce80:	696a      	ldr	r2, [r5, #20]
1000ce82:	9b04      	ldr	r3, [sp, #16]
1000ce84:	4694      	mov	ip, r2
1000ce86:	4463      	add	r3, ip
1000ce88:	616b      	str	r3, [r5, #20]
1000ce8a:	7823      	ldrb	r3, [r4, #0]
1000ce8c:	2b00      	cmp	r3, #0
1000ce8e:	d073      	beq.n	1000cf78 <_vfiprintf_r+0x1f0>
1000ce90:	2201      	movs	r2, #1
1000ce92:	2300      	movs	r3, #0
1000ce94:	4252      	negs	r2, r2
1000ce96:	606a      	str	r2, [r5, #4]
1000ce98:	a902      	add	r1, sp, #8
1000ce9a:	3254      	adds	r2, #84	; 0x54
1000ce9c:	1852      	adds	r2, r2, r1
1000ce9e:	3401      	adds	r4, #1
1000cea0:	602b      	str	r3, [r5, #0]
1000cea2:	60eb      	str	r3, [r5, #12]
1000cea4:	60ab      	str	r3, [r5, #8]
1000cea6:	7013      	strb	r3, [r2, #0]
1000cea8:	65ab      	str	r3, [r5, #88]	; 0x58
1000ceaa:	7821      	ldrb	r1, [r4, #0]
1000ceac:	483c      	ldr	r0, [pc, #240]	; (1000cfa0 <_vfiprintf_r+0x218>)
1000ceae:	2205      	movs	r2, #5
1000ceb0:	f001 fa4c 	bl	1000e34c <memchr>
1000ceb4:	2800      	cmp	r0, #0
1000ceb6:	d009      	beq.n	1000cecc <_vfiprintf_r+0x144>
1000ceb8:	4b39      	ldr	r3, [pc, #228]	; (1000cfa0 <_vfiprintf_r+0x218>)
1000ceba:	3401      	adds	r4, #1
1000cebc:	1ac0      	subs	r0, r0, r3
1000cebe:	2301      	movs	r3, #1
1000cec0:	4083      	lsls	r3, r0
1000cec2:	1c18      	adds	r0, r3, #0
1000cec4:	682b      	ldr	r3, [r5, #0]
1000cec6:	4318      	orrs	r0, r3
1000cec8:	6028      	str	r0, [r5, #0]
1000ceca:	e7ee      	b.n	1000ceaa <_vfiprintf_r+0x122>
1000cecc:	682b      	ldr	r3, [r5, #0]
1000cece:	06da      	lsls	r2, r3, #27
1000ced0:	d504      	bpl.n	1000cedc <_vfiprintf_r+0x154>
1000ced2:	2253      	movs	r2, #83	; 0x53
1000ced4:	2120      	movs	r1, #32
1000ced6:	a802      	add	r0, sp, #8
1000ced8:	1812      	adds	r2, r2, r0
1000ceda:	7011      	strb	r1, [r2, #0]
1000cedc:	071a      	lsls	r2, r3, #28
1000cede:	d504      	bpl.n	1000ceea <_vfiprintf_r+0x162>
1000cee0:	2253      	movs	r2, #83	; 0x53
1000cee2:	212b      	movs	r1, #43	; 0x2b
1000cee4:	a802      	add	r0, sp, #8
1000cee6:	1812      	adds	r2, r2, r0
1000cee8:	7011      	strb	r1, [r2, #0]
1000ceea:	7822      	ldrb	r2, [r4, #0]
1000ceec:	2a2a      	cmp	r2, #42	; 0x2a
1000ceee:	d100      	bne.n	1000cef2 <_vfiprintf_r+0x16a>
1000cef0:	e77c      	b.n	1000cdec <_vfiprintf_r+0x64>
1000cef2:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000cef4:	e005      	b.n	1000cf02 <_vfiprintf_r+0x17a>
1000cef6:	4252      	negs	r2, r2
1000cef8:	60ea      	str	r2, [r5, #12]
1000cefa:	2202      	movs	r2, #2
1000cefc:	4313      	orrs	r3, r2
1000cefe:	602b      	str	r3, [r5, #0]
1000cf00:	e77b      	b.n	1000cdfa <_vfiprintf_r+0x72>
1000cf02:	7822      	ldrb	r2, [r4, #0]
1000cf04:	3a30      	subs	r2, #48	; 0x30
1000cf06:	2a09      	cmp	r2, #9
1000cf08:	d804      	bhi.n	1000cf14 <_vfiprintf_r+0x18c>
1000cf0a:	210a      	movs	r1, #10
1000cf0c:	434b      	muls	r3, r1
1000cf0e:	3401      	adds	r4, #1
1000cf10:	189b      	adds	r3, r3, r2
1000cf12:	e7f6      	b.n	1000cf02 <_vfiprintf_r+0x17a>
1000cf14:	9309      	str	r3, [sp, #36]	; 0x24
1000cf16:	e771      	b.n	1000cdfc <_vfiprintf_r+0x74>
1000cf18:	7863      	ldrb	r3, [r4, #1]
1000cf1a:	2b2a      	cmp	r3, #42	; 0x2a
1000cf1c:	d109      	bne.n	1000cf32 <_vfiprintf_r+0x1aa>
1000cf1e:	9b05      	ldr	r3, [sp, #20]
1000cf20:	3402      	adds	r4, #2
1000cf22:	1d1a      	adds	r2, r3, #4
1000cf24:	681b      	ldr	r3, [r3, #0]
1000cf26:	9205      	str	r2, [sp, #20]
1000cf28:	2b00      	cmp	r3, #0
1000cf2a:	da0d      	bge.n	1000cf48 <_vfiprintf_r+0x1c0>
1000cf2c:	2301      	movs	r3, #1
1000cf2e:	425b      	negs	r3, r3
1000cf30:	e00a      	b.n	1000cf48 <_vfiprintf_r+0x1c0>
1000cf32:	2300      	movs	r3, #0
1000cf34:	3401      	adds	r4, #1
1000cf36:	7822      	ldrb	r2, [r4, #0]
1000cf38:	3a30      	subs	r2, #48	; 0x30
1000cf3a:	2a09      	cmp	r2, #9
1000cf3c:	d804      	bhi.n	1000cf48 <_vfiprintf_r+0x1c0>
1000cf3e:	210a      	movs	r1, #10
1000cf40:	434b      	muls	r3, r1
1000cf42:	3401      	adds	r4, #1
1000cf44:	189b      	adds	r3, r3, r2
1000cf46:	e7f6      	b.n	1000cf36 <_vfiprintf_r+0x1ae>
1000cf48:	9307      	str	r3, [sp, #28]
1000cf4a:	e75b      	b.n	1000ce04 <_vfiprintf_r+0x7c>
1000cf4c:	ab05      	add	r3, sp, #20
1000cf4e:	9300      	str	r3, [sp, #0]
1000cf50:	1c30      	adds	r0, r6, #0
1000cf52:	1c29      	adds	r1, r5, #0
1000cf54:	1c3a      	adds	r2, r7, #0
1000cf56:	4b13      	ldr	r3, [pc, #76]	; (1000cfa4 <_vfiprintf_r+0x21c>)
1000cf58:	e000      	b.n	1000cf5c <_vfiprintf_r+0x1d4>
1000cf5a:	bf00      	nop
1000cf5c:	e007      	b.n	1000cf6e <_vfiprintf_r+0x1e6>
1000cf5e:	ab05      	add	r3, sp, #20
1000cf60:	9300      	str	r3, [sp, #0]
1000cf62:	1c30      	adds	r0, r6, #0
1000cf64:	1c29      	adds	r1, r5, #0
1000cf66:	1c3a      	adds	r2, r7, #0
1000cf68:	4b0e      	ldr	r3, [pc, #56]	; (1000cfa4 <_vfiprintf_r+0x21c>)
1000cf6a:	f000 f88b 	bl	1000d084 <_printf_i>
1000cf6e:	9003      	str	r0, [sp, #12]
1000cf70:	9b03      	ldr	r3, [sp, #12]
1000cf72:	3301      	adds	r3, #1
1000cf74:	d000      	beq.n	1000cf78 <_vfiprintf_r+0x1f0>
1000cf76:	e76a      	b.n	1000ce4e <_vfiprintf_r+0xc6>
1000cf78:	89bb      	ldrh	r3, [r7, #12]
1000cf7a:	065b      	lsls	r3, r3, #25
1000cf7c:	d500      	bpl.n	1000cf80 <_vfiprintf_r+0x1f8>
1000cf7e:	e732      	b.n	1000cde6 <_vfiprintf_r+0x5e>
1000cf80:	980b      	ldr	r0, [sp, #44]	; 0x2c
1000cf82:	b01f      	add	sp, #124	; 0x7c
1000cf84:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000cf86:	46c0      	nop			; (mov r8, r8)
1000cf88:	1000e9e8 	.word	0x1000e9e8
1000cf8c:	1000ea08 	.word	0x1000ea08
1000cf90:	1000ea28 	.word	0x1000ea28
1000cf94:	1000eb4a 	.word	0x1000eb4a
1000cf98:	1000eb4e 	.word	0x1000eb4e
1000cf9c:	00000000 	.word	0x00000000
1000cfa0:	1000eb44 	.word	0x1000eb44
1000cfa4:	1000cd63 	.word	0x1000cd63

1000cfa8 <_printf_common>:
1000cfa8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1000cfaa:	1c17      	adds	r7, r2, #0
1000cfac:	9301      	str	r3, [sp, #4]
1000cfae:	690a      	ldr	r2, [r1, #16]
1000cfb0:	688b      	ldr	r3, [r1, #8]
1000cfb2:	9000      	str	r0, [sp, #0]
1000cfb4:	1c0c      	adds	r4, r1, #0
1000cfb6:	4293      	cmp	r3, r2
1000cfb8:	da00      	bge.n	1000cfbc <_printf_common+0x14>
1000cfba:	1c13      	adds	r3, r2, #0
1000cfbc:	1c22      	adds	r2, r4, #0
1000cfbe:	603b      	str	r3, [r7, #0]
1000cfc0:	3243      	adds	r2, #67	; 0x43
1000cfc2:	7812      	ldrb	r2, [r2, #0]
1000cfc4:	2a00      	cmp	r2, #0
1000cfc6:	d001      	beq.n	1000cfcc <_printf_common+0x24>
1000cfc8:	3301      	adds	r3, #1
1000cfca:	603b      	str	r3, [r7, #0]
1000cfcc:	6823      	ldr	r3, [r4, #0]
1000cfce:	069b      	lsls	r3, r3, #26
1000cfd0:	d502      	bpl.n	1000cfd8 <_printf_common+0x30>
1000cfd2:	683b      	ldr	r3, [r7, #0]
1000cfd4:	3302      	adds	r3, #2
1000cfd6:	603b      	str	r3, [r7, #0]
1000cfd8:	2506      	movs	r5, #6
1000cfda:	6823      	ldr	r3, [r4, #0]
1000cfdc:	401d      	ands	r5, r3
1000cfde:	d01e      	beq.n	1000d01e <_printf_common+0x76>
1000cfe0:	1c23      	adds	r3, r4, #0
1000cfe2:	3343      	adds	r3, #67	; 0x43
1000cfe4:	781b      	ldrb	r3, [r3, #0]
1000cfe6:	1e5a      	subs	r2, r3, #1
1000cfe8:	4193      	sbcs	r3, r2
1000cfea:	6822      	ldr	r2, [r4, #0]
1000cfec:	0692      	lsls	r2, r2, #26
1000cfee:	d51c      	bpl.n	1000d02a <_printf_common+0x82>
1000cff0:	2030      	movs	r0, #48	; 0x30
1000cff2:	18e1      	adds	r1, r4, r3
1000cff4:	3140      	adds	r1, #64	; 0x40
1000cff6:	70c8      	strb	r0, [r1, #3]
1000cff8:	1c21      	adds	r1, r4, #0
1000cffa:	1c5a      	adds	r2, r3, #1
1000cffc:	3145      	adds	r1, #69	; 0x45
1000cffe:	7809      	ldrb	r1, [r1, #0]
1000d000:	18a2      	adds	r2, r4, r2
1000d002:	3240      	adds	r2, #64	; 0x40
1000d004:	3302      	adds	r3, #2
1000d006:	70d1      	strb	r1, [r2, #3]
1000d008:	e00f      	b.n	1000d02a <_printf_common+0x82>
1000d00a:	1c22      	adds	r2, r4, #0
1000d00c:	2301      	movs	r3, #1
1000d00e:	9800      	ldr	r0, [sp, #0]
1000d010:	9901      	ldr	r1, [sp, #4]
1000d012:	3219      	adds	r2, #25
1000d014:	9e08      	ldr	r6, [sp, #32]
1000d016:	47b0      	blx	r6
1000d018:	1c43      	adds	r3, r0, #1
1000d01a:	d00e      	beq.n	1000d03a <_printf_common+0x92>
1000d01c:	3501      	adds	r5, #1
1000d01e:	68e3      	ldr	r3, [r4, #12]
1000d020:	683a      	ldr	r2, [r7, #0]
1000d022:	1a9b      	subs	r3, r3, r2
1000d024:	429d      	cmp	r5, r3
1000d026:	dbf0      	blt.n	1000d00a <_printf_common+0x62>
1000d028:	e7da      	b.n	1000cfe0 <_printf_common+0x38>
1000d02a:	1c22      	adds	r2, r4, #0
1000d02c:	9800      	ldr	r0, [sp, #0]
1000d02e:	9901      	ldr	r1, [sp, #4]
1000d030:	3243      	adds	r2, #67	; 0x43
1000d032:	9d08      	ldr	r5, [sp, #32]
1000d034:	47a8      	blx	r5
1000d036:	1c43      	adds	r3, r0, #1
1000d038:	d102      	bne.n	1000d040 <_printf_common+0x98>
1000d03a:	2001      	movs	r0, #1
1000d03c:	4240      	negs	r0, r0
1000d03e:	e020      	b.n	1000d082 <_printf_common+0xda>
1000d040:	2306      	movs	r3, #6
1000d042:	6820      	ldr	r0, [r4, #0]
1000d044:	68e1      	ldr	r1, [r4, #12]
1000d046:	683a      	ldr	r2, [r7, #0]
1000d048:	4003      	ands	r3, r0
1000d04a:	2500      	movs	r5, #0
1000d04c:	2b04      	cmp	r3, #4
1000d04e:	d103      	bne.n	1000d058 <_printf_common+0xb0>
1000d050:	1a8d      	subs	r5, r1, r2
1000d052:	43eb      	mvns	r3, r5
1000d054:	17db      	asrs	r3, r3, #31
1000d056:	401d      	ands	r5, r3
1000d058:	68a3      	ldr	r3, [r4, #8]
1000d05a:	6922      	ldr	r2, [r4, #16]
1000d05c:	4293      	cmp	r3, r2
1000d05e:	dd01      	ble.n	1000d064 <_printf_common+0xbc>
1000d060:	1a9b      	subs	r3, r3, r2
1000d062:	18ed      	adds	r5, r5, r3
1000d064:	2700      	movs	r7, #0
1000d066:	42af      	cmp	r7, r5
1000d068:	da0a      	bge.n	1000d080 <_printf_common+0xd8>
1000d06a:	1c22      	adds	r2, r4, #0
1000d06c:	2301      	movs	r3, #1
1000d06e:	9800      	ldr	r0, [sp, #0]
1000d070:	9901      	ldr	r1, [sp, #4]
1000d072:	321a      	adds	r2, #26
1000d074:	9e08      	ldr	r6, [sp, #32]
1000d076:	47b0      	blx	r6
1000d078:	1c43      	adds	r3, r0, #1
1000d07a:	d0de      	beq.n	1000d03a <_printf_common+0x92>
1000d07c:	3701      	adds	r7, #1
1000d07e:	e7f2      	b.n	1000d066 <_printf_common+0xbe>
1000d080:	2000      	movs	r0, #0
1000d082:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1000d084 <_printf_i>:
1000d084:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d086:	b08b      	sub	sp, #44	; 0x2c
1000d088:	9206      	str	r2, [sp, #24]
1000d08a:	1c0a      	adds	r2, r1, #0
1000d08c:	3243      	adds	r2, #67	; 0x43
1000d08e:	9307      	str	r3, [sp, #28]
1000d090:	9005      	str	r0, [sp, #20]
1000d092:	9204      	str	r2, [sp, #16]
1000d094:	7e0a      	ldrb	r2, [r1, #24]
1000d096:	1c0c      	adds	r4, r1, #0
1000d098:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000d09a:	2a6e      	cmp	r2, #110	; 0x6e
1000d09c:	d100      	bne.n	1000d0a0 <_printf_i+0x1c>
1000d09e:	e0a8      	b.n	1000d1f2 <_printf_i+0x16e>
1000d0a0:	d811      	bhi.n	1000d0c6 <_printf_i+0x42>
1000d0a2:	2a63      	cmp	r2, #99	; 0x63
1000d0a4:	d022      	beq.n	1000d0ec <_printf_i+0x68>
1000d0a6:	d809      	bhi.n	1000d0bc <_printf_i+0x38>
1000d0a8:	2a00      	cmp	r2, #0
1000d0aa:	d100      	bne.n	1000d0ae <_printf_i+0x2a>
1000d0ac:	e0b2      	b.n	1000d214 <_printf_i+0x190>
1000d0ae:	2a58      	cmp	r2, #88	; 0x58
1000d0b0:	d000      	beq.n	1000d0b4 <_printf_i+0x30>
1000d0b2:	e0c2      	b.n	1000d23a <_printf_i+0x1b6>
1000d0b4:	3145      	adds	r1, #69	; 0x45
1000d0b6:	700a      	strb	r2, [r1, #0]
1000d0b8:	4a7c      	ldr	r2, [pc, #496]	; (1000d2ac <_printf_i+0x228>)
1000d0ba:	e04f      	b.n	1000d15c <_printf_i+0xd8>
1000d0bc:	2a64      	cmp	r2, #100	; 0x64
1000d0be:	d01d      	beq.n	1000d0fc <_printf_i+0x78>
1000d0c0:	2a69      	cmp	r2, #105	; 0x69
1000d0c2:	d01b      	beq.n	1000d0fc <_printf_i+0x78>
1000d0c4:	e0b9      	b.n	1000d23a <_printf_i+0x1b6>
1000d0c6:	2a73      	cmp	r2, #115	; 0x73
1000d0c8:	d100      	bne.n	1000d0cc <_printf_i+0x48>
1000d0ca:	e0a7      	b.n	1000d21c <_printf_i+0x198>
1000d0cc:	d809      	bhi.n	1000d0e2 <_printf_i+0x5e>
1000d0ce:	2a6f      	cmp	r2, #111	; 0x6f
1000d0d0:	d029      	beq.n	1000d126 <_printf_i+0xa2>
1000d0d2:	2a70      	cmp	r2, #112	; 0x70
1000d0d4:	d000      	beq.n	1000d0d8 <_printf_i+0x54>
1000d0d6:	e0b0      	b.n	1000d23a <_printf_i+0x1b6>
1000d0d8:	2220      	movs	r2, #32
1000d0da:	6809      	ldr	r1, [r1, #0]
1000d0dc:	430a      	orrs	r2, r1
1000d0de:	6022      	str	r2, [r4, #0]
1000d0e0:	e037      	b.n	1000d152 <_printf_i+0xce>
1000d0e2:	2a75      	cmp	r2, #117	; 0x75
1000d0e4:	d01f      	beq.n	1000d126 <_printf_i+0xa2>
1000d0e6:	2a78      	cmp	r2, #120	; 0x78
1000d0e8:	d033      	beq.n	1000d152 <_printf_i+0xce>
1000d0ea:	e0a6      	b.n	1000d23a <_printf_i+0x1b6>
1000d0ec:	1c0e      	adds	r6, r1, #0
1000d0ee:	681a      	ldr	r2, [r3, #0]
1000d0f0:	3642      	adds	r6, #66	; 0x42
1000d0f2:	1d11      	adds	r1, r2, #4
1000d0f4:	6019      	str	r1, [r3, #0]
1000d0f6:	6813      	ldr	r3, [r2, #0]
1000d0f8:	7033      	strb	r3, [r6, #0]
1000d0fa:	e0a1      	b.n	1000d240 <_printf_i+0x1bc>
1000d0fc:	6821      	ldr	r1, [r4, #0]
1000d0fe:	681a      	ldr	r2, [r3, #0]
1000d100:	0608      	lsls	r0, r1, #24
1000d102:	d406      	bmi.n	1000d112 <_printf_i+0x8e>
1000d104:	0649      	lsls	r1, r1, #25
1000d106:	d504      	bpl.n	1000d112 <_printf_i+0x8e>
1000d108:	1d11      	adds	r1, r2, #4
1000d10a:	6019      	str	r1, [r3, #0]
1000d10c:	2300      	movs	r3, #0
1000d10e:	5ed5      	ldrsh	r5, [r2, r3]
1000d110:	e002      	b.n	1000d118 <_printf_i+0x94>
1000d112:	1d11      	adds	r1, r2, #4
1000d114:	6019      	str	r1, [r3, #0]
1000d116:	6815      	ldr	r5, [r2, #0]
1000d118:	2d00      	cmp	r5, #0
1000d11a:	da3b      	bge.n	1000d194 <_printf_i+0x110>
1000d11c:	232d      	movs	r3, #45	; 0x2d
1000d11e:	9a04      	ldr	r2, [sp, #16]
1000d120:	426d      	negs	r5, r5
1000d122:	7013      	strb	r3, [r2, #0]
1000d124:	e036      	b.n	1000d194 <_printf_i+0x110>
1000d126:	6821      	ldr	r1, [r4, #0]
1000d128:	681a      	ldr	r2, [r3, #0]
1000d12a:	0608      	lsls	r0, r1, #24
1000d12c:	d406      	bmi.n	1000d13c <_printf_i+0xb8>
1000d12e:	0649      	lsls	r1, r1, #25
1000d130:	d504      	bpl.n	1000d13c <_printf_i+0xb8>
1000d132:	6815      	ldr	r5, [r2, #0]
1000d134:	1d11      	adds	r1, r2, #4
1000d136:	6019      	str	r1, [r3, #0]
1000d138:	b2ad      	uxth	r5, r5
1000d13a:	e002      	b.n	1000d142 <_printf_i+0xbe>
1000d13c:	1d11      	adds	r1, r2, #4
1000d13e:	6019      	str	r1, [r3, #0]
1000d140:	6815      	ldr	r5, [r2, #0]
1000d142:	4b5a      	ldr	r3, [pc, #360]	; (1000d2ac <_printf_i+0x228>)
1000d144:	7e22      	ldrb	r2, [r4, #24]
1000d146:	9303      	str	r3, [sp, #12]
1000d148:	270a      	movs	r7, #10
1000d14a:	2a6f      	cmp	r2, #111	; 0x6f
1000d14c:	d11d      	bne.n	1000d18a <_printf_i+0x106>
1000d14e:	2708      	movs	r7, #8
1000d150:	e01b      	b.n	1000d18a <_printf_i+0x106>
1000d152:	1c22      	adds	r2, r4, #0
1000d154:	2178      	movs	r1, #120	; 0x78
1000d156:	3245      	adds	r2, #69	; 0x45
1000d158:	7011      	strb	r1, [r2, #0]
1000d15a:	4a55      	ldr	r2, [pc, #340]	; (1000d2b0 <_printf_i+0x22c>)
1000d15c:	6819      	ldr	r1, [r3, #0]
1000d15e:	9203      	str	r2, [sp, #12]
1000d160:	1d08      	adds	r0, r1, #4
1000d162:	6822      	ldr	r2, [r4, #0]
1000d164:	6018      	str	r0, [r3, #0]
1000d166:	680d      	ldr	r5, [r1, #0]
1000d168:	0610      	lsls	r0, r2, #24
1000d16a:	d402      	bmi.n	1000d172 <_printf_i+0xee>
1000d16c:	0650      	lsls	r0, r2, #25
1000d16e:	d500      	bpl.n	1000d172 <_printf_i+0xee>
1000d170:	b2ad      	uxth	r5, r5
1000d172:	07d3      	lsls	r3, r2, #31
1000d174:	d502      	bpl.n	1000d17c <_printf_i+0xf8>
1000d176:	2320      	movs	r3, #32
1000d178:	431a      	orrs	r2, r3
1000d17a:	6022      	str	r2, [r4, #0]
1000d17c:	2710      	movs	r7, #16
1000d17e:	2d00      	cmp	r5, #0
1000d180:	d103      	bne.n	1000d18a <_printf_i+0x106>
1000d182:	2320      	movs	r3, #32
1000d184:	6822      	ldr	r2, [r4, #0]
1000d186:	439a      	bics	r2, r3
1000d188:	6022      	str	r2, [r4, #0]
1000d18a:	1c23      	adds	r3, r4, #0
1000d18c:	2200      	movs	r2, #0
1000d18e:	3343      	adds	r3, #67	; 0x43
1000d190:	701a      	strb	r2, [r3, #0]
1000d192:	e002      	b.n	1000d19a <_printf_i+0x116>
1000d194:	270a      	movs	r7, #10
1000d196:	4b45      	ldr	r3, [pc, #276]	; (1000d2ac <_printf_i+0x228>)
1000d198:	9303      	str	r3, [sp, #12]
1000d19a:	6863      	ldr	r3, [r4, #4]
1000d19c:	60a3      	str	r3, [r4, #8]
1000d19e:	2b00      	cmp	r3, #0
1000d1a0:	db03      	blt.n	1000d1aa <_printf_i+0x126>
1000d1a2:	2204      	movs	r2, #4
1000d1a4:	6821      	ldr	r1, [r4, #0]
1000d1a6:	4391      	bics	r1, r2
1000d1a8:	6021      	str	r1, [r4, #0]
1000d1aa:	2d00      	cmp	r5, #0
1000d1ac:	d102      	bne.n	1000d1b4 <_printf_i+0x130>
1000d1ae:	9e04      	ldr	r6, [sp, #16]
1000d1b0:	2b00      	cmp	r3, #0
1000d1b2:	d00e      	beq.n	1000d1d2 <_printf_i+0x14e>
1000d1b4:	9e04      	ldr	r6, [sp, #16]
1000d1b6:	1c28      	adds	r0, r5, #0
1000d1b8:	1c39      	adds	r1, r7, #0
1000d1ba:	f7fc fdf1 	bl	10009da0 <__aeabi_uidivmod>
1000d1be:	9b03      	ldr	r3, [sp, #12]
1000d1c0:	3e01      	subs	r6, #1
1000d1c2:	5c5b      	ldrb	r3, [r3, r1]
1000d1c4:	1c28      	adds	r0, r5, #0
1000d1c6:	7033      	strb	r3, [r6, #0]
1000d1c8:	1c39      	adds	r1, r7, #0
1000d1ca:	f7fc fd63 	bl	10009c94 <__aeabi_uidiv>
1000d1ce:	1e05      	subs	r5, r0, #0
1000d1d0:	d1f1      	bne.n	1000d1b6 <_printf_i+0x132>
1000d1d2:	2f08      	cmp	r7, #8
1000d1d4:	d109      	bne.n	1000d1ea <_printf_i+0x166>
1000d1d6:	6823      	ldr	r3, [r4, #0]
1000d1d8:	07db      	lsls	r3, r3, #31
1000d1da:	d506      	bpl.n	1000d1ea <_printf_i+0x166>
1000d1dc:	6863      	ldr	r3, [r4, #4]
1000d1de:	6922      	ldr	r2, [r4, #16]
1000d1e0:	4293      	cmp	r3, r2
1000d1e2:	dc02      	bgt.n	1000d1ea <_printf_i+0x166>
1000d1e4:	2330      	movs	r3, #48	; 0x30
1000d1e6:	3e01      	subs	r6, #1
1000d1e8:	7033      	strb	r3, [r6, #0]
1000d1ea:	9b04      	ldr	r3, [sp, #16]
1000d1ec:	1b9b      	subs	r3, r3, r6
1000d1ee:	6123      	str	r3, [r4, #16]
1000d1f0:	e02b      	b.n	1000d24a <_printf_i+0x1c6>
1000d1f2:	6809      	ldr	r1, [r1, #0]
1000d1f4:	681a      	ldr	r2, [r3, #0]
1000d1f6:	0608      	lsls	r0, r1, #24
1000d1f8:	d407      	bmi.n	1000d20a <_printf_i+0x186>
1000d1fa:	0649      	lsls	r1, r1, #25
1000d1fc:	d505      	bpl.n	1000d20a <_printf_i+0x186>
1000d1fe:	1d11      	adds	r1, r2, #4
1000d200:	6019      	str	r1, [r3, #0]
1000d202:	6813      	ldr	r3, [r2, #0]
1000d204:	8aa2      	ldrh	r2, [r4, #20]
1000d206:	801a      	strh	r2, [r3, #0]
1000d208:	e004      	b.n	1000d214 <_printf_i+0x190>
1000d20a:	1d11      	adds	r1, r2, #4
1000d20c:	6019      	str	r1, [r3, #0]
1000d20e:	6813      	ldr	r3, [r2, #0]
1000d210:	6962      	ldr	r2, [r4, #20]
1000d212:	601a      	str	r2, [r3, #0]
1000d214:	2300      	movs	r3, #0
1000d216:	9e04      	ldr	r6, [sp, #16]
1000d218:	6123      	str	r3, [r4, #16]
1000d21a:	e016      	b.n	1000d24a <_printf_i+0x1c6>
1000d21c:	681a      	ldr	r2, [r3, #0]
1000d21e:	1d11      	adds	r1, r2, #4
1000d220:	6019      	str	r1, [r3, #0]
1000d222:	6816      	ldr	r6, [r2, #0]
1000d224:	2100      	movs	r1, #0
1000d226:	1c30      	adds	r0, r6, #0
1000d228:	6862      	ldr	r2, [r4, #4]
1000d22a:	f001 f88f 	bl	1000e34c <memchr>
1000d22e:	2800      	cmp	r0, #0
1000d230:	d001      	beq.n	1000d236 <_printf_i+0x1b2>
1000d232:	1b80      	subs	r0, r0, r6
1000d234:	6060      	str	r0, [r4, #4]
1000d236:	6863      	ldr	r3, [r4, #4]
1000d238:	e003      	b.n	1000d242 <_printf_i+0x1be>
1000d23a:	1c26      	adds	r6, r4, #0
1000d23c:	3642      	adds	r6, #66	; 0x42
1000d23e:	7032      	strb	r2, [r6, #0]
1000d240:	2301      	movs	r3, #1
1000d242:	6123      	str	r3, [r4, #16]
1000d244:	2300      	movs	r3, #0
1000d246:	9a04      	ldr	r2, [sp, #16]
1000d248:	7013      	strb	r3, [r2, #0]
1000d24a:	9b07      	ldr	r3, [sp, #28]
1000d24c:	9805      	ldr	r0, [sp, #20]
1000d24e:	9300      	str	r3, [sp, #0]
1000d250:	1c21      	adds	r1, r4, #0
1000d252:	9b06      	ldr	r3, [sp, #24]
1000d254:	aa09      	add	r2, sp, #36	; 0x24
1000d256:	f7ff fea7 	bl	1000cfa8 <_printf_common>
1000d25a:	1c43      	adds	r3, r0, #1
1000d25c:	d102      	bne.n	1000d264 <_printf_i+0x1e0>
1000d25e:	2001      	movs	r0, #1
1000d260:	4240      	negs	r0, r0
1000d262:	e021      	b.n	1000d2a8 <_printf_i+0x224>
1000d264:	6923      	ldr	r3, [r4, #16]
1000d266:	9805      	ldr	r0, [sp, #20]
1000d268:	9906      	ldr	r1, [sp, #24]
1000d26a:	1c32      	adds	r2, r6, #0
1000d26c:	9d07      	ldr	r5, [sp, #28]
1000d26e:	47a8      	blx	r5
1000d270:	1c43      	adds	r3, r0, #1
1000d272:	d0f4      	beq.n	1000d25e <_printf_i+0x1da>
1000d274:	6823      	ldr	r3, [r4, #0]
1000d276:	079b      	lsls	r3, r3, #30
1000d278:	d405      	bmi.n	1000d286 <_printf_i+0x202>
1000d27a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000d27c:	68e0      	ldr	r0, [r4, #12]
1000d27e:	4298      	cmp	r0, r3
1000d280:	da12      	bge.n	1000d2a8 <_printf_i+0x224>
1000d282:	1c18      	adds	r0, r3, #0
1000d284:	e010      	b.n	1000d2a8 <_printf_i+0x224>
1000d286:	2500      	movs	r5, #0
1000d288:	68e3      	ldr	r3, [r4, #12]
1000d28a:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000d28c:	1a9b      	subs	r3, r3, r2
1000d28e:	429d      	cmp	r5, r3
1000d290:	daf3      	bge.n	1000d27a <_printf_i+0x1f6>
1000d292:	1c22      	adds	r2, r4, #0
1000d294:	2301      	movs	r3, #1
1000d296:	9805      	ldr	r0, [sp, #20]
1000d298:	9906      	ldr	r1, [sp, #24]
1000d29a:	3219      	adds	r2, #25
1000d29c:	9e07      	ldr	r6, [sp, #28]
1000d29e:	47b0      	blx	r6
1000d2a0:	1c43      	adds	r3, r0, #1
1000d2a2:	d0dc      	beq.n	1000d25e <_printf_i+0x1da>
1000d2a4:	3501      	adds	r5, #1
1000d2a6:	e7ef      	b.n	1000d288 <_printf_i+0x204>
1000d2a8:	b00b      	add	sp, #44	; 0x2c
1000d2aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000d2ac:	1000eb55 	.word	0x1000eb55
1000d2b0:	1000eb66 	.word	0x1000eb66

1000d2b4 <_sbrk_r>:
1000d2b4:	b538      	push	{r3, r4, r5, lr}
1000d2b6:	2300      	movs	r3, #0
1000d2b8:	4c06      	ldr	r4, [pc, #24]	; (1000d2d4 <_sbrk_r+0x20>)
1000d2ba:	1c05      	adds	r5, r0, #0
1000d2bc:	1c08      	adds	r0, r1, #0
1000d2be:	6023      	str	r3, [r4, #0]
1000d2c0:	f7fc fa98 	bl	100097f4 <_sbrk>
1000d2c4:	1c43      	adds	r3, r0, #1
1000d2c6:	d103      	bne.n	1000d2d0 <_sbrk_r+0x1c>
1000d2c8:	6823      	ldr	r3, [r4, #0]
1000d2ca:	2b00      	cmp	r3, #0
1000d2cc:	d000      	beq.n	1000d2d0 <_sbrk_r+0x1c>
1000d2ce:	602b      	str	r3, [r5, #0]
1000d2d0:	bd38      	pop	{r3, r4, r5, pc}
1000d2d2:	46c0      	nop			; (mov r8, r8)
1000d2d4:	1000ee78 	.word	0x1000ee78

1000d2d8 <__sread>:
1000d2d8:	b538      	push	{r3, r4, r5, lr}
1000d2da:	1c0c      	adds	r4, r1, #0
1000d2dc:	250e      	movs	r5, #14
1000d2de:	5f49      	ldrsh	r1, [r1, r5]
1000d2e0:	f001 f840 	bl	1000e364 <_read_r>
1000d2e4:	2800      	cmp	r0, #0
1000d2e6:	db03      	blt.n	1000d2f0 <__sread+0x18>
1000d2e8:	6d63      	ldr	r3, [r4, #84]	; 0x54
1000d2ea:	181b      	adds	r3, r3, r0
1000d2ec:	6563      	str	r3, [r4, #84]	; 0x54
1000d2ee:	e003      	b.n	1000d2f8 <__sread+0x20>
1000d2f0:	89a2      	ldrh	r2, [r4, #12]
1000d2f2:	4b02      	ldr	r3, [pc, #8]	; (1000d2fc <__sread+0x24>)
1000d2f4:	4013      	ands	r3, r2
1000d2f6:	81a3      	strh	r3, [r4, #12]
1000d2f8:	bd38      	pop	{r3, r4, r5, pc}
1000d2fa:	46c0      	nop			; (mov r8, r8)
1000d2fc:	ffffefff 	.word	0xffffefff

1000d300 <__swrite>:
1000d300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000d302:	1c1e      	adds	r6, r3, #0
1000d304:	898b      	ldrh	r3, [r1, #12]
1000d306:	1c05      	adds	r5, r0, #0
1000d308:	1c0c      	adds	r4, r1, #0
1000d30a:	1c17      	adds	r7, r2, #0
1000d30c:	05db      	lsls	r3, r3, #23
1000d30e:	d505      	bpl.n	1000d31c <__swrite+0x1c>
1000d310:	230e      	movs	r3, #14
1000d312:	5ec9      	ldrsh	r1, [r1, r3]
1000d314:	2200      	movs	r2, #0
1000d316:	2302      	movs	r3, #2
1000d318:	f000 ffac 	bl	1000e274 <_lseek_r>
1000d31c:	89a2      	ldrh	r2, [r4, #12]
1000d31e:	4b05      	ldr	r3, [pc, #20]	; (1000d334 <__swrite+0x34>)
1000d320:	1c28      	adds	r0, r5, #0
1000d322:	4013      	ands	r3, r2
1000d324:	81a3      	strh	r3, [r4, #12]
1000d326:	1c3a      	adds	r2, r7, #0
1000d328:	230e      	movs	r3, #14
1000d32a:	5ee1      	ldrsh	r1, [r4, r3]
1000d32c:	1c33      	adds	r3, r6, #0
1000d32e:	f000 f87f 	bl	1000d430 <_write_r>
1000d332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000d334:	ffffefff 	.word	0xffffefff

1000d338 <__sseek>:
1000d338:	b538      	push	{r3, r4, r5, lr}
1000d33a:	1c0c      	adds	r4, r1, #0
1000d33c:	250e      	movs	r5, #14
1000d33e:	5f49      	ldrsh	r1, [r1, r5]
1000d340:	f000 ff98 	bl	1000e274 <_lseek_r>
1000d344:	89a3      	ldrh	r3, [r4, #12]
1000d346:	1c42      	adds	r2, r0, #1
1000d348:	d103      	bne.n	1000d352 <__sseek+0x1a>
1000d34a:	4a05      	ldr	r2, [pc, #20]	; (1000d360 <__sseek+0x28>)
1000d34c:	4013      	ands	r3, r2
1000d34e:	81a3      	strh	r3, [r4, #12]
1000d350:	e004      	b.n	1000d35c <__sseek+0x24>
1000d352:	2280      	movs	r2, #128	; 0x80
1000d354:	0152      	lsls	r2, r2, #5
1000d356:	4313      	orrs	r3, r2
1000d358:	81a3      	strh	r3, [r4, #12]
1000d35a:	6560      	str	r0, [r4, #84]	; 0x54
1000d35c:	bd38      	pop	{r3, r4, r5, pc}
1000d35e:	46c0      	nop			; (mov r8, r8)
1000d360:	ffffefff 	.word	0xffffefff

1000d364 <__sclose>:
1000d364:	b508      	push	{r3, lr}
1000d366:	230e      	movs	r3, #14
1000d368:	5ec9      	ldrsh	r1, [r1, r3]
1000d36a:	f000 f8e9 	bl	1000d540 <_close_r>
1000d36e:	bd08      	pop	{r3, pc}

1000d370 <strcpy>:
1000d370:	1c03      	adds	r3, r0, #0
1000d372:	780a      	ldrb	r2, [r1, #0]
1000d374:	3101      	adds	r1, #1
1000d376:	701a      	strb	r2, [r3, #0]
1000d378:	3301      	adds	r3, #1
1000d37a:	2a00      	cmp	r2, #0
1000d37c:	d1f9      	bne.n	1000d372 <strcpy+0x2>
1000d37e:	4770      	bx	lr

1000d380 <__swbuf_r>:
1000d380:	b570      	push	{r4, r5, r6, lr}
1000d382:	1c05      	adds	r5, r0, #0
1000d384:	1c0e      	adds	r6, r1, #0
1000d386:	1c14      	adds	r4, r2, #0
1000d388:	2800      	cmp	r0, #0
1000d38a:	d004      	beq.n	1000d396 <__swbuf_r+0x16>
1000d38c:	6983      	ldr	r3, [r0, #24]
1000d38e:	2b00      	cmp	r3, #0
1000d390:	d101      	bne.n	1000d396 <__swbuf_r+0x16>
1000d392:	f7ff f883 	bl	1000c49c <__sinit>
1000d396:	4b23      	ldr	r3, [pc, #140]	; (1000d424 <__swbuf_r+0xa4>)
1000d398:	429c      	cmp	r4, r3
1000d39a:	d101      	bne.n	1000d3a0 <__swbuf_r+0x20>
1000d39c:	686c      	ldr	r4, [r5, #4]
1000d39e:	e008      	b.n	1000d3b2 <__swbuf_r+0x32>
1000d3a0:	4b21      	ldr	r3, [pc, #132]	; (1000d428 <__swbuf_r+0xa8>)
1000d3a2:	429c      	cmp	r4, r3
1000d3a4:	d101      	bne.n	1000d3aa <__swbuf_r+0x2a>
1000d3a6:	68ac      	ldr	r4, [r5, #8]
1000d3a8:	e003      	b.n	1000d3b2 <__swbuf_r+0x32>
1000d3aa:	4b20      	ldr	r3, [pc, #128]	; (1000d42c <__swbuf_r+0xac>)
1000d3ac:	429c      	cmp	r4, r3
1000d3ae:	d100      	bne.n	1000d3b2 <__swbuf_r+0x32>
1000d3b0:	68ec      	ldr	r4, [r5, #12]
1000d3b2:	69a3      	ldr	r3, [r4, #24]
1000d3b4:	60a3      	str	r3, [r4, #8]
1000d3b6:	89a3      	ldrh	r3, [r4, #12]
1000d3b8:	071b      	lsls	r3, r3, #28
1000d3ba:	d50a      	bpl.n	1000d3d2 <__swbuf_r+0x52>
1000d3bc:	6923      	ldr	r3, [r4, #16]
1000d3be:	2b00      	cmp	r3, #0
1000d3c0:	d007      	beq.n	1000d3d2 <__swbuf_r+0x52>
1000d3c2:	6823      	ldr	r3, [r4, #0]
1000d3c4:	6922      	ldr	r2, [r4, #16]
1000d3c6:	b2f6      	uxtb	r6, r6
1000d3c8:	1a98      	subs	r0, r3, r2
1000d3ca:	6963      	ldr	r3, [r4, #20]
1000d3cc:	4298      	cmp	r0, r3
1000d3ce:	db0f      	blt.n	1000d3f0 <__swbuf_r+0x70>
1000d3d0:	e008      	b.n	1000d3e4 <__swbuf_r+0x64>
1000d3d2:	1c28      	adds	r0, r5, #0
1000d3d4:	1c21      	adds	r1, r4, #0
1000d3d6:	f000 f83f 	bl	1000d458 <__swsetup_r>
1000d3da:	2800      	cmp	r0, #0
1000d3dc:	d0f1      	beq.n	1000d3c2 <__swbuf_r+0x42>
1000d3de:	2001      	movs	r0, #1
1000d3e0:	4240      	negs	r0, r0
1000d3e2:	e01d      	b.n	1000d420 <__swbuf_r+0xa0>
1000d3e4:	1c28      	adds	r0, r5, #0
1000d3e6:	1c21      	adds	r1, r4, #0
1000d3e8:	f7fe ffea 	bl	1000c3c0 <_fflush_r>
1000d3ec:	2800      	cmp	r0, #0
1000d3ee:	d1f6      	bne.n	1000d3de <__swbuf_r+0x5e>
1000d3f0:	68a3      	ldr	r3, [r4, #8]
1000d3f2:	3001      	adds	r0, #1
1000d3f4:	3b01      	subs	r3, #1
1000d3f6:	60a3      	str	r3, [r4, #8]
1000d3f8:	6823      	ldr	r3, [r4, #0]
1000d3fa:	1c5a      	adds	r2, r3, #1
1000d3fc:	6022      	str	r2, [r4, #0]
1000d3fe:	701e      	strb	r6, [r3, #0]
1000d400:	6963      	ldr	r3, [r4, #20]
1000d402:	4298      	cmp	r0, r3
1000d404:	d005      	beq.n	1000d412 <__swbuf_r+0x92>
1000d406:	89a3      	ldrh	r3, [r4, #12]
1000d408:	1c30      	adds	r0, r6, #0
1000d40a:	07db      	lsls	r3, r3, #31
1000d40c:	d508      	bpl.n	1000d420 <__swbuf_r+0xa0>
1000d40e:	2e0a      	cmp	r6, #10
1000d410:	d106      	bne.n	1000d420 <__swbuf_r+0xa0>
1000d412:	1c28      	adds	r0, r5, #0
1000d414:	1c21      	adds	r1, r4, #0
1000d416:	f7fe ffd3 	bl	1000c3c0 <_fflush_r>
1000d41a:	2800      	cmp	r0, #0
1000d41c:	d1df      	bne.n	1000d3de <__swbuf_r+0x5e>
1000d41e:	1c30      	adds	r0, r6, #0
1000d420:	bd70      	pop	{r4, r5, r6, pc}
1000d422:	46c0      	nop			; (mov r8, r8)
1000d424:	1000e9e8 	.word	0x1000e9e8
1000d428:	1000ea08 	.word	0x1000ea08
1000d42c:	1000ea28 	.word	0x1000ea28

1000d430 <_write_r>:
1000d430:	b538      	push	{r3, r4, r5, lr}
1000d432:	1c05      	adds	r5, r0, #0
1000d434:	2000      	movs	r0, #0
1000d436:	4c07      	ldr	r4, [pc, #28]	; (1000d454 <_write_r+0x24>)
1000d438:	6020      	str	r0, [r4, #0]
1000d43a:	1c08      	adds	r0, r1, #0
1000d43c:	1c11      	adds	r1, r2, #0
1000d43e:	1c1a      	adds	r2, r3, #0
1000d440:	f7fb f9a2 	bl	10008788 <_write>
1000d444:	1c43      	adds	r3, r0, #1
1000d446:	d103      	bne.n	1000d450 <_write_r+0x20>
1000d448:	6823      	ldr	r3, [r4, #0]
1000d44a:	2b00      	cmp	r3, #0
1000d44c:	d000      	beq.n	1000d450 <_write_r+0x20>
1000d44e:	602b      	str	r3, [r5, #0]
1000d450:	bd38      	pop	{r3, r4, r5, pc}
1000d452:	46c0      	nop			; (mov r8, r8)
1000d454:	1000ee78 	.word	0x1000ee78

1000d458 <__swsetup_r>:
1000d458:	4b35      	ldr	r3, [pc, #212]	; (1000d530 <__swsetup_r+0xd8>)
1000d45a:	b570      	push	{r4, r5, r6, lr}
1000d45c:	681d      	ldr	r5, [r3, #0]
1000d45e:	1c06      	adds	r6, r0, #0
1000d460:	1c0c      	adds	r4, r1, #0
1000d462:	2d00      	cmp	r5, #0
1000d464:	d005      	beq.n	1000d472 <__swsetup_r+0x1a>
1000d466:	69ab      	ldr	r3, [r5, #24]
1000d468:	2b00      	cmp	r3, #0
1000d46a:	d102      	bne.n	1000d472 <__swsetup_r+0x1a>
1000d46c:	1c28      	adds	r0, r5, #0
1000d46e:	f7ff f815 	bl	1000c49c <__sinit>
1000d472:	4b30      	ldr	r3, [pc, #192]	; (1000d534 <__swsetup_r+0xdc>)
1000d474:	429c      	cmp	r4, r3
1000d476:	d101      	bne.n	1000d47c <__swsetup_r+0x24>
1000d478:	686c      	ldr	r4, [r5, #4]
1000d47a:	e008      	b.n	1000d48e <__swsetup_r+0x36>
1000d47c:	4b2e      	ldr	r3, [pc, #184]	; (1000d538 <__swsetup_r+0xe0>)
1000d47e:	429c      	cmp	r4, r3
1000d480:	d101      	bne.n	1000d486 <__swsetup_r+0x2e>
1000d482:	68ac      	ldr	r4, [r5, #8]
1000d484:	e003      	b.n	1000d48e <__swsetup_r+0x36>
1000d486:	4b2d      	ldr	r3, [pc, #180]	; (1000d53c <__swsetup_r+0xe4>)
1000d488:	429c      	cmp	r4, r3
1000d48a:	d100      	bne.n	1000d48e <__swsetup_r+0x36>
1000d48c:	68ec      	ldr	r4, [r5, #12]
1000d48e:	89a3      	ldrh	r3, [r4, #12]
1000d490:	b29a      	uxth	r2, r3
1000d492:	0711      	lsls	r1, r2, #28
1000d494:	d423      	bmi.n	1000d4de <__swsetup_r+0x86>
1000d496:	06d1      	lsls	r1, r2, #27
1000d498:	d407      	bmi.n	1000d4aa <__swsetup_r+0x52>
1000d49a:	2209      	movs	r2, #9
1000d49c:	2001      	movs	r0, #1
1000d49e:	6032      	str	r2, [r6, #0]
1000d4a0:	3237      	adds	r2, #55	; 0x37
1000d4a2:	4313      	orrs	r3, r2
1000d4a4:	81a3      	strh	r3, [r4, #12]
1000d4a6:	4240      	negs	r0, r0
1000d4a8:	e040      	b.n	1000d52c <__swsetup_r+0xd4>
1000d4aa:	0753      	lsls	r3, r2, #29
1000d4ac:	d513      	bpl.n	1000d4d6 <__swsetup_r+0x7e>
1000d4ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
1000d4b0:	2900      	cmp	r1, #0
1000d4b2:	d008      	beq.n	1000d4c6 <__swsetup_r+0x6e>
1000d4b4:	1c23      	adds	r3, r4, #0
1000d4b6:	3344      	adds	r3, #68	; 0x44
1000d4b8:	4299      	cmp	r1, r3
1000d4ba:	d002      	beq.n	1000d4c2 <__swsetup_r+0x6a>
1000d4bc:	1c30      	adds	r0, r6, #0
1000d4be:	f7ff fb9d 	bl	1000cbfc <_free_r>
1000d4c2:	2300      	movs	r3, #0
1000d4c4:	6363      	str	r3, [r4, #52]	; 0x34
1000d4c6:	2224      	movs	r2, #36	; 0x24
1000d4c8:	89a3      	ldrh	r3, [r4, #12]
1000d4ca:	4393      	bics	r3, r2
1000d4cc:	81a3      	strh	r3, [r4, #12]
1000d4ce:	2300      	movs	r3, #0
1000d4d0:	6063      	str	r3, [r4, #4]
1000d4d2:	6923      	ldr	r3, [r4, #16]
1000d4d4:	6023      	str	r3, [r4, #0]
1000d4d6:	2208      	movs	r2, #8
1000d4d8:	89a3      	ldrh	r3, [r4, #12]
1000d4da:	4313      	orrs	r3, r2
1000d4dc:	81a3      	strh	r3, [r4, #12]
1000d4de:	6923      	ldr	r3, [r4, #16]
1000d4e0:	2b00      	cmp	r3, #0
1000d4e2:	d10b      	bne.n	1000d4fc <__swsetup_r+0xa4>
1000d4e4:	23a0      	movs	r3, #160	; 0xa0
1000d4e6:	89a2      	ldrh	r2, [r4, #12]
1000d4e8:	009b      	lsls	r3, r3, #2
1000d4ea:	4013      	ands	r3, r2
1000d4ec:	2280      	movs	r2, #128	; 0x80
1000d4ee:	0092      	lsls	r2, r2, #2
1000d4f0:	4293      	cmp	r3, r2
1000d4f2:	d003      	beq.n	1000d4fc <__swsetup_r+0xa4>
1000d4f4:	1c30      	adds	r0, r6, #0
1000d4f6:	1c21      	adds	r1, r4, #0
1000d4f8:	f000 fed0 	bl	1000e29c <__smakebuf_r>
1000d4fc:	2301      	movs	r3, #1
1000d4fe:	89a2      	ldrh	r2, [r4, #12]
1000d500:	4013      	ands	r3, r2
1000d502:	d005      	beq.n	1000d510 <__swsetup_r+0xb8>
1000d504:	2300      	movs	r3, #0
1000d506:	60a3      	str	r3, [r4, #8]
1000d508:	6963      	ldr	r3, [r4, #20]
1000d50a:	425b      	negs	r3, r3
1000d50c:	61a3      	str	r3, [r4, #24]
1000d50e:	e003      	b.n	1000d518 <__swsetup_r+0xc0>
1000d510:	0791      	lsls	r1, r2, #30
1000d512:	d400      	bmi.n	1000d516 <__swsetup_r+0xbe>
1000d514:	6963      	ldr	r3, [r4, #20]
1000d516:	60a3      	str	r3, [r4, #8]
1000d518:	2000      	movs	r0, #0
1000d51a:	6923      	ldr	r3, [r4, #16]
1000d51c:	4283      	cmp	r3, r0
1000d51e:	d105      	bne.n	1000d52c <__swsetup_r+0xd4>
1000d520:	0613      	lsls	r3, r2, #24
1000d522:	d503      	bpl.n	1000d52c <__swsetup_r+0xd4>
1000d524:	2340      	movs	r3, #64	; 0x40
1000d526:	431a      	orrs	r2, r3
1000d528:	81a2      	strh	r2, [r4, #12]
1000d52a:	3801      	subs	r0, #1
1000d52c:	bd70      	pop	{r4, r5, r6, pc}
1000d52e:	46c0      	nop			; (mov r8, r8)
1000d530:	1000ec08 	.word	0x1000ec08
1000d534:	1000e9e8 	.word	0x1000e9e8
1000d538:	1000ea08 	.word	0x1000ea08
1000d53c:	1000ea28 	.word	0x1000ea28

1000d540 <_close_r>:
1000d540:	b538      	push	{r3, r4, r5, lr}
1000d542:	2300      	movs	r3, #0
1000d544:	4c06      	ldr	r4, [pc, #24]	; (1000d560 <_close_r+0x20>)
1000d546:	1c05      	adds	r5, r0, #0
1000d548:	1c08      	adds	r0, r1, #0
1000d54a:	6023      	str	r3, [r4, #0]
1000d54c:	f7fc f964 	bl	10009818 <_close>
1000d550:	1c43      	adds	r3, r0, #1
1000d552:	d103      	bne.n	1000d55c <_close_r+0x1c>
1000d554:	6823      	ldr	r3, [r4, #0]
1000d556:	2b00      	cmp	r3, #0
1000d558:	d000      	beq.n	1000d55c <_close_r+0x1c>
1000d55a:	602b      	str	r3, [r5, #0]
1000d55c:	bd38      	pop	{r3, r4, r5, pc}
1000d55e:	46c0      	nop			; (mov r8, r8)
1000d560:	1000ee78 	.word	0x1000ee78

1000d564 <quorem>:
1000d564:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d566:	6903      	ldr	r3, [r0, #16]
1000d568:	690c      	ldr	r4, [r1, #16]
1000d56a:	b089      	sub	sp, #36	; 0x24
1000d56c:	2600      	movs	r6, #0
1000d56e:	42a3      	cmp	r3, r4
1000d570:	db7c      	blt.n	1000d66c <quorem+0x108>
1000d572:	1c0b      	adds	r3, r1, #0
1000d574:	3c01      	subs	r4, #1
1000d576:	3314      	adds	r3, #20
1000d578:	00a5      	lsls	r5, r4, #2
1000d57a:	9303      	str	r3, [sp, #12]
1000d57c:	195b      	adds	r3, r3, r5
1000d57e:	9304      	str	r3, [sp, #16]
1000d580:	1c03      	adds	r3, r0, #0
1000d582:	3314      	adds	r3, #20
1000d584:	9301      	str	r3, [sp, #4]
1000d586:	195d      	adds	r5, r3, r5
1000d588:	9b04      	ldr	r3, [sp, #16]
1000d58a:	9107      	str	r1, [sp, #28]
1000d58c:	681b      	ldr	r3, [r3, #0]
1000d58e:	9002      	str	r0, [sp, #8]
1000d590:	1c59      	adds	r1, r3, #1
1000d592:	6828      	ldr	r0, [r5, #0]
1000d594:	9305      	str	r3, [sp, #20]
1000d596:	f7fc fb7d 	bl	10009c94 <__aeabi_uidiv>
1000d59a:	1e07      	subs	r7, r0, #0
1000d59c:	42b7      	cmp	r7, r6
1000d59e:	d035      	beq.n	1000d60c <quorem+0xa8>
1000d5a0:	9b03      	ldr	r3, [sp, #12]
1000d5a2:	9801      	ldr	r0, [sp, #4]
1000d5a4:	469c      	mov	ip, r3
1000d5a6:	9605      	str	r6, [sp, #20]
1000d5a8:	4663      	mov	r3, ip
1000d5aa:	cb04      	ldmia	r3!, {r2}
1000d5ac:	b291      	uxth	r1, r2
1000d5ae:	4379      	muls	r1, r7
1000d5b0:	0c12      	lsrs	r2, r2, #16
1000d5b2:	437a      	muls	r2, r7
1000d5b4:	1871      	adds	r1, r6, r1
1000d5b6:	0c0e      	lsrs	r6, r1, #16
1000d5b8:	469c      	mov	ip, r3
1000d5ba:	18b3      	adds	r3, r6, r2
1000d5bc:	9306      	str	r3, [sp, #24]
1000d5be:	8802      	ldrh	r2, [r0, #0]
1000d5c0:	0c1e      	lsrs	r6, r3, #16
1000d5c2:	9b05      	ldr	r3, [sp, #20]
1000d5c4:	b289      	uxth	r1, r1
1000d5c6:	18d2      	adds	r2, r2, r3
1000d5c8:	6803      	ldr	r3, [r0, #0]
1000d5ca:	1a52      	subs	r2, r2, r1
1000d5cc:	0c19      	lsrs	r1, r3, #16
1000d5ce:	466b      	mov	r3, sp
1000d5d0:	8b1b      	ldrh	r3, [r3, #24]
1000d5d2:	1acb      	subs	r3, r1, r3
1000d5d4:	1411      	asrs	r1, r2, #16
1000d5d6:	185b      	adds	r3, r3, r1
1000d5d8:	1419      	asrs	r1, r3, #16
1000d5da:	b292      	uxth	r2, r2
1000d5dc:	041b      	lsls	r3, r3, #16
1000d5de:	431a      	orrs	r2, r3
1000d5e0:	9b04      	ldr	r3, [sp, #16]
1000d5e2:	9105      	str	r1, [sp, #20]
1000d5e4:	c004      	stmia	r0!, {r2}
1000d5e6:	4563      	cmp	r3, ip
1000d5e8:	d2de      	bcs.n	1000d5a8 <quorem+0x44>
1000d5ea:	682b      	ldr	r3, [r5, #0]
1000d5ec:	2b00      	cmp	r3, #0
1000d5ee:	d10d      	bne.n	1000d60c <quorem+0xa8>
1000d5f0:	1c23      	adds	r3, r4, #0
1000d5f2:	9a01      	ldr	r2, [sp, #4]
1000d5f4:	3d04      	subs	r5, #4
1000d5f6:	4295      	cmp	r5, r2
1000d5f8:	d803      	bhi.n	1000d602 <quorem+0x9e>
1000d5fa:	9a02      	ldr	r2, [sp, #8]
1000d5fc:	1c1c      	adds	r4, r3, #0
1000d5fe:	6113      	str	r3, [r2, #16]
1000d600:	e004      	b.n	1000d60c <quorem+0xa8>
1000d602:	682a      	ldr	r2, [r5, #0]
1000d604:	2a00      	cmp	r2, #0
1000d606:	d1f8      	bne.n	1000d5fa <quorem+0x96>
1000d608:	3b01      	subs	r3, #1
1000d60a:	e7f2      	b.n	1000d5f2 <quorem+0x8e>
1000d60c:	9802      	ldr	r0, [sp, #8]
1000d60e:	9907      	ldr	r1, [sp, #28]
1000d610:	f7ff f9f2 	bl	1000c9f8 <__mcmp>
1000d614:	2800      	cmp	r0, #0
1000d616:	db28      	blt.n	1000d66a <quorem+0x106>
1000d618:	2000      	movs	r0, #0
1000d61a:	9901      	ldr	r1, [sp, #4]
1000d61c:	9a03      	ldr	r2, [sp, #12]
1000d61e:	3701      	adds	r7, #1
1000d620:	ca20      	ldmia	r2!, {r5}
1000d622:	880b      	ldrh	r3, [r1, #0]
1000d624:	1818      	adds	r0, r3, r0
1000d626:	b2ab      	uxth	r3, r5
1000d628:	1ac3      	subs	r3, r0, r3
1000d62a:	6808      	ldr	r0, [r1, #0]
1000d62c:	0c2d      	lsrs	r5, r5, #16
1000d62e:	0c00      	lsrs	r0, r0, #16
1000d630:	1b45      	subs	r5, r0, r5
1000d632:	141e      	asrs	r6, r3, #16
1000d634:	19ad      	adds	r5, r5, r6
1000d636:	1428      	asrs	r0, r5, #16
1000d638:	b29b      	uxth	r3, r3
1000d63a:	042d      	lsls	r5, r5, #16
1000d63c:	432b      	orrs	r3, r5
1000d63e:	c108      	stmia	r1!, {r3}
1000d640:	9b04      	ldr	r3, [sp, #16]
1000d642:	4293      	cmp	r3, r2
1000d644:	d2ec      	bcs.n	1000d620 <quorem+0xbc>
1000d646:	9a01      	ldr	r2, [sp, #4]
1000d648:	00a3      	lsls	r3, r4, #2
1000d64a:	18d3      	adds	r3, r2, r3
1000d64c:	681a      	ldr	r2, [r3, #0]
1000d64e:	2a00      	cmp	r2, #0
1000d650:	d10b      	bne.n	1000d66a <quorem+0x106>
1000d652:	9a01      	ldr	r2, [sp, #4]
1000d654:	3b04      	subs	r3, #4
1000d656:	4293      	cmp	r3, r2
1000d658:	d802      	bhi.n	1000d660 <quorem+0xfc>
1000d65a:	9b02      	ldr	r3, [sp, #8]
1000d65c:	611c      	str	r4, [r3, #16]
1000d65e:	e004      	b.n	1000d66a <quorem+0x106>
1000d660:	681a      	ldr	r2, [r3, #0]
1000d662:	2a00      	cmp	r2, #0
1000d664:	d1f9      	bne.n	1000d65a <quorem+0xf6>
1000d666:	3c01      	subs	r4, #1
1000d668:	e7f3      	b.n	1000d652 <quorem+0xee>
1000d66a:	1c3e      	adds	r6, r7, #0
1000d66c:	1c30      	adds	r0, r6, #0
1000d66e:	b009      	add	sp, #36	; 0x24
1000d670:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

1000d674 <_dtoa_r>:
1000d674:	b5f0      	push	{r4, r5, r6, r7, lr}
1000d676:	1c16      	adds	r6, r2, #0
1000d678:	1c1f      	adds	r7, r3, #0
1000d67a:	6a44      	ldr	r4, [r0, #36]	; 0x24
1000d67c:	b09b      	sub	sp, #108	; 0x6c
1000d67e:	9008      	str	r0, [sp, #32]
1000d680:	9d23      	ldr	r5, [sp, #140]	; 0x8c
1000d682:	9606      	str	r6, [sp, #24]
1000d684:	9707      	str	r7, [sp, #28]
1000d686:	2c00      	cmp	r4, #0
1000d688:	d108      	bne.n	1000d69c <_dtoa_r+0x28>
1000d68a:	2010      	movs	r0, #16
1000d68c:	f7fe ff98 	bl	1000c5c0 <malloc>
1000d690:	9b08      	ldr	r3, [sp, #32]
1000d692:	6258      	str	r0, [r3, #36]	; 0x24
1000d694:	6044      	str	r4, [r0, #4]
1000d696:	6084      	str	r4, [r0, #8]
1000d698:	6004      	str	r4, [r0, #0]
1000d69a:	60c4      	str	r4, [r0, #12]
1000d69c:	9b08      	ldr	r3, [sp, #32]
1000d69e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
1000d6a0:	6819      	ldr	r1, [r3, #0]
1000d6a2:	2900      	cmp	r1, #0
1000d6a4:	d00b      	beq.n	1000d6be <_dtoa_r+0x4a>
1000d6a6:	685a      	ldr	r2, [r3, #4]
1000d6a8:	2301      	movs	r3, #1
1000d6aa:	4093      	lsls	r3, r2
1000d6ac:	604a      	str	r2, [r1, #4]
1000d6ae:	608b      	str	r3, [r1, #8]
1000d6b0:	9808      	ldr	r0, [sp, #32]
1000d6b2:	f7fe ffc7 	bl	1000c644 <_Bfree>
1000d6b6:	2200      	movs	r2, #0
1000d6b8:	9b08      	ldr	r3, [sp, #32]
1000d6ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
1000d6bc:	601a      	str	r2, [r3, #0]
1000d6be:	9b07      	ldr	r3, [sp, #28]
1000d6c0:	2b00      	cmp	r3, #0
1000d6c2:	da05      	bge.n	1000d6d0 <_dtoa_r+0x5c>
1000d6c4:	2301      	movs	r3, #1
1000d6c6:	602b      	str	r3, [r5, #0]
1000d6c8:	007b      	lsls	r3, r7, #1
1000d6ca:	085b      	lsrs	r3, r3, #1
1000d6cc:	9307      	str	r3, [sp, #28]
1000d6ce:	e001      	b.n	1000d6d4 <_dtoa_r+0x60>
1000d6d0:	2300      	movs	r3, #0
1000d6d2:	602b      	str	r3, [r5, #0]
1000d6d4:	9c07      	ldr	r4, [sp, #28]
1000d6d6:	4bc6      	ldr	r3, [pc, #792]	; (1000d9f0 <_dtoa_r+0x37c>)
1000d6d8:	1c22      	adds	r2, r4, #0
1000d6da:	9317      	str	r3, [sp, #92]	; 0x5c
1000d6dc:	401a      	ands	r2, r3
1000d6de:	429a      	cmp	r2, r3
1000d6e0:	d119      	bne.n	1000d716 <_dtoa_r+0xa2>
1000d6e2:	4bc4      	ldr	r3, [pc, #784]	; (1000d9f4 <_dtoa_r+0x380>)
1000d6e4:	9a22      	ldr	r2, [sp, #136]	; 0x88
1000d6e6:	6013      	str	r3, [r2, #0]
1000d6e8:	9a06      	ldr	r2, [sp, #24]
1000d6ea:	4bc3      	ldr	r3, [pc, #780]	; (1000d9f8 <_dtoa_r+0x384>)
1000d6ec:	2a00      	cmp	r2, #0
1000d6ee:	d102      	bne.n	1000d6f6 <_dtoa_r+0x82>
1000d6f0:	0324      	lsls	r4, r4, #12
1000d6f2:	d100      	bne.n	1000d6f6 <_dtoa_r+0x82>
1000d6f4:	4bc1      	ldr	r3, [pc, #772]	; (1000d9fc <_dtoa_r+0x388>)
1000d6f6:	9a24      	ldr	r2, [sp, #144]	; 0x90
1000d6f8:	1c18      	adds	r0, r3, #0
1000d6fa:	2a00      	cmp	r2, #0
1000d6fc:	d101      	bne.n	1000d702 <_dtoa_r+0x8e>
1000d6fe:	f000 fdb6 	bl	1000e26e <_dtoa_r+0xbfa>
1000d702:	78d9      	ldrb	r1, [r3, #3]
1000d704:	1cda      	adds	r2, r3, #3
1000d706:	2900      	cmp	r1, #0
1000d708:	d000      	beq.n	1000d70c <_dtoa_r+0x98>
1000d70a:	3205      	adds	r2, #5
1000d70c:	9924      	ldr	r1, [sp, #144]	; 0x90
1000d70e:	1c18      	adds	r0, r3, #0
1000d710:	600a      	str	r2, [r1, #0]
1000d712:	f000 fdac 	bl	1000e26e <_dtoa_r+0xbfa>
1000d716:	9e06      	ldr	r6, [sp, #24]
1000d718:	9f07      	ldr	r7, [sp, #28]
1000d71a:	2200      	movs	r2, #0
1000d71c:	1c30      	adds	r0, r6, #0
1000d71e:	1c39      	adds	r1, r7, #0
1000d720:	2300      	movs	r3, #0
1000d722:	f7fc fb59 	bl	10009dd8 <__aeabi_dcmpeq>
1000d726:	1e05      	subs	r5, r0, #0
1000d728:	d00e      	beq.n	1000d748 <_dtoa_r+0xd4>
1000d72a:	2301      	movs	r3, #1
1000d72c:	9a22      	ldr	r2, [sp, #136]	; 0x88
1000d72e:	6013      	str	r3, [r2, #0]
1000d730:	4bb3      	ldr	r3, [pc, #716]	; (1000da00 <_dtoa_r+0x38c>)
1000d732:	9a24      	ldr	r2, [sp, #144]	; 0x90
1000d734:	1c18      	adds	r0, r3, #0
1000d736:	2a00      	cmp	r2, #0
1000d738:	d101      	bne.n	1000d73e <_dtoa_r+0xca>
1000d73a:	f000 fd98 	bl	1000e26e <_dtoa_r+0xbfa>
1000d73e:	4ab1      	ldr	r2, [pc, #708]	; (1000da04 <_dtoa_r+0x390>)
1000d740:	9924      	ldr	r1, [sp, #144]	; 0x90
1000d742:	600a      	str	r2, [r1, #0]
1000d744:	f000 fd93 	bl	1000e26e <_dtoa_r+0xbfa>
1000d748:	ab19      	add	r3, sp, #100	; 0x64
1000d74a:	9300      	str	r3, [sp, #0]
1000d74c:	ab18      	add	r3, sp, #96	; 0x60
1000d74e:	9301      	str	r3, [sp, #4]
1000d750:	9808      	ldr	r0, [sp, #32]
1000d752:	1c32      	adds	r2, r6, #0
1000d754:	1c3b      	adds	r3, r7, #0
1000d756:	f7ff f9d5 	bl	1000cb04 <__d2b>
1000d75a:	0061      	lsls	r1, r4, #1
1000d75c:	900a      	str	r0, [sp, #40]	; 0x28
1000d75e:	0d49      	lsrs	r1, r1, #21
1000d760:	d009      	beq.n	1000d776 <_dtoa_r+0x102>
1000d762:	0338      	lsls	r0, r7, #12
1000d764:	4ca8      	ldr	r4, [pc, #672]	; (1000da08 <_dtoa_r+0x394>)
1000d766:	0b00      	lsrs	r0, r0, #12
1000d768:	4304      	orrs	r4, r0
1000d76a:	48a8      	ldr	r0, [pc, #672]	; (1000da0c <_dtoa_r+0x398>)
1000d76c:	1c32      	adds	r2, r6, #0
1000d76e:	1c23      	adds	r3, r4, #0
1000d770:	180e      	adds	r6, r1, r0
1000d772:	9516      	str	r5, [sp, #88]	; 0x58
1000d774:	e01c      	b.n	1000d7b0 <_dtoa_r+0x13c>
1000d776:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000d778:	9a19      	ldr	r2, [sp, #100]	; 0x64
1000d77a:	189e      	adds	r6, r3, r2
1000d77c:	4ba4      	ldr	r3, [pc, #656]	; (1000da10 <_dtoa_r+0x39c>)
1000d77e:	429e      	cmp	r6, r3
1000d780:	db09      	blt.n	1000d796 <_dtoa_r+0x122>
1000d782:	4ba4      	ldr	r3, [pc, #656]	; (1000da14 <_dtoa_r+0x3a0>)
1000d784:	18f0      	adds	r0, r6, r3
1000d786:	9b06      	ldr	r3, [sp, #24]
1000d788:	40c3      	lsrs	r3, r0
1000d78a:	1c18      	adds	r0, r3, #0
1000d78c:	4ba2      	ldr	r3, [pc, #648]	; (1000da18 <_dtoa_r+0x3a4>)
1000d78e:	1b9b      	subs	r3, r3, r6
1000d790:	409c      	lsls	r4, r3
1000d792:	4320      	orrs	r0, r4
1000d794:	e004      	b.n	1000d7a0 <_dtoa_r+0x12c>
1000d796:	48a1      	ldr	r0, [pc, #644]	; (1000da1c <_dtoa_r+0x3a8>)
1000d798:	9b06      	ldr	r3, [sp, #24]
1000d79a:	1b80      	subs	r0, r0, r6
1000d79c:	4083      	lsls	r3, r0
1000d79e:	1c18      	adds	r0, r3, #0
1000d7a0:	f000 ff84 	bl	1000e6ac <__aeabi_ui2d>
1000d7a4:	4c9e      	ldr	r4, [pc, #632]	; (1000da20 <_dtoa_r+0x3ac>)
1000d7a6:	1c02      	adds	r2, r0, #0
1000d7a8:	190b      	adds	r3, r1, r4
1000d7aa:	2101      	movs	r1, #1
1000d7ac:	3e01      	subs	r6, #1
1000d7ae:	9116      	str	r1, [sp, #88]	; 0x58
1000d7b0:	1c10      	adds	r0, r2, #0
1000d7b2:	1c19      	adds	r1, r3, #0
1000d7b4:	2200      	movs	r2, #0
1000d7b6:	4b9b      	ldr	r3, [pc, #620]	; (1000da24 <_dtoa_r+0x3b0>)
1000d7b8:	f7fd feb6 	bl	1000b528 <__aeabi_dsub>
1000d7bc:	4a9a      	ldr	r2, [pc, #616]	; (1000da28 <_dtoa_r+0x3b4>)
1000d7be:	4b9b      	ldr	r3, [pc, #620]	; (1000da2c <_dtoa_r+0x3b8>)
1000d7c0:	f7fd fc18 	bl	1000aff4 <__aeabi_dmul>
1000d7c4:	4a9a      	ldr	r2, [pc, #616]	; (1000da30 <_dtoa_r+0x3bc>)
1000d7c6:	4b9b      	ldr	r3, [pc, #620]	; (1000da34 <_dtoa_r+0x3c0>)
1000d7c8:	f7fc fcae 	bl	1000a128 <__aeabi_dadd>
1000d7cc:	1c04      	adds	r4, r0, #0
1000d7ce:	1c30      	adds	r0, r6, #0
1000d7d0:	1c0d      	adds	r5, r1, #0
1000d7d2:	f000 ff2f 	bl	1000e634 <__aeabi_i2d>
1000d7d6:	4a98      	ldr	r2, [pc, #608]	; (1000da38 <_dtoa_r+0x3c4>)
1000d7d8:	4b98      	ldr	r3, [pc, #608]	; (1000da3c <_dtoa_r+0x3c8>)
1000d7da:	f7fd fc0b 	bl	1000aff4 <__aeabi_dmul>
1000d7de:	1c02      	adds	r2, r0, #0
1000d7e0:	1c0b      	adds	r3, r1, #0
1000d7e2:	1c20      	adds	r0, r4, #0
1000d7e4:	1c29      	adds	r1, r5, #0
1000d7e6:	f7fc fc9f 	bl	1000a128 <__aeabi_dadd>
1000d7ea:	1c04      	adds	r4, r0, #0
1000d7ec:	1c0d      	adds	r5, r1, #0
1000d7ee:	f000 feeb 	bl	1000e5c8 <__aeabi_d2iz>
1000d7f2:	1c29      	adds	r1, r5, #0
1000d7f4:	9003      	str	r0, [sp, #12]
1000d7f6:	2200      	movs	r2, #0
1000d7f8:	1c20      	adds	r0, r4, #0
1000d7fa:	2300      	movs	r3, #0
1000d7fc:	f7fc faf2 	bl	10009de4 <__aeabi_dcmplt>
1000d800:	2800      	cmp	r0, #0
1000d802:	d00d      	beq.n	1000d820 <_dtoa_r+0x1ac>
1000d804:	9803      	ldr	r0, [sp, #12]
1000d806:	f000 ff15 	bl	1000e634 <__aeabi_i2d>
1000d80a:	1c02      	adds	r2, r0, #0
1000d80c:	1c0b      	adds	r3, r1, #0
1000d80e:	1c20      	adds	r0, r4, #0
1000d810:	1c29      	adds	r1, r5, #0
1000d812:	f7fc fae1 	bl	10009dd8 <__aeabi_dcmpeq>
1000d816:	4243      	negs	r3, r0
1000d818:	4143      	adcs	r3, r0
1000d81a:	9a03      	ldr	r2, [sp, #12]
1000d81c:	1ad3      	subs	r3, r2, r3
1000d81e:	9303      	str	r3, [sp, #12]
1000d820:	2301      	movs	r3, #1
1000d822:	9313      	str	r3, [sp, #76]	; 0x4c
1000d824:	9b03      	ldr	r3, [sp, #12]
1000d826:	2b16      	cmp	r3, #22
1000d828:	d811      	bhi.n	1000d84e <_dtoa_r+0x1da>
1000d82a:	4a85      	ldr	r2, [pc, #532]	; (1000da40 <_dtoa_r+0x3cc>)
1000d82c:	00db      	lsls	r3, r3, #3
1000d82e:	18d3      	adds	r3, r2, r3
1000d830:	6818      	ldr	r0, [r3, #0]
1000d832:	6859      	ldr	r1, [r3, #4]
1000d834:	9a06      	ldr	r2, [sp, #24]
1000d836:	9b07      	ldr	r3, [sp, #28]
1000d838:	f7fc fae8 	bl	10009e0c <__aeabi_dcmpgt>
1000d83c:	2800      	cmp	r0, #0
1000d83e:	d005      	beq.n	1000d84c <_dtoa_r+0x1d8>
1000d840:	9b03      	ldr	r3, [sp, #12]
1000d842:	3b01      	subs	r3, #1
1000d844:	9303      	str	r3, [sp, #12]
1000d846:	2300      	movs	r3, #0
1000d848:	9313      	str	r3, [sp, #76]	; 0x4c
1000d84a:	e000      	b.n	1000d84e <_dtoa_r+0x1da>
1000d84c:	9013      	str	r0, [sp, #76]	; 0x4c
1000d84e:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000d850:	1b9e      	subs	r6, r3, r6
1000d852:	2300      	movs	r3, #0
1000d854:	930d      	str	r3, [sp, #52]	; 0x34
1000d856:	3e01      	subs	r6, #1
1000d858:	960e      	str	r6, [sp, #56]	; 0x38
1000d85a:	d504      	bpl.n	1000d866 <_dtoa_r+0x1f2>
1000d85c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000d85e:	425b      	negs	r3, r3
1000d860:	930d      	str	r3, [sp, #52]	; 0x34
1000d862:	2300      	movs	r3, #0
1000d864:	930e      	str	r3, [sp, #56]	; 0x38
1000d866:	9b03      	ldr	r3, [sp, #12]
1000d868:	2b00      	cmp	r3, #0
1000d86a:	db08      	blt.n	1000d87e <_dtoa_r+0x20a>
1000d86c:	9a03      	ldr	r2, [sp, #12]
1000d86e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000d870:	4694      	mov	ip, r2
1000d872:	4463      	add	r3, ip
1000d874:	930e      	str	r3, [sp, #56]	; 0x38
1000d876:	2300      	movs	r3, #0
1000d878:	9212      	str	r2, [sp, #72]	; 0x48
1000d87a:	930f      	str	r3, [sp, #60]	; 0x3c
1000d87c:	e007      	b.n	1000d88e <_dtoa_r+0x21a>
1000d87e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000d880:	9a03      	ldr	r2, [sp, #12]
1000d882:	1a9b      	subs	r3, r3, r2
1000d884:	930d      	str	r3, [sp, #52]	; 0x34
1000d886:	4253      	negs	r3, r2
1000d888:	930f      	str	r3, [sp, #60]	; 0x3c
1000d88a:	2300      	movs	r3, #0
1000d88c:	9312      	str	r3, [sp, #72]	; 0x48
1000d88e:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000d890:	2501      	movs	r5, #1
1000d892:	2b09      	cmp	r3, #9
1000d894:	d827      	bhi.n	1000d8e6 <_dtoa_r+0x272>
1000d896:	2b05      	cmp	r3, #5
1000d898:	dd02      	ble.n	1000d8a0 <_dtoa_r+0x22c>
1000d89a:	2500      	movs	r5, #0
1000d89c:	3b04      	subs	r3, #4
1000d89e:	9320      	str	r3, [sp, #128]	; 0x80
1000d8a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000d8a2:	1e98      	subs	r0, r3, #2
1000d8a4:	2803      	cmp	r0, #3
1000d8a6:	d823      	bhi.n	1000d8f0 <_dtoa_r+0x27c>
1000d8a8:	f000 fd94 	bl	1000e3d4 <__gnu_thumb1_case_uqi>
1000d8ac:	10040e02 	.word	0x10040e02
1000d8b0:	2300      	movs	r3, #0
1000d8b2:	e000      	b.n	1000d8b6 <_dtoa_r+0x242>
1000d8b4:	2301      	movs	r3, #1
1000d8b6:	9310      	str	r3, [sp, #64]	; 0x40
1000d8b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
1000d8ba:	2b00      	cmp	r3, #0
1000d8bc:	dc21      	bgt.n	1000d902 <_dtoa_r+0x28e>
1000d8be:	2301      	movs	r3, #1
1000d8c0:	930b      	str	r3, [sp, #44]	; 0x2c
1000d8c2:	9309      	str	r3, [sp, #36]	; 0x24
1000d8c4:	1c1a      	adds	r2, r3, #0
1000d8c6:	e01a      	b.n	1000d8fe <_dtoa_r+0x28a>
1000d8c8:	2300      	movs	r3, #0
1000d8ca:	e000      	b.n	1000d8ce <_dtoa_r+0x25a>
1000d8cc:	2301      	movs	r3, #1
1000d8ce:	9a03      	ldr	r2, [sp, #12]
1000d8d0:	9310      	str	r3, [sp, #64]	; 0x40
1000d8d2:	4694      	mov	ip, r2
1000d8d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
1000d8d6:	4463      	add	r3, ip
1000d8d8:	930b      	str	r3, [sp, #44]	; 0x2c
1000d8da:	3301      	adds	r3, #1
1000d8dc:	9309      	str	r3, [sp, #36]	; 0x24
1000d8de:	2b00      	cmp	r3, #0
1000d8e0:	dc12      	bgt.n	1000d908 <_dtoa_r+0x294>
1000d8e2:	2301      	movs	r3, #1
1000d8e4:	e010      	b.n	1000d908 <_dtoa_r+0x294>
1000d8e6:	2300      	movs	r3, #0
1000d8e8:	9510      	str	r5, [sp, #64]	; 0x40
1000d8ea:	9320      	str	r3, [sp, #128]	; 0x80
1000d8ec:	3b01      	subs	r3, #1
1000d8ee:	e002      	b.n	1000d8f6 <_dtoa_r+0x282>
1000d8f0:	2301      	movs	r3, #1
1000d8f2:	9310      	str	r3, [sp, #64]	; 0x40
1000d8f4:	3b02      	subs	r3, #2
1000d8f6:	2200      	movs	r2, #0
1000d8f8:	930b      	str	r3, [sp, #44]	; 0x2c
1000d8fa:	9309      	str	r3, [sp, #36]	; 0x24
1000d8fc:	3313      	adds	r3, #19
1000d8fe:	9221      	str	r2, [sp, #132]	; 0x84
1000d900:	e002      	b.n	1000d908 <_dtoa_r+0x294>
1000d902:	9b21      	ldr	r3, [sp, #132]	; 0x84
1000d904:	930b      	str	r3, [sp, #44]	; 0x2c
1000d906:	9309      	str	r3, [sp, #36]	; 0x24
1000d908:	9a08      	ldr	r2, [sp, #32]
1000d90a:	6a54      	ldr	r4, [r2, #36]	; 0x24
1000d90c:	2200      	movs	r2, #0
1000d90e:	6062      	str	r2, [r4, #4]
1000d910:	3204      	adds	r2, #4
1000d912:	1c11      	adds	r1, r2, #0
1000d914:	3114      	adds	r1, #20
1000d916:	4299      	cmp	r1, r3
1000d918:	d804      	bhi.n	1000d924 <_dtoa_r+0x2b0>
1000d91a:	6861      	ldr	r1, [r4, #4]
1000d91c:	0052      	lsls	r2, r2, #1
1000d91e:	3101      	adds	r1, #1
1000d920:	6061      	str	r1, [r4, #4]
1000d922:	e7f6      	b.n	1000d912 <_dtoa_r+0x29e>
1000d924:	9808      	ldr	r0, [sp, #32]
1000d926:	6861      	ldr	r1, [r4, #4]
1000d928:	f7fe fe54 	bl	1000c5d4 <_Balloc>
1000d92c:	9b08      	ldr	r3, [sp, #32]
1000d92e:	6020      	str	r0, [r4, #0]
1000d930:	6a5b      	ldr	r3, [r3, #36]	; 0x24
1000d932:	681b      	ldr	r3, [r3, #0]
1000d934:	930c      	str	r3, [sp, #48]	; 0x30
1000d936:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000d938:	2b0e      	cmp	r3, #14
1000d93a:	d900      	bls.n	1000d93e <_dtoa_r+0x2ca>
1000d93c:	e188      	b.n	1000dc50 <_dtoa_r+0x5dc>
1000d93e:	2d00      	cmp	r5, #0
1000d940:	d100      	bne.n	1000d944 <_dtoa_r+0x2d0>
1000d942:	e185      	b.n	1000dc50 <_dtoa_r+0x5dc>
1000d944:	9b06      	ldr	r3, [sp, #24]
1000d946:	9c07      	ldr	r4, [sp, #28]
1000d948:	9314      	str	r3, [sp, #80]	; 0x50
1000d94a:	9415      	str	r4, [sp, #84]	; 0x54
1000d94c:	9b03      	ldr	r3, [sp, #12]
1000d94e:	2b00      	cmp	r3, #0
1000d950:	dd30      	ble.n	1000d9b4 <_dtoa_r+0x340>
1000d952:	220f      	movs	r2, #15
1000d954:	493a      	ldr	r1, [pc, #232]	; (1000da40 <_dtoa_r+0x3cc>)
1000d956:	4013      	ands	r3, r2
1000d958:	00db      	lsls	r3, r3, #3
1000d95a:	18cb      	adds	r3, r1, r3
1000d95c:	685c      	ldr	r4, [r3, #4]
1000d95e:	681b      	ldr	r3, [r3, #0]
1000d960:	9304      	str	r3, [sp, #16]
1000d962:	9405      	str	r4, [sp, #20]
1000d964:	9b03      	ldr	r3, [sp, #12]
1000d966:	2702      	movs	r7, #2
1000d968:	111d      	asrs	r5, r3, #4
1000d96a:	06eb      	lsls	r3, r5, #27
1000d96c:	d50a      	bpl.n	1000d984 <_dtoa_r+0x310>
1000d96e:	9814      	ldr	r0, [sp, #80]	; 0x50
1000d970:	9915      	ldr	r1, [sp, #84]	; 0x54
1000d972:	4b34      	ldr	r3, [pc, #208]	; (1000da44 <_dtoa_r+0x3d0>)
1000d974:	4015      	ands	r5, r2
1000d976:	6a1a      	ldr	r2, [r3, #32]
1000d978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
1000d97a:	f7fc fefd 	bl	1000a778 <__aeabi_ddiv>
1000d97e:	9006      	str	r0, [sp, #24]
1000d980:	9107      	str	r1, [sp, #28]
1000d982:	3701      	adds	r7, #1
1000d984:	4c2f      	ldr	r4, [pc, #188]	; (1000da44 <_dtoa_r+0x3d0>)
1000d986:	2d00      	cmp	r5, #0
1000d988:	d00d      	beq.n	1000d9a6 <_dtoa_r+0x332>
1000d98a:	07eb      	lsls	r3, r5, #31
1000d98c:	d508      	bpl.n	1000d9a0 <_dtoa_r+0x32c>
1000d98e:	9804      	ldr	r0, [sp, #16]
1000d990:	9905      	ldr	r1, [sp, #20]
1000d992:	6822      	ldr	r2, [r4, #0]
1000d994:	6863      	ldr	r3, [r4, #4]
1000d996:	f7fd fb2d 	bl	1000aff4 <__aeabi_dmul>
1000d99a:	9004      	str	r0, [sp, #16]
1000d99c:	9105      	str	r1, [sp, #20]
1000d99e:	3701      	adds	r7, #1
1000d9a0:	106d      	asrs	r5, r5, #1
1000d9a2:	3408      	adds	r4, #8
1000d9a4:	e7ef      	b.n	1000d986 <_dtoa_r+0x312>
1000d9a6:	9806      	ldr	r0, [sp, #24]
1000d9a8:	9907      	ldr	r1, [sp, #28]
1000d9aa:	9a04      	ldr	r2, [sp, #16]
1000d9ac:	9b05      	ldr	r3, [sp, #20]
1000d9ae:	f7fc fee3 	bl	1000a778 <__aeabi_ddiv>
1000d9b2:	e049      	b.n	1000da48 <_dtoa_r+0x3d4>
1000d9b4:	9b03      	ldr	r3, [sp, #12]
1000d9b6:	2702      	movs	r7, #2
1000d9b8:	425d      	negs	r5, r3
1000d9ba:	2d00      	cmp	r5, #0
1000d9bc:	d046      	beq.n	1000da4c <_dtoa_r+0x3d8>
1000d9be:	9814      	ldr	r0, [sp, #80]	; 0x50
1000d9c0:	9915      	ldr	r1, [sp, #84]	; 0x54
1000d9c2:	230f      	movs	r3, #15
1000d9c4:	4a1e      	ldr	r2, [pc, #120]	; (1000da40 <_dtoa_r+0x3cc>)
1000d9c6:	402b      	ands	r3, r5
1000d9c8:	00db      	lsls	r3, r3, #3
1000d9ca:	18d3      	adds	r3, r2, r3
1000d9cc:	681a      	ldr	r2, [r3, #0]
1000d9ce:	685b      	ldr	r3, [r3, #4]
1000d9d0:	f7fd fb10 	bl	1000aff4 <__aeabi_dmul>
1000d9d4:	4c1b      	ldr	r4, [pc, #108]	; (1000da44 <_dtoa_r+0x3d0>)
1000d9d6:	112d      	asrs	r5, r5, #4
1000d9d8:	2d00      	cmp	r5, #0
1000d9da:	d035      	beq.n	1000da48 <_dtoa_r+0x3d4>
1000d9dc:	07eb      	lsls	r3, r5, #31
1000d9de:	d504      	bpl.n	1000d9ea <_dtoa_r+0x376>
1000d9e0:	6822      	ldr	r2, [r4, #0]
1000d9e2:	6863      	ldr	r3, [r4, #4]
1000d9e4:	3701      	adds	r7, #1
1000d9e6:	f7fd fb05 	bl	1000aff4 <__aeabi_dmul>
1000d9ea:	106d      	asrs	r5, r5, #1
1000d9ec:	3408      	adds	r4, #8
1000d9ee:	e7f3      	b.n	1000d9d8 <_dtoa_r+0x364>
1000d9f0:	7ff00000 	.word	0x7ff00000
1000d9f4:	0000270f 	.word	0x0000270f
1000d9f8:	1000eb80 	.word	0x1000eb80
1000d9fc:	1000eb77 	.word	0x1000eb77
1000da00:	1000eb84 	.word	0x1000eb84
1000da04:	1000eb85 	.word	0x1000eb85
1000da08:	3ff00000 	.word	0x3ff00000
1000da0c:	fffffc01 	.word	0xfffffc01
1000da10:	fffffbef 	.word	0xfffffbef
1000da14:	00000412 	.word	0x00000412
1000da18:	fffffc0e 	.word	0xfffffc0e
1000da1c:	fffffbee 	.word	0xfffffbee
1000da20:	fe100000 	.word	0xfe100000
1000da24:	3ff80000 	.word	0x3ff80000
1000da28:	636f4361 	.word	0x636f4361
1000da2c:	3fd287a7 	.word	0x3fd287a7
1000da30:	8b60c8b3 	.word	0x8b60c8b3
1000da34:	3fc68a28 	.word	0x3fc68a28
1000da38:	509f79fb 	.word	0x509f79fb
1000da3c:	3fd34413 	.word	0x3fd34413
1000da40:	1000ea48 	.word	0x1000ea48
1000da44:	1000eb10 	.word	0x1000eb10
1000da48:	9006      	str	r0, [sp, #24]
1000da4a:	9107      	str	r1, [sp, #28]
1000da4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1000da4e:	2b00      	cmp	r3, #0
1000da50:	d01e      	beq.n	1000da90 <_dtoa_r+0x41c>
1000da52:	9c06      	ldr	r4, [sp, #24]
1000da54:	9d07      	ldr	r5, [sp, #28]
1000da56:	2200      	movs	r2, #0
1000da58:	1c20      	adds	r0, r4, #0
1000da5a:	1c29      	adds	r1, r5, #0
1000da5c:	4bce      	ldr	r3, [pc, #824]	; (1000dd98 <_dtoa_r+0x724>)
1000da5e:	f7fc f9c1 	bl	10009de4 <__aeabi_dcmplt>
1000da62:	2800      	cmp	r0, #0
1000da64:	d014      	beq.n	1000da90 <_dtoa_r+0x41c>
1000da66:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000da68:	2b00      	cmp	r3, #0
1000da6a:	d011      	beq.n	1000da90 <_dtoa_r+0x41c>
1000da6c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000da6e:	2b00      	cmp	r3, #0
1000da70:	dc00      	bgt.n	1000da74 <_dtoa_r+0x400>
1000da72:	e0e9      	b.n	1000dc48 <_dtoa_r+0x5d4>
1000da74:	9b03      	ldr	r3, [sp, #12]
1000da76:	1c29      	adds	r1, r5, #0
1000da78:	3b01      	subs	r3, #1
1000da7a:	9311      	str	r3, [sp, #68]	; 0x44
1000da7c:	1c20      	adds	r0, r4, #0
1000da7e:	2200      	movs	r2, #0
1000da80:	4bc6      	ldr	r3, [pc, #792]	; (1000dd9c <_dtoa_r+0x728>)
1000da82:	f7fd fab7 	bl	1000aff4 <__aeabi_dmul>
1000da86:	3701      	adds	r7, #1
1000da88:	9006      	str	r0, [sp, #24]
1000da8a:	9107      	str	r1, [sp, #28]
1000da8c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
1000da8e:	e002      	b.n	1000da96 <_dtoa_r+0x422>
1000da90:	9b03      	ldr	r3, [sp, #12]
1000da92:	9d09      	ldr	r5, [sp, #36]	; 0x24
1000da94:	9311      	str	r3, [sp, #68]	; 0x44
1000da96:	1c38      	adds	r0, r7, #0
1000da98:	9b06      	ldr	r3, [sp, #24]
1000da9a:	9c07      	ldr	r4, [sp, #28]
1000da9c:	9304      	str	r3, [sp, #16]
1000da9e:	9405      	str	r4, [sp, #20]
1000daa0:	f000 fdc8 	bl	1000e634 <__aeabi_i2d>
1000daa4:	9a04      	ldr	r2, [sp, #16]
1000daa6:	9b05      	ldr	r3, [sp, #20]
1000daa8:	f7fd faa4 	bl	1000aff4 <__aeabi_dmul>
1000daac:	2200      	movs	r2, #0
1000daae:	4bbc      	ldr	r3, [pc, #752]	; (1000dda0 <_dtoa_r+0x72c>)
1000dab0:	f7fc fb3a 	bl	1000a128 <__aeabi_dadd>
1000dab4:	9006      	str	r0, [sp, #24]
1000dab6:	9107      	str	r1, [sp, #28]
1000dab8:	9e06      	ldr	r6, [sp, #24]
1000daba:	9f07      	ldr	r7, [sp, #28]
1000dabc:	9b07      	ldr	r3, [sp, #28]
1000dabe:	4ab9      	ldr	r2, [pc, #740]	; (1000dda4 <_dtoa_r+0x730>)
1000dac0:	189c      	adds	r4, r3, r2
1000dac2:	2d00      	cmp	r5, #0
1000dac4:	d11c      	bne.n	1000db00 <_dtoa_r+0x48c>
1000dac6:	9804      	ldr	r0, [sp, #16]
1000dac8:	9905      	ldr	r1, [sp, #20]
1000daca:	2200      	movs	r2, #0
1000dacc:	4bb6      	ldr	r3, [pc, #728]	; (1000dda8 <_dtoa_r+0x734>)
1000dace:	f7fd fd2b 	bl	1000b528 <__aeabi_dsub>
1000dad2:	1c32      	adds	r2, r6, #0
1000dad4:	1c23      	adds	r3, r4, #0
1000dad6:	9004      	str	r0, [sp, #16]
1000dad8:	9105      	str	r1, [sp, #20]
1000dada:	f7fc f997 	bl	10009e0c <__aeabi_dcmpgt>
1000dade:	2800      	cmp	r0, #0
1000dae0:	d000      	beq.n	1000dae4 <_dtoa_r+0x470>
1000dae2:	e263      	b.n	1000dfac <_dtoa_r+0x938>
1000dae4:	9804      	ldr	r0, [sp, #16]
1000dae6:	9905      	ldr	r1, [sp, #20]
1000dae8:	1c32      	adds	r2, r6, #0
1000daea:	4eb0      	ldr	r6, [pc, #704]	; (1000ddac <_dtoa_r+0x738>)
1000daec:	9c07      	ldr	r4, [sp, #28]
1000daee:	46b4      	mov	ip, r6
1000daf0:	4464      	add	r4, ip
1000daf2:	1c23      	adds	r3, r4, #0
1000daf4:	f7fc f976 	bl	10009de4 <__aeabi_dcmplt>
1000daf8:	2800      	cmp	r0, #0
1000dafa:	d000      	beq.n	1000dafe <_dtoa_r+0x48a>
1000dafc:	e24c      	b.n	1000df98 <_dtoa_r+0x924>
1000dafe:	e0a3      	b.n	1000dc48 <_dtoa_r+0x5d4>
1000db00:	4aab      	ldr	r2, [pc, #684]	; (1000ddb0 <_dtoa_r+0x73c>)
1000db02:	1e6b      	subs	r3, r5, #1
1000db04:	9910      	ldr	r1, [sp, #64]	; 0x40
1000db06:	00db      	lsls	r3, r3, #3
1000db08:	18d3      	adds	r3, r2, r3
1000db0a:	2900      	cmp	r1, #0
1000db0c:	d04e      	beq.n	1000dbac <_dtoa_r+0x538>
1000db0e:	681a      	ldr	r2, [r3, #0]
1000db10:	685b      	ldr	r3, [r3, #4]
1000db12:	2000      	movs	r0, #0
1000db14:	49a7      	ldr	r1, [pc, #668]	; (1000ddb4 <_dtoa_r+0x740>)
1000db16:	f7fc fe2f 	bl	1000a778 <__aeabi_ddiv>
1000db1a:	1c32      	adds	r2, r6, #0
1000db1c:	1c23      	adds	r3, r4, #0
1000db1e:	f7fd fd03 	bl	1000b528 <__aeabi_dsub>
1000db22:	9e04      	ldr	r6, [sp, #16]
1000db24:	9f05      	ldr	r7, [sp, #20]
1000db26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000db28:	9006      	str	r0, [sp, #24]
1000db2a:	9107      	str	r1, [sp, #28]
1000db2c:	9304      	str	r3, [sp, #16]
1000db2e:	1c39      	adds	r1, r7, #0
1000db30:	1c30      	adds	r0, r6, #0
1000db32:	f000 fd49 	bl	1000e5c8 <__aeabi_d2iz>
1000db36:	1c04      	adds	r4, r0, #0
1000db38:	f000 fd7c 	bl	1000e634 <__aeabi_i2d>
1000db3c:	1c02      	adds	r2, r0, #0
1000db3e:	1c0b      	adds	r3, r1, #0
1000db40:	1c30      	adds	r0, r6, #0
1000db42:	1c39      	adds	r1, r7, #0
1000db44:	f7fd fcf0 	bl	1000b528 <__aeabi_dsub>
1000db48:	9b04      	ldr	r3, [sp, #16]
1000db4a:	3430      	adds	r4, #48	; 0x30
1000db4c:	3301      	adds	r3, #1
1000db4e:	9304      	str	r3, [sp, #16]
1000db50:	3b01      	subs	r3, #1
1000db52:	701c      	strb	r4, [r3, #0]
1000db54:	9a06      	ldr	r2, [sp, #24]
1000db56:	9b07      	ldr	r3, [sp, #28]
1000db58:	1c06      	adds	r6, r0, #0
1000db5a:	1c0f      	adds	r7, r1, #0
1000db5c:	f7fc f942 	bl	10009de4 <__aeabi_dcmplt>
1000db60:	2800      	cmp	r0, #0
1000db62:	d000      	beq.n	1000db66 <_dtoa_r+0x4f2>
1000db64:	e361      	b.n	1000e22a <_dtoa_r+0xbb6>
1000db66:	1c32      	adds	r2, r6, #0
1000db68:	1c3b      	adds	r3, r7, #0
1000db6a:	2000      	movs	r0, #0
1000db6c:	498a      	ldr	r1, [pc, #552]	; (1000dd98 <_dtoa_r+0x724>)
1000db6e:	f7fd fcdb 	bl	1000b528 <__aeabi_dsub>
1000db72:	9a06      	ldr	r2, [sp, #24]
1000db74:	9b07      	ldr	r3, [sp, #28]
1000db76:	f7fc f935 	bl	10009de4 <__aeabi_dcmplt>
1000db7a:	2800      	cmp	r0, #0
1000db7c:	d000      	beq.n	1000db80 <_dtoa_r+0x50c>
1000db7e:	e0cd      	b.n	1000dd1c <_dtoa_r+0x6a8>
1000db80:	9b04      	ldr	r3, [sp, #16]
1000db82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000db84:	1a9b      	subs	r3, r3, r2
1000db86:	42ab      	cmp	r3, r5
1000db88:	da5e      	bge.n	1000dc48 <_dtoa_r+0x5d4>
1000db8a:	9806      	ldr	r0, [sp, #24]
1000db8c:	9907      	ldr	r1, [sp, #28]
1000db8e:	2200      	movs	r2, #0
1000db90:	4b82      	ldr	r3, [pc, #520]	; (1000dd9c <_dtoa_r+0x728>)
1000db92:	f7fd fa2f 	bl	1000aff4 <__aeabi_dmul>
1000db96:	2200      	movs	r2, #0
1000db98:	9006      	str	r0, [sp, #24]
1000db9a:	9107      	str	r1, [sp, #28]
1000db9c:	4b7f      	ldr	r3, [pc, #508]	; (1000dd9c <_dtoa_r+0x728>)
1000db9e:	1c30      	adds	r0, r6, #0
1000dba0:	1c39      	adds	r1, r7, #0
1000dba2:	f7fd fa27 	bl	1000aff4 <__aeabi_dmul>
1000dba6:	1c06      	adds	r6, r0, #0
1000dba8:	1c0f      	adds	r7, r1, #0
1000dbaa:	e7c0      	b.n	1000db2e <_dtoa_r+0x4ba>
1000dbac:	6818      	ldr	r0, [r3, #0]
1000dbae:	6859      	ldr	r1, [r3, #4]
1000dbb0:	1c32      	adds	r2, r6, #0
1000dbb2:	1c23      	adds	r3, r4, #0
1000dbb4:	f7fd fa1e 	bl	1000aff4 <__aeabi_dmul>
1000dbb8:	9e04      	ldr	r6, [sp, #16]
1000dbba:	9f05      	ldr	r7, [sp, #20]
1000dbbc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
1000dbbe:	9006      	str	r0, [sp, #24]
1000dbc0:	9107      	str	r1, [sp, #28]
1000dbc2:	1963      	adds	r3, r4, r5
1000dbc4:	9304      	str	r3, [sp, #16]
1000dbc6:	1c39      	adds	r1, r7, #0
1000dbc8:	1c30      	adds	r0, r6, #0
1000dbca:	f000 fcfd 	bl	1000e5c8 <__aeabi_d2iz>
1000dbce:	1c05      	adds	r5, r0, #0
1000dbd0:	f000 fd30 	bl	1000e634 <__aeabi_i2d>
1000dbd4:	1c0b      	adds	r3, r1, #0
1000dbd6:	1c02      	adds	r2, r0, #0
1000dbd8:	1c39      	adds	r1, r7, #0
1000dbda:	1c30      	adds	r0, r6, #0
1000dbdc:	f7fd fca4 	bl	1000b528 <__aeabi_dsub>
1000dbe0:	3530      	adds	r5, #48	; 0x30
1000dbe2:	9b04      	ldr	r3, [sp, #16]
1000dbe4:	7025      	strb	r5, [r4, #0]
1000dbe6:	3401      	adds	r4, #1
1000dbe8:	1c06      	adds	r6, r0, #0
1000dbea:	1c0f      	adds	r7, r1, #0
1000dbec:	42a3      	cmp	r3, r4
1000dbee:	d124      	bne.n	1000dc3a <_dtoa_r+0x5c6>
1000dbf0:	2200      	movs	r2, #0
1000dbf2:	9806      	ldr	r0, [sp, #24]
1000dbf4:	9907      	ldr	r1, [sp, #28]
1000dbf6:	4b6f      	ldr	r3, [pc, #444]	; (1000ddb4 <_dtoa_r+0x740>)
1000dbf8:	f7fc fa96 	bl	1000a128 <__aeabi_dadd>
1000dbfc:	1c02      	adds	r2, r0, #0
1000dbfe:	1c0b      	adds	r3, r1, #0
1000dc00:	1c30      	adds	r0, r6, #0
1000dc02:	1c39      	adds	r1, r7, #0
1000dc04:	f7fc f902 	bl	10009e0c <__aeabi_dcmpgt>
1000dc08:	2800      	cmp	r0, #0
1000dc0a:	d000      	beq.n	1000dc0e <_dtoa_r+0x59a>
1000dc0c:	e086      	b.n	1000dd1c <_dtoa_r+0x6a8>
1000dc0e:	9a06      	ldr	r2, [sp, #24]
1000dc10:	9b07      	ldr	r3, [sp, #28]
1000dc12:	2000      	movs	r0, #0
1000dc14:	4967      	ldr	r1, [pc, #412]	; (1000ddb4 <_dtoa_r+0x740>)
1000dc16:	f7fd fc87 	bl	1000b528 <__aeabi_dsub>
1000dc1a:	1c02      	adds	r2, r0, #0
1000dc1c:	1c0b      	adds	r3, r1, #0
1000dc1e:	1c30      	adds	r0, r6, #0
1000dc20:	1c39      	adds	r1, r7, #0
1000dc22:	f7fc f8df 	bl	10009de4 <__aeabi_dcmplt>
1000dc26:	2800      	cmp	r0, #0
1000dc28:	d00e      	beq.n	1000dc48 <_dtoa_r+0x5d4>
1000dc2a:	9b04      	ldr	r3, [sp, #16]
1000dc2c:	3b01      	subs	r3, #1
1000dc2e:	781a      	ldrb	r2, [r3, #0]
1000dc30:	2a30      	cmp	r2, #48	; 0x30
1000dc32:	d000      	beq.n	1000dc36 <_dtoa_r+0x5c2>
1000dc34:	e2f9      	b.n	1000e22a <_dtoa_r+0xbb6>
1000dc36:	9304      	str	r3, [sp, #16]
1000dc38:	e7f7      	b.n	1000dc2a <_dtoa_r+0x5b6>
1000dc3a:	2200      	movs	r2, #0
1000dc3c:	4b57      	ldr	r3, [pc, #348]	; (1000dd9c <_dtoa_r+0x728>)
1000dc3e:	f7fd f9d9 	bl	1000aff4 <__aeabi_dmul>
1000dc42:	1c06      	adds	r6, r0, #0
1000dc44:	1c0f      	adds	r7, r1, #0
1000dc46:	e7be      	b.n	1000dbc6 <_dtoa_r+0x552>
1000dc48:	9b14      	ldr	r3, [sp, #80]	; 0x50
1000dc4a:	9c15      	ldr	r4, [sp, #84]	; 0x54
1000dc4c:	9306      	str	r3, [sp, #24]
1000dc4e:	9407      	str	r4, [sp, #28]
1000dc50:	9b19      	ldr	r3, [sp, #100]	; 0x64
1000dc52:	2b00      	cmp	r3, #0
1000dc54:	da00      	bge.n	1000dc58 <_dtoa_r+0x5e4>
1000dc56:	e086      	b.n	1000dd66 <_dtoa_r+0x6f2>
1000dc58:	9a03      	ldr	r2, [sp, #12]
1000dc5a:	2a0e      	cmp	r2, #14
1000dc5c:	dd00      	ble.n	1000dc60 <_dtoa_r+0x5ec>
1000dc5e:	e082      	b.n	1000dd66 <_dtoa_r+0x6f2>
1000dc60:	00d3      	lsls	r3, r2, #3
1000dc62:	4a53      	ldr	r2, [pc, #332]	; (1000ddb0 <_dtoa_r+0x73c>)
1000dc64:	18d3      	adds	r3, r2, r3
1000dc66:	681e      	ldr	r6, [r3, #0]
1000dc68:	685f      	ldr	r7, [r3, #4]
1000dc6a:	9b21      	ldr	r3, [sp, #132]	; 0x84
1000dc6c:	2b00      	cmp	r3, #0
1000dc6e:	da14      	bge.n	1000dc9a <_dtoa_r+0x626>
1000dc70:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000dc72:	2b00      	cmp	r3, #0
1000dc74:	dc11      	bgt.n	1000dc9a <_dtoa_r+0x626>
1000dc76:	d000      	beq.n	1000dc7a <_dtoa_r+0x606>
1000dc78:	e190      	b.n	1000df9c <_dtoa_r+0x928>
1000dc7a:	1c30      	adds	r0, r6, #0
1000dc7c:	1c39      	adds	r1, r7, #0
1000dc7e:	2200      	movs	r2, #0
1000dc80:	4b49      	ldr	r3, [pc, #292]	; (1000dda8 <_dtoa_r+0x734>)
1000dc82:	f7fd f9b7 	bl	1000aff4 <__aeabi_dmul>
1000dc86:	9a06      	ldr	r2, [sp, #24]
1000dc88:	9b07      	ldr	r3, [sp, #28]
1000dc8a:	f7fc f8c9 	bl	10009e20 <__aeabi_dcmpge>
1000dc8e:	9f09      	ldr	r7, [sp, #36]	; 0x24
1000dc90:	1c3e      	adds	r6, r7, #0
1000dc92:	2800      	cmp	r0, #0
1000dc94:	d000      	beq.n	1000dc98 <_dtoa_r+0x624>
1000dc96:	e183      	b.n	1000dfa0 <_dtoa_r+0x92c>
1000dc98:	e18c      	b.n	1000dfb4 <_dtoa_r+0x940>
1000dc9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000dc9c:	9c06      	ldr	r4, [sp, #24]
1000dc9e:	9d07      	ldr	r5, [sp, #28]
1000dca0:	9304      	str	r3, [sp, #16]
1000dca2:	1c32      	adds	r2, r6, #0
1000dca4:	1c3b      	adds	r3, r7, #0
1000dca6:	1c20      	adds	r0, r4, #0
1000dca8:	1c29      	adds	r1, r5, #0
1000dcaa:	f7fc fd65 	bl	1000a778 <__aeabi_ddiv>
1000dcae:	f000 fc8b 	bl	1000e5c8 <__aeabi_d2iz>
1000dcb2:	9006      	str	r0, [sp, #24]
1000dcb4:	f000 fcbe 	bl	1000e634 <__aeabi_i2d>
1000dcb8:	1c32      	adds	r2, r6, #0
1000dcba:	1c3b      	adds	r3, r7, #0
1000dcbc:	f7fd f99a 	bl	1000aff4 <__aeabi_dmul>
1000dcc0:	1c02      	adds	r2, r0, #0
1000dcc2:	1c0b      	adds	r3, r1, #0
1000dcc4:	1c20      	adds	r0, r4, #0
1000dcc6:	1c29      	adds	r1, r5, #0
1000dcc8:	f7fd fc2e 	bl	1000b528 <__aeabi_dsub>
1000dccc:	1c0b      	adds	r3, r1, #0
1000dcce:	9904      	ldr	r1, [sp, #16]
1000dcd0:	1c02      	adds	r2, r0, #0
1000dcd2:	9806      	ldr	r0, [sp, #24]
1000dcd4:	3101      	adds	r1, #1
1000dcd6:	9104      	str	r1, [sp, #16]
1000dcd8:	3030      	adds	r0, #48	; 0x30
1000dcda:	3901      	subs	r1, #1
1000dcdc:	7008      	strb	r0, [r1, #0]
1000dcde:	980c      	ldr	r0, [sp, #48]	; 0x30
1000dce0:	9904      	ldr	r1, [sp, #16]
1000dce2:	1a09      	subs	r1, r1, r0
1000dce4:	9809      	ldr	r0, [sp, #36]	; 0x24
1000dce6:	4281      	cmp	r1, r0
1000dce8:	d12e      	bne.n	1000dd48 <_dtoa_r+0x6d4>
1000dcea:	1c10      	adds	r0, r2, #0
1000dcec:	1c19      	adds	r1, r3, #0
1000dcee:	f7fc fa1b 	bl	1000a128 <__aeabi_dadd>
1000dcf2:	1c32      	adds	r2, r6, #0
1000dcf4:	1c3b      	adds	r3, r7, #0
1000dcf6:	1c04      	adds	r4, r0, #0
1000dcf8:	1c0d      	adds	r5, r1, #0
1000dcfa:	f7fc f887 	bl	10009e0c <__aeabi_dcmpgt>
1000dcfe:	2800      	cmp	r0, #0
1000dd00:	d110      	bne.n	1000dd24 <_dtoa_r+0x6b0>
1000dd02:	1c20      	adds	r0, r4, #0
1000dd04:	1c29      	adds	r1, r5, #0
1000dd06:	1c32      	adds	r2, r6, #0
1000dd08:	1c3b      	adds	r3, r7, #0
1000dd0a:	f7fc f865 	bl	10009dd8 <__aeabi_dcmpeq>
1000dd0e:	2800      	cmp	r0, #0
1000dd10:	d100      	bne.n	1000dd14 <_dtoa_r+0x6a0>
1000dd12:	e28c      	b.n	1000e22e <_dtoa_r+0xbba>
1000dd14:	9b06      	ldr	r3, [sp, #24]
1000dd16:	07db      	lsls	r3, r3, #31
1000dd18:	d404      	bmi.n	1000dd24 <_dtoa_r+0x6b0>
1000dd1a:	e288      	b.n	1000e22e <_dtoa_r+0xbba>
1000dd1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
1000dd1e:	9303      	str	r3, [sp, #12]
1000dd20:	e000      	b.n	1000dd24 <_dtoa_r+0x6b0>
1000dd22:	9304      	str	r3, [sp, #16]
1000dd24:	9b04      	ldr	r3, [sp, #16]
1000dd26:	3b01      	subs	r3, #1
1000dd28:	781a      	ldrb	r2, [r3, #0]
1000dd2a:	2a39      	cmp	r2, #57	; 0x39
1000dd2c:	d108      	bne.n	1000dd40 <_dtoa_r+0x6cc>
1000dd2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000dd30:	4293      	cmp	r3, r2
1000dd32:	d1f6      	bne.n	1000dd22 <_dtoa_r+0x6ae>
1000dd34:	9b03      	ldr	r3, [sp, #12]
1000dd36:	3301      	adds	r3, #1
1000dd38:	9303      	str	r3, [sp, #12]
1000dd3a:	2330      	movs	r3, #48	; 0x30
1000dd3c:	7013      	strb	r3, [r2, #0]
1000dd3e:	1c13      	adds	r3, r2, #0
1000dd40:	781a      	ldrb	r2, [r3, #0]
1000dd42:	3201      	adds	r2, #1
1000dd44:	701a      	strb	r2, [r3, #0]
1000dd46:	e272      	b.n	1000e22e <_dtoa_r+0xbba>
1000dd48:	1c10      	adds	r0, r2, #0
1000dd4a:	1c19      	adds	r1, r3, #0
1000dd4c:	2200      	movs	r2, #0
1000dd4e:	4b13      	ldr	r3, [pc, #76]	; (1000dd9c <_dtoa_r+0x728>)
1000dd50:	f7fd f950 	bl	1000aff4 <__aeabi_dmul>
1000dd54:	2200      	movs	r2, #0
1000dd56:	2300      	movs	r3, #0
1000dd58:	1c04      	adds	r4, r0, #0
1000dd5a:	1c0d      	adds	r5, r1, #0
1000dd5c:	f7fc f83c 	bl	10009dd8 <__aeabi_dcmpeq>
1000dd60:	2800      	cmp	r0, #0
1000dd62:	d09e      	beq.n	1000dca2 <_dtoa_r+0x62e>
1000dd64:	e263      	b.n	1000e22e <_dtoa_r+0xbba>
1000dd66:	9a10      	ldr	r2, [sp, #64]	; 0x40
1000dd68:	2a00      	cmp	r2, #0
1000dd6a:	d044      	beq.n	1000ddf6 <_dtoa_r+0x782>
1000dd6c:	9a20      	ldr	r2, [sp, #128]	; 0x80
1000dd6e:	2a01      	cmp	r2, #1
1000dd70:	dc0b      	bgt.n	1000dd8a <_dtoa_r+0x716>
1000dd72:	9a16      	ldr	r2, [sp, #88]	; 0x58
1000dd74:	2a00      	cmp	r2, #0
1000dd76:	d002      	beq.n	1000dd7e <_dtoa_r+0x70a>
1000dd78:	4a0f      	ldr	r2, [pc, #60]	; (1000ddb8 <_dtoa_r+0x744>)
1000dd7a:	189b      	adds	r3, r3, r2
1000dd7c:	e002      	b.n	1000dd84 <_dtoa_r+0x710>
1000dd7e:	2336      	movs	r3, #54	; 0x36
1000dd80:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000dd82:	1a9b      	subs	r3, r3, r2
1000dd84:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
1000dd86:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000dd88:	e029      	b.n	1000ddde <_dtoa_r+0x76a>
1000dd8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000dd8c:	1e5d      	subs	r5, r3, #1
1000dd8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000dd90:	42ab      	cmp	r3, r5
1000dd92:	db13      	blt.n	1000ddbc <_dtoa_r+0x748>
1000dd94:	1b5d      	subs	r5, r3, r5
1000dd96:	e018      	b.n	1000ddca <_dtoa_r+0x756>
1000dd98:	3ff00000 	.word	0x3ff00000
1000dd9c:	40240000 	.word	0x40240000
1000dda0:	401c0000 	.word	0x401c0000
1000dda4:	fcc00000 	.word	0xfcc00000
1000dda8:	40140000 	.word	0x40140000
1000ddac:	7cc00000 	.word	0x7cc00000
1000ddb0:	1000ea48 	.word	0x1000ea48
1000ddb4:	3fe00000 	.word	0x3fe00000
1000ddb8:	00000433 	.word	0x00000433
1000ddbc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000ddbe:	950f      	str	r5, [sp, #60]	; 0x3c
1000ddc0:	1aea      	subs	r2, r5, r3
1000ddc2:	2500      	movs	r5, #0
1000ddc4:	9b12      	ldr	r3, [sp, #72]	; 0x48
1000ddc6:	189b      	adds	r3, r3, r2
1000ddc8:	9312      	str	r3, [sp, #72]	; 0x48
1000ddca:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000ddcc:	2b00      	cmp	r3, #0
1000ddce:	da04      	bge.n	1000ddda <_dtoa_r+0x766>
1000ddd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000ddd2:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000ddd4:	1a9c      	subs	r4, r3, r2
1000ddd6:	2300      	movs	r3, #0
1000ddd8:	e001      	b.n	1000ddde <_dtoa_r+0x76a>
1000ddda:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000dddc:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000ddde:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1000dde0:	9808      	ldr	r0, [sp, #32]
1000dde2:	18d2      	adds	r2, r2, r3
1000dde4:	920d      	str	r2, [sp, #52]	; 0x34
1000dde6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1000dde8:	2101      	movs	r1, #1
1000ddea:	18d3      	adds	r3, r2, r3
1000ddec:	930e      	str	r3, [sp, #56]	; 0x38
1000ddee:	f7fe fcc8 	bl	1000c782 <__i2b>
1000ddf2:	1c06      	adds	r6, r0, #0
1000ddf4:	e002      	b.n	1000ddfc <_dtoa_r+0x788>
1000ddf6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
1000ddf8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000ddfa:	9e10      	ldr	r6, [sp, #64]	; 0x40
1000ddfc:	2c00      	cmp	r4, #0
1000ddfe:	d00c      	beq.n	1000de1a <_dtoa_r+0x7a6>
1000de00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000de02:	2b00      	cmp	r3, #0
1000de04:	dd09      	ble.n	1000de1a <_dtoa_r+0x7a6>
1000de06:	42a3      	cmp	r3, r4
1000de08:	dd00      	ble.n	1000de0c <_dtoa_r+0x798>
1000de0a:	1c23      	adds	r3, r4, #0
1000de0c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
1000de0e:	1ae4      	subs	r4, r4, r3
1000de10:	1ad2      	subs	r2, r2, r3
1000de12:	920d      	str	r2, [sp, #52]	; 0x34
1000de14:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1000de16:	1ad3      	subs	r3, r2, r3
1000de18:	930e      	str	r3, [sp, #56]	; 0x38
1000de1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000de1c:	2b00      	cmp	r3, #0
1000de1e:	dd21      	ble.n	1000de64 <_dtoa_r+0x7f0>
1000de20:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000de22:	2b00      	cmp	r3, #0
1000de24:	d018      	beq.n	1000de58 <_dtoa_r+0x7e4>
1000de26:	2d00      	cmp	r5, #0
1000de28:	dd10      	ble.n	1000de4c <_dtoa_r+0x7d8>
1000de2a:	1c31      	adds	r1, r6, #0
1000de2c:	1c2a      	adds	r2, r5, #0
1000de2e:	9808      	ldr	r0, [sp, #32]
1000de30:	f7fe fd3e 	bl	1000c8b0 <__pow5mult>
1000de34:	1c06      	adds	r6, r0, #0
1000de36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1000de38:	1c31      	adds	r1, r6, #0
1000de3a:	9808      	ldr	r0, [sp, #32]
1000de3c:	f7fe fcaa 	bl	1000c794 <__multiply>
1000de40:	1c07      	adds	r7, r0, #0
1000de42:	990a      	ldr	r1, [sp, #40]	; 0x28
1000de44:	9808      	ldr	r0, [sp, #32]
1000de46:	f7fe fbfd 	bl	1000c644 <_Bfree>
1000de4a:	970a      	str	r7, [sp, #40]	; 0x28
1000de4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1000de4e:	1b5a      	subs	r2, r3, r5
1000de50:	d008      	beq.n	1000de64 <_dtoa_r+0x7f0>
1000de52:	9808      	ldr	r0, [sp, #32]
1000de54:	990a      	ldr	r1, [sp, #40]	; 0x28
1000de56:	e002      	b.n	1000de5e <_dtoa_r+0x7ea>
1000de58:	9808      	ldr	r0, [sp, #32]
1000de5a:	990a      	ldr	r1, [sp, #40]	; 0x28
1000de5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
1000de5e:	f7fe fd27 	bl	1000c8b0 <__pow5mult>
1000de62:	900a      	str	r0, [sp, #40]	; 0x28
1000de64:	9808      	ldr	r0, [sp, #32]
1000de66:	2101      	movs	r1, #1
1000de68:	f7fe fc8b 	bl	1000c782 <__i2b>
1000de6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
1000de6e:	1c07      	adds	r7, r0, #0
1000de70:	2b00      	cmp	r3, #0
1000de72:	dd0a      	ble.n	1000de8a <_dtoa_r+0x816>
1000de74:	1c39      	adds	r1, r7, #0
1000de76:	1c1a      	adds	r2, r3, #0
1000de78:	9808      	ldr	r0, [sp, #32]
1000de7a:	f7fe fd19 	bl	1000c8b0 <__pow5mult>
1000de7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000de80:	1c07      	adds	r7, r0, #0
1000de82:	2500      	movs	r5, #0
1000de84:	2b01      	cmp	r3, #1
1000de86:	dc1b      	bgt.n	1000dec0 <_dtoa_r+0x84c>
1000de88:	e003      	b.n	1000de92 <_dtoa_r+0x81e>
1000de8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000de8c:	2500      	movs	r5, #0
1000de8e:	2b01      	cmp	r3, #1
1000de90:	dc12      	bgt.n	1000deb8 <_dtoa_r+0x844>
1000de92:	2500      	movs	r5, #0
1000de94:	9b06      	ldr	r3, [sp, #24]
1000de96:	42ab      	cmp	r3, r5
1000de98:	d10e      	bne.n	1000deb8 <_dtoa_r+0x844>
1000de9a:	9b07      	ldr	r3, [sp, #28]
1000de9c:	031b      	lsls	r3, r3, #12
1000de9e:	42ab      	cmp	r3, r5
1000dea0:	d10a      	bne.n	1000deb8 <_dtoa_r+0x844>
1000dea2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
1000dea4:	9a07      	ldr	r2, [sp, #28]
1000dea6:	4213      	tst	r3, r2
1000dea8:	d006      	beq.n	1000deb8 <_dtoa_r+0x844>
1000deaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000deac:	3501      	adds	r5, #1
1000deae:	3301      	adds	r3, #1
1000deb0:	930d      	str	r3, [sp, #52]	; 0x34
1000deb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000deb4:	3301      	adds	r3, #1
1000deb6:	930e      	str	r3, [sp, #56]	; 0x38
1000deb8:	9b12      	ldr	r3, [sp, #72]	; 0x48
1000deba:	2001      	movs	r0, #1
1000debc:	2b00      	cmp	r3, #0
1000debe:	d008      	beq.n	1000ded2 <_dtoa_r+0x85e>
1000dec0:	693b      	ldr	r3, [r7, #16]
1000dec2:	3303      	adds	r3, #3
1000dec4:	009b      	lsls	r3, r3, #2
1000dec6:	18fb      	adds	r3, r7, r3
1000dec8:	6858      	ldr	r0, [r3, #4]
1000deca:	f7fe fc10 	bl	1000c6ee <__hi0bits>
1000dece:	2320      	movs	r3, #32
1000ded0:	1a18      	subs	r0, r3, r0
1000ded2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000ded4:	18c0      	adds	r0, r0, r3
1000ded6:	231f      	movs	r3, #31
1000ded8:	4018      	ands	r0, r3
1000deda:	d009      	beq.n	1000def0 <_dtoa_r+0x87c>
1000dedc:	3301      	adds	r3, #1
1000dede:	1a1b      	subs	r3, r3, r0
1000dee0:	2b04      	cmp	r3, #4
1000dee2:	dd02      	ble.n	1000deea <_dtoa_r+0x876>
1000dee4:	231c      	movs	r3, #28
1000dee6:	1a18      	subs	r0, r3, r0
1000dee8:	e003      	b.n	1000def2 <_dtoa_r+0x87e>
1000deea:	2b04      	cmp	r3, #4
1000deec:	d008      	beq.n	1000df00 <_dtoa_r+0x88c>
1000deee:	1c18      	adds	r0, r3, #0
1000def0:	301c      	adds	r0, #28
1000def2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000def4:	1824      	adds	r4, r4, r0
1000def6:	181b      	adds	r3, r3, r0
1000def8:	930d      	str	r3, [sp, #52]	; 0x34
1000defa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000defc:	181b      	adds	r3, r3, r0
1000defe:	930e      	str	r3, [sp, #56]	; 0x38
1000df00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000df02:	2b00      	cmp	r3, #0
1000df04:	dd05      	ble.n	1000df12 <_dtoa_r+0x89e>
1000df06:	9808      	ldr	r0, [sp, #32]
1000df08:	990a      	ldr	r1, [sp, #40]	; 0x28
1000df0a:	1c1a      	adds	r2, r3, #0
1000df0c:	f7fe fd22 	bl	1000c954 <__lshift>
1000df10:	900a      	str	r0, [sp, #40]	; 0x28
1000df12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000df14:	2b00      	cmp	r3, #0
1000df16:	dd05      	ble.n	1000df24 <_dtoa_r+0x8b0>
1000df18:	1c39      	adds	r1, r7, #0
1000df1a:	9808      	ldr	r0, [sp, #32]
1000df1c:	1c1a      	adds	r2, r3, #0
1000df1e:	f7fe fd19 	bl	1000c954 <__lshift>
1000df22:	1c07      	adds	r7, r0, #0
1000df24:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1000df26:	2b00      	cmp	r3, #0
1000df28:	d01e      	beq.n	1000df68 <_dtoa_r+0x8f4>
1000df2a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000df2c:	1c39      	adds	r1, r7, #0
1000df2e:	f7fe fd63 	bl	1000c9f8 <__mcmp>
1000df32:	2800      	cmp	r0, #0
1000df34:	da18      	bge.n	1000df68 <_dtoa_r+0x8f4>
1000df36:	9b03      	ldr	r3, [sp, #12]
1000df38:	9808      	ldr	r0, [sp, #32]
1000df3a:	3b01      	subs	r3, #1
1000df3c:	9303      	str	r3, [sp, #12]
1000df3e:	990a      	ldr	r1, [sp, #40]	; 0x28
1000df40:	2300      	movs	r3, #0
1000df42:	220a      	movs	r2, #10
1000df44:	f7fe fb97 	bl	1000c676 <__multadd>
1000df48:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000df4a:	900a      	str	r0, [sp, #40]	; 0x28
1000df4c:	2b00      	cmp	r3, #0
1000df4e:	d100      	bne.n	1000df52 <_dtoa_r+0x8de>
1000df50:	e17f      	b.n	1000e252 <_dtoa_r+0xbde>
1000df52:	1c31      	adds	r1, r6, #0
1000df54:	2300      	movs	r3, #0
1000df56:	9808      	ldr	r0, [sp, #32]
1000df58:	220a      	movs	r2, #10
1000df5a:	f7fe fb8c 	bl	1000c676 <__multadd>
1000df5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000df60:	1c06      	adds	r6, r0, #0
1000df62:	2b00      	cmp	r3, #0
1000df64:	dc3c      	bgt.n	1000dfe0 <_dtoa_r+0x96c>
1000df66:	e17d      	b.n	1000e264 <_dtoa_r+0xbf0>
1000df68:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000df6a:	2b00      	cmp	r3, #0
1000df6c:	dc2e      	bgt.n	1000dfcc <_dtoa_r+0x958>
1000df6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000df70:	2b02      	cmp	r3, #2
1000df72:	dd2b      	ble.n	1000dfcc <_dtoa_r+0x958>
1000df74:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000df76:	930b      	str	r3, [sp, #44]	; 0x2c
1000df78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000df7a:	2b00      	cmp	r3, #0
1000df7c:	d110      	bne.n	1000dfa0 <_dtoa_r+0x92c>
1000df7e:	1c39      	adds	r1, r7, #0
1000df80:	9808      	ldr	r0, [sp, #32]
1000df82:	2205      	movs	r2, #5
1000df84:	f7fe fb77 	bl	1000c676 <__multadd>
1000df88:	1c07      	adds	r7, r0, #0
1000df8a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000df8c:	1c39      	adds	r1, r7, #0
1000df8e:	f7fe fd33 	bl	1000c9f8 <__mcmp>
1000df92:	2800      	cmp	r0, #0
1000df94:	dc0e      	bgt.n	1000dfb4 <_dtoa_r+0x940>
1000df96:	e003      	b.n	1000dfa0 <_dtoa_r+0x92c>
1000df98:	1c2f      	adds	r7, r5, #0
1000df9a:	e000      	b.n	1000df9e <_dtoa_r+0x92a>
1000df9c:	2700      	movs	r7, #0
1000df9e:	1c3e      	adds	r6, r7, #0
1000dfa0:	9b21      	ldr	r3, [sp, #132]	; 0x84
1000dfa2:	43db      	mvns	r3, r3
1000dfa4:	9303      	str	r3, [sp, #12]
1000dfa6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000dfa8:	9304      	str	r3, [sp, #16]
1000dfaa:	e00c      	b.n	1000dfc6 <_dtoa_r+0x952>
1000dfac:	1c2f      	adds	r7, r5, #0
1000dfae:	1c2e      	adds	r6, r5, #0
1000dfb0:	9b11      	ldr	r3, [sp, #68]	; 0x44
1000dfb2:	9303      	str	r3, [sp, #12]
1000dfb4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000dfb6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000dfb8:	3301      	adds	r3, #1
1000dfba:	9304      	str	r3, [sp, #16]
1000dfbc:	2331      	movs	r3, #49	; 0x31
1000dfbe:	7013      	strb	r3, [r2, #0]
1000dfc0:	9b03      	ldr	r3, [sp, #12]
1000dfc2:	3301      	adds	r3, #1
1000dfc4:	9303      	str	r3, [sp, #12]
1000dfc6:	9609      	str	r6, [sp, #36]	; 0x24
1000dfc8:	2600      	movs	r6, #0
1000dfca:	e11a      	b.n	1000e202 <_dtoa_r+0xb8e>
1000dfcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
1000dfce:	2b00      	cmp	r3, #0
1000dfd0:	d104      	bne.n	1000dfdc <_dtoa_r+0x968>
1000dfd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000dfd4:	930b      	str	r3, [sp, #44]	; 0x2c
1000dfd6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
1000dfd8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
1000dfda:	e0d0      	b.n	1000e17e <_dtoa_r+0xb0a>
1000dfdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000dfde:	930b      	str	r3, [sp, #44]	; 0x2c
1000dfe0:	2c00      	cmp	r4, #0
1000dfe2:	dd05      	ble.n	1000dff0 <_dtoa_r+0x97c>
1000dfe4:	1c31      	adds	r1, r6, #0
1000dfe6:	9808      	ldr	r0, [sp, #32]
1000dfe8:	1c22      	adds	r2, r4, #0
1000dfea:	f7fe fcb3 	bl	1000c954 <__lshift>
1000dfee:	1c06      	adds	r6, r0, #0
1000dff0:	9609      	str	r6, [sp, #36]	; 0x24
1000dff2:	2d00      	cmp	r5, #0
1000dff4:	d012      	beq.n	1000e01c <_dtoa_r+0x9a8>
1000dff6:	6871      	ldr	r1, [r6, #4]
1000dff8:	9808      	ldr	r0, [sp, #32]
1000dffa:	f7fe faeb 	bl	1000c5d4 <_Balloc>
1000dffe:	1c31      	adds	r1, r6, #0
1000e000:	1c04      	adds	r4, r0, #0
1000e002:	6933      	ldr	r3, [r6, #16]
1000e004:	310c      	adds	r1, #12
1000e006:	1c9a      	adds	r2, r3, #2
1000e008:	0092      	lsls	r2, r2, #2
1000e00a:	300c      	adds	r0, #12
1000e00c:	f7fd ff52 	bl	1000beb4 <memcpy>
1000e010:	9808      	ldr	r0, [sp, #32]
1000e012:	1c21      	adds	r1, r4, #0
1000e014:	2201      	movs	r2, #1
1000e016:	f7fe fc9d 	bl	1000c954 <__lshift>
1000e01a:	9009      	str	r0, [sp, #36]	; 0x24
1000e01c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000e01e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000e020:	930e      	str	r3, [sp, #56]	; 0x38
1000e022:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000e024:	9c0a      	ldr	r4, [sp, #40]	; 0x28
1000e026:	3b01      	subs	r3, #1
1000e028:	18d3      	adds	r3, r2, r3
1000e02a:	9310      	str	r3, [sp, #64]	; 0x40
1000e02c:	1c39      	adds	r1, r7, #0
1000e02e:	1c20      	adds	r0, r4, #0
1000e030:	f7ff fa98 	bl	1000d564 <quorem>
1000e034:	1c03      	adds	r3, r0, #0
1000e036:	900f      	str	r0, [sp, #60]	; 0x3c
1000e038:	3330      	adds	r3, #48	; 0x30
1000e03a:	1c31      	adds	r1, r6, #0
1000e03c:	1c20      	adds	r0, r4, #0
1000e03e:	930d      	str	r3, [sp, #52]	; 0x34
1000e040:	f7fe fcda 	bl	1000c9f8 <__mcmp>
1000e044:	1c39      	adds	r1, r7, #0
1000e046:	900b      	str	r0, [sp, #44]	; 0x2c
1000e048:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000e04a:	9808      	ldr	r0, [sp, #32]
1000e04c:	f7fe fcef 	bl	1000ca2e <__mdiff>
1000e050:	2301      	movs	r3, #1
1000e052:	9304      	str	r3, [sp, #16]
1000e054:	68c3      	ldr	r3, [r0, #12]
1000e056:	1c05      	adds	r5, r0, #0
1000e058:	2b00      	cmp	r3, #0
1000e05a:	d104      	bne.n	1000e066 <_dtoa_r+0x9f2>
1000e05c:	1c20      	adds	r0, r4, #0
1000e05e:	1c29      	adds	r1, r5, #0
1000e060:	f7fe fcca 	bl	1000c9f8 <__mcmp>
1000e064:	9004      	str	r0, [sp, #16]
1000e066:	9808      	ldr	r0, [sp, #32]
1000e068:	1c29      	adds	r1, r5, #0
1000e06a:	f7fe faeb 	bl	1000c644 <_Bfree>
1000e06e:	9b04      	ldr	r3, [sp, #16]
1000e070:	9a20      	ldr	r2, [sp, #128]	; 0x80
1000e072:	4313      	orrs	r3, r2
1000e074:	d110      	bne.n	1000e098 <_dtoa_r+0xa24>
1000e076:	9a06      	ldr	r2, [sp, #24]
1000e078:	3301      	adds	r3, #1
1000e07a:	4213      	tst	r3, r2
1000e07c:	d10c      	bne.n	1000e098 <_dtoa_r+0xa24>
1000e07e:	980d      	ldr	r0, [sp, #52]	; 0x34
1000e080:	940a      	str	r4, [sp, #40]	; 0x28
1000e082:	2839      	cmp	r0, #57	; 0x39
1000e084:	d03d      	beq.n	1000e102 <_dtoa_r+0xa8e>
1000e086:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000e088:	2b00      	cmp	r3, #0
1000e08a:	dd01      	ble.n	1000e090 <_dtoa_r+0xa1c>
1000e08c:	980f      	ldr	r0, [sp, #60]	; 0x3c
1000e08e:	3031      	adds	r0, #49	; 0x31
1000e090:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e092:	3301      	adds	r3, #1
1000e094:	9304      	str	r3, [sp, #16]
1000e096:	e03e      	b.n	1000e116 <_dtoa_r+0xaa2>
1000e098:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000e09a:	2b00      	cmp	r3, #0
1000e09c:	da05      	bge.n	1000e0aa <_dtoa_r+0xa36>
1000e09e:	9b04      	ldr	r3, [sp, #16]
1000e0a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
1000e0a2:	940a      	str	r4, [sp, #40]	; 0x28
1000e0a4:	2b00      	cmp	r3, #0
1000e0a6:	dc09      	bgt.n	1000e0bc <_dtoa_r+0xa48>
1000e0a8:	e01c      	b.n	1000e0e4 <_dtoa_r+0xa70>
1000e0aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
1000e0ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000e0ae:	431d      	orrs	r5, r3
1000e0b0:	d11e      	bne.n	1000e0f0 <_dtoa_r+0xa7c>
1000e0b2:	2301      	movs	r3, #1
1000e0b4:	9a06      	ldr	r2, [sp, #24]
1000e0b6:	4213      	tst	r3, r2
1000e0b8:	d11a      	bne.n	1000e0f0 <_dtoa_r+0xa7c>
1000e0ba:	e7f0      	b.n	1000e09e <_dtoa_r+0xa2a>
1000e0bc:	1c21      	adds	r1, r4, #0
1000e0be:	9808      	ldr	r0, [sp, #32]
1000e0c0:	2201      	movs	r2, #1
1000e0c2:	f7fe fc47 	bl	1000c954 <__lshift>
1000e0c6:	1c39      	adds	r1, r7, #0
1000e0c8:	900a      	str	r0, [sp, #40]	; 0x28
1000e0ca:	f7fe fc95 	bl	1000c9f8 <__mcmp>
1000e0ce:	2800      	cmp	r0, #0
1000e0d0:	dc03      	bgt.n	1000e0da <_dtoa_r+0xa66>
1000e0d2:	d107      	bne.n	1000e0e4 <_dtoa_r+0xa70>
1000e0d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000e0d6:	07db      	lsls	r3, r3, #31
1000e0d8:	d504      	bpl.n	1000e0e4 <_dtoa_r+0xa70>
1000e0da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000e0dc:	2b39      	cmp	r3, #57	; 0x39
1000e0de:	d010      	beq.n	1000e102 <_dtoa_r+0xa8e>
1000e0e0:	1c1d      	adds	r5, r3, #0
1000e0e2:	3501      	adds	r5, #1
1000e0e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e0e6:	3301      	adds	r3, #1
1000e0e8:	9304      	str	r3, [sp, #16]
1000e0ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e0ec:	701d      	strb	r5, [r3, #0]
1000e0ee:	e088      	b.n	1000e202 <_dtoa_r+0xb8e>
1000e0f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e0f2:	1c5d      	adds	r5, r3, #1
1000e0f4:	9b04      	ldr	r3, [sp, #16]
1000e0f6:	2b00      	cmp	r3, #0
1000e0f8:	dd10      	ble.n	1000e11c <_dtoa_r+0xaa8>
1000e0fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000e0fc:	940a      	str	r4, [sp, #40]	; 0x28
1000e0fe:	2b39      	cmp	r3, #57	; 0x39
1000e100:	d106      	bne.n	1000e110 <_dtoa_r+0xa9c>
1000e102:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e104:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1000e106:	3301      	adds	r3, #1
1000e108:	9304      	str	r3, [sp, #16]
1000e10a:	2339      	movs	r3, #57	; 0x39
1000e10c:	7013      	strb	r3, [r2, #0]
1000e10e:	e060      	b.n	1000e1d2 <_dtoa_r+0xb5e>
1000e110:	980d      	ldr	r0, [sp, #52]	; 0x34
1000e112:	9504      	str	r5, [sp, #16]
1000e114:	3001      	adds	r0, #1
1000e116:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e118:	7018      	strb	r0, [r3, #0]
1000e11a:	e072      	b.n	1000e202 <_dtoa_r+0xb8e>
1000e11c:	466a      	mov	r2, sp
1000e11e:	2134      	movs	r1, #52	; 0x34
1000e120:	1852      	adds	r2, r2, r1
1000e122:	7812      	ldrb	r2, [r2, #0]
1000e124:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1000e126:	9504      	str	r5, [sp, #16]
1000e128:	701a      	strb	r2, [r3, #0]
1000e12a:	9a10      	ldr	r2, [sp, #64]	; 0x40
1000e12c:	4293      	cmp	r3, r2
1000e12e:	d03f      	beq.n	1000e1b0 <_dtoa_r+0xb3c>
1000e130:	1c21      	adds	r1, r4, #0
1000e132:	220a      	movs	r2, #10
1000e134:	2300      	movs	r3, #0
1000e136:	9808      	ldr	r0, [sp, #32]
1000e138:	f7fe fa9d 	bl	1000c676 <__multadd>
1000e13c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000e13e:	1c04      	adds	r4, r0, #0
1000e140:	1c31      	adds	r1, r6, #0
1000e142:	9808      	ldr	r0, [sp, #32]
1000e144:	220a      	movs	r2, #10
1000e146:	429e      	cmp	r6, r3
1000e148:	d105      	bne.n	1000e156 <_dtoa_r+0xae2>
1000e14a:	2300      	movs	r3, #0
1000e14c:	f7fe fa93 	bl	1000c676 <__multadd>
1000e150:	1c06      	adds	r6, r0, #0
1000e152:	9009      	str	r0, [sp, #36]	; 0x24
1000e154:	e00a      	b.n	1000e16c <_dtoa_r+0xaf8>
1000e156:	2300      	movs	r3, #0
1000e158:	f7fe fa8d 	bl	1000c676 <__multadd>
1000e15c:	9909      	ldr	r1, [sp, #36]	; 0x24
1000e15e:	1c06      	adds	r6, r0, #0
1000e160:	220a      	movs	r2, #10
1000e162:	9808      	ldr	r0, [sp, #32]
1000e164:	2300      	movs	r3, #0
1000e166:	f7fe fa86 	bl	1000c676 <__multadd>
1000e16a:	9009      	str	r0, [sp, #36]	; 0x24
1000e16c:	950e      	str	r5, [sp, #56]	; 0x38
1000e16e:	e75d      	b.n	1000e02c <_dtoa_r+0x9b8>
1000e170:	1c21      	adds	r1, r4, #0
1000e172:	9808      	ldr	r0, [sp, #32]
1000e174:	220a      	movs	r2, #10
1000e176:	2300      	movs	r3, #0
1000e178:	f7fe fa7d 	bl	1000c676 <__multadd>
1000e17c:	1c04      	adds	r4, r0, #0
1000e17e:	1c20      	adds	r0, r4, #0
1000e180:	1c39      	adds	r1, r7, #0
1000e182:	f7ff f9ef 	bl	1000d564 <quorem>
1000e186:	2234      	movs	r2, #52	; 0x34
1000e188:	466b      	mov	r3, sp
1000e18a:	3030      	adds	r0, #48	; 0x30
1000e18c:	189b      	adds	r3, r3, r2
1000e18e:	900d      	str	r0, [sp, #52]	; 0x34
1000e190:	781b      	ldrb	r3, [r3, #0]
1000e192:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1000e194:	702b      	strb	r3, [r5, #0]
1000e196:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000e198:	3501      	adds	r5, #1
1000e19a:	1aeb      	subs	r3, r5, r3
1000e19c:	4293      	cmp	r3, r2
1000e19e:	dbe7      	blt.n	1000e170 <_dtoa_r+0xafc>
1000e1a0:	1e13      	subs	r3, r2, #0
1000e1a2:	dc00      	bgt.n	1000e1a6 <_dtoa_r+0xb32>
1000e1a4:	2301      	movs	r3, #1
1000e1a6:	9609      	str	r6, [sp, #36]	; 0x24
1000e1a8:	2600      	movs	r6, #0
1000e1aa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000e1ac:	18d3      	adds	r3, r2, r3
1000e1ae:	9304      	str	r3, [sp, #16]
1000e1b0:	1c21      	adds	r1, r4, #0
1000e1b2:	9808      	ldr	r0, [sp, #32]
1000e1b4:	2201      	movs	r2, #1
1000e1b6:	f7fe fbcd 	bl	1000c954 <__lshift>
1000e1ba:	1c39      	adds	r1, r7, #0
1000e1bc:	900a      	str	r0, [sp, #40]	; 0x28
1000e1be:	f7fe fc1b 	bl	1000c9f8 <__mcmp>
1000e1c2:	2800      	cmp	r0, #0
1000e1c4:	dc05      	bgt.n	1000e1d2 <_dtoa_r+0xb5e>
1000e1c6:	d115      	bne.n	1000e1f4 <_dtoa_r+0xb80>
1000e1c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000e1ca:	07db      	lsls	r3, r3, #31
1000e1cc:	d401      	bmi.n	1000e1d2 <_dtoa_r+0xb5e>
1000e1ce:	e011      	b.n	1000e1f4 <_dtoa_r+0xb80>
1000e1d0:	9304      	str	r3, [sp, #16]
1000e1d2:	9b04      	ldr	r3, [sp, #16]
1000e1d4:	3b01      	subs	r3, #1
1000e1d6:	781a      	ldrb	r2, [r3, #0]
1000e1d8:	2a39      	cmp	r2, #57	; 0x39
1000e1da:	d108      	bne.n	1000e1ee <_dtoa_r+0xb7a>
1000e1dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1000e1de:	4293      	cmp	r3, r2
1000e1e0:	d1f6      	bne.n	1000e1d0 <_dtoa_r+0xb5c>
1000e1e2:	9b03      	ldr	r3, [sp, #12]
1000e1e4:	3301      	adds	r3, #1
1000e1e6:	9303      	str	r3, [sp, #12]
1000e1e8:	2331      	movs	r3, #49	; 0x31
1000e1ea:	7013      	strb	r3, [r2, #0]
1000e1ec:	e009      	b.n	1000e202 <_dtoa_r+0xb8e>
1000e1ee:	3201      	adds	r2, #1
1000e1f0:	701a      	strb	r2, [r3, #0]
1000e1f2:	e006      	b.n	1000e202 <_dtoa_r+0xb8e>
1000e1f4:	9b04      	ldr	r3, [sp, #16]
1000e1f6:	3b01      	subs	r3, #1
1000e1f8:	781a      	ldrb	r2, [r3, #0]
1000e1fa:	2a30      	cmp	r2, #48	; 0x30
1000e1fc:	d101      	bne.n	1000e202 <_dtoa_r+0xb8e>
1000e1fe:	9304      	str	r3, [sp, #16]
1000e200:	e7f8      	b.n	1000e1f4 <_dtoa_r+0xb80>
1000e202:	9808      	ldr	r0, [sp, #32]
1000e204:	1c39      	adds	r1, r7, #0
1000e206:	f7fe fa1d 	bl	1000c644 <_Bfree>
1000e20a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000e20c:	2b00      	cmp	r3, #0
1000e20e:	d00e      	beq.n	1000e22e <_dtoa_r+0xbba>
1000e210:	2e00      	cmp	r6, #0
1000e212:	d005      	beq.n	1000e220 <_dtoa_r+0xbac>
1000e214:	429e      	cmp	r6, r3
1000e216:	d003      	beq.n	1000e220 <_dtoa_r+0xbac>
1000e218:	9808      	ldr	r0, [sp, #32]
1000e21a:	1c31      	adds	r1, r6, #0
1000e21c:	f7fe fa12 	bl	1000c644 <_Bfree>
1000e220:	9808      	ldr	r0, [sp, #32]
1000e222:	9909      	ldr	r1, [sp, #36]	; 0x24
1000e224:	f7fe fa0e 	bl	1000c644 <_Bfree>
1000e228:	e001      	b.n	1000e22e <_dtoa_r+0xbba>
1000e22a:	9b11      	ldr	r3, [sp, #68]	; 0x44
1000e22c:	9303      	str	r3, [sp, #12]
1000e22e:	9808      	ldr	r0, [sp, #32]
1000e230:	990a      	ldr	r1, [sp, #40]	; 0x28
1000e232:	f7fe fa07 	bl	1000c644 <_Bfree>
1000e236:	2300      	movs	r3, #0
1000e238:	9a04      	ldr	r2, [sp, #16]
1000e23a:	980c      	ldr	r0, [sp, #48]	; 0x30
1000e23c:	7013      	strb	r3, [r2, #0]
1000e23e:	9b03      	ldr	r3, [sp, #12]
1000e240:	9a22      	ldr	r2, [sp, #136]	; 0x88
1000e242:	3301      	adds	r3, #1
1000e244:	6013      	str	r3, [r2, #0]
1000e246:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000e248:	2b00      	cmp	r3, #0
1000e24a:	d010      	beq.n	1000e26e <_dtoa_r+0xbfa>
1000e24c:	9a04      	ldr	r2, [sp, #16]
1000e24e:	601a      	str	r2, [r3, #0]
1000e250:	e00d      	b.n	1000e26e <_dtoa_r+0xbfa>
1000e252:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1000e254:	2b00      	cmp	r3, #0
1000e256:	dd00      	ble.n	1000e25a <_dtoa_r+0xbe6>
1000e258:	e6bd      	b.n	1000dfd6 <_dtoa_r+0x962>
1000e25a:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000e25c:	2b02      	cmp	r3, #2
1000e25e:	dd00      	ble.n	1000e262 <_dtoa_r+0xbee>
1000e260:	e68a      	b.n	1000df78 <_dtoa_r+0x904>
1000e262:	e6b8      	b.n	1000dfd6 <_dtoa_r+0x962>
1000e264:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000e266:	2b02      	cmp	r3, #2
1000e268:	dd00      	ble.n	1000e26c <_dtoa_r+0xbf8>
1000e26a:	e685      	b.n	1000df78 <_dtoa_r+0x904>
1000e26c:	e6b8      	b.n	1000dfe0 <_dtoa_r+0x96c>
1000e26e:	b01b      	add	sp, #108	; 0x6c
1000e270:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e272:	46c0      	nop			; (mov r8, r8)

1000e274 <_lseek_r>:
1000e274:	b538      	push	{r3, r4, r5, lr}
1000e276:	1c05      	adds	r5, r0, #0
1000e278:	2000      	movs	r0, #0
1000e27a:	4c07      	ldr	r4, [pc, #28]	; (1000e298 <_lseek_r+0x24>)
1000e27c:	6020      	str	r0, [r4, #0]
1000e27e:	1c08      	adds	r0, r1, #0
1000e280:	1c11      	adds	r1, r2, #0
1000e282:	1c1a      	adds	r2, r3, #0
1000e284:	f7fb fad4 	bl	10009830 <_lseek>
1000e288:	1c43      	adds	r3, r0, #1
1000e28a:	d103      	bne.n	1000e294 <_lseek_r+0x20>
1000e28c:	6823      	ldr	r3, [r4, #0]
1000e28e:	2b00      	cmp	r3, #0
1000e290:	d000      	beq.n	1000e294 <_lseek_r+0x20>
1000e292:	602b      	str	r3, [r5, #0]
1000e294:	bd38      	pop	{r3, r4, r5, pc}
1000e296:	46c0      	nop			; (mov r8, r8)
1000e298:	1000ee78 	.word	0x1000ee78

1000e29c <__smakebuf_r>:
1000e29c:	b5f0      	push	{r4, r5, r6, r7, lr}
1000e29e:	898b      	ldrh	r3, [r1, #12]
1000e2a0:	b091      	sub	sp, #68	; 0x44
1000e2a2:	079b      	lsls	r3, r3, #30
1000e2a4:	d506      	bpl.n	1000e2b4 <__smakebuf_r+0x18>
1000e2a6:	1c0b      	adds	r3, r1, #0
1000e2a8:	3347      	adds	r3, #71	; 0x47
1000e2aa:	600b      	str	r3, [r1, #0]
1000e2ac:	610b      	str	r3, [r1, #16]
1000e2ae:	2301      	movs	r3, #1
1000e2b0:	614b      	str	r3, [r1, #20]
1000e2b2:	e045      	b.n	1000e340 <__smakebuf_r+0xa4>
1000e2b4:	1c0c      	adds	r4, r1, #0
1000e2b6:	230e      	movs	r3, #14
1000e2b8:	5ec9      	ldrsh	r1, [r1, r3]
1000e2ba:	1c06      	adds	r6, r0, #0
1000e2bc:	2900      	cmp	r1, #0
1000e2be:	da04      	bge.n	1000e2ca <__smakebuf_r+0x2e>
1000e2c0:	2380      	movs	r3, #128	; 0x80
1000e2c2:	89a5      	ldrh	r5, [r4, #12]
1000e2c4:	401d      	ands	r5, r3
1000e2c6:	d110      	bne.n	1000e2ea <__smakebuf_r+0x4e>
1000e2c8:	e00c      	b.n	1000e2e4 <__smakebuf_r+0x48>
1000e2ca:	aa01      	add	r2, sp, #4
1000e2cc:	f000 f85e 	bl	1000e38c <_fstat_r>
1000e2d0:	2800      	cmp	r0, #0
1000e2d2:	dbf5      	blt.n	1000e2c0 <__smakebuf_r+0x24>
1000e2d4:	23f0      	movs	r3, #240	; 0xf0
1000e2d6:	9d02      	ldr	r5, [sp, #8]
1000e2d8:	021b      	lsls	r3, r3, #8
1000e2da:	401d      	ands	r5, r3
1000e2dc:	4b19      	ldr	r3, [pc, #100]	; (1000e344 <__smakebuf_r+0xa8>)
1000e2de:	18ed      	adds	r5, r5, r3
1000e2e0:	426b      	negs	r3, r5
1000e2e2:	415d      	adcs	r5, r3
1000e2e4:	2780      	movs	r7, #128	; 0x80
1000e2e6:	00ff      	lsls	r7, r7, #3
1000e2e8:	e001      	b.n	1000e2ee <__smakebuf_r+0x52>
1000e2ea:	2500      	movs	r5, #0
1000e2ec:	2740      	movs	r7, #64	; 0x40
1000e2ee:	1c30      	adds	r0, r6, #0
1000e2f0:	1c39      	adds	r1, r7, #0
1000e2f2:	f7fe fcc9 	bl	1000cc88 <_malloc_r>
1000e2f6:	2800      	cmp	r0, #0
1000e2f8:	d10c      	bne.n	1000e314 <__smakebuf_r+0x78>
1000e2fa:	89a3      	ldrh	r3, [r4, #12]
1000e2fc:	059a      	lsls	r2, r3, #22
1000e2fe:	d41f      	bmi.n	1000e340 <__smakebuf_r+0xa4>
1000e300:	2202      	movs	r2, #2
1000e302:	4313      	orrs	r3, r2
1000e304:	81a3      	strh	r3, [r4, #12]
1000e306:	1c23      	adds	r3, r4, #0
1000e308:	3347      	adds	r3, #71	; 0x47
1000e30a:	6023      	str	r3, [r4, #0]
1000e30c:	6123      	str	r3, [r4, #16]
1000e30e:	2301      	movs	r3, #1
1000e310:	6163      	str	r3, [r4, #20]
1000e312:	e015      	b.n	1000e340 <__smakebuf_r+0xa4>
1000e314:	2280      	movs	r2, #128	; 0x80
1000e316:	4b0c      	ldr	r3, [pc, #48]	; (1000e348 <__smakebuf_r+0xac>)
1000e318:	62b3      	str	r3, [r6, #40]	; 0x28
1000e31a:	89a3      	ldrh	r3, [r4, #12]
1000e31c:	6020      	str	r0, [r4, #0]
1000e31e:	4313      	orrs	r3, r2
1000e320:	81a3      	strh	r3, [r4, #12]
1000e322:	6120      	str	r0, [r4, #16]
1000e324:	6167      	str	r7, [r4, #20]
1000e326:	2d00      	cmp	r5, #0
1000e328:	d00a      	beq.n	1000e340 <__smakebuf_r+0xa4>
1000e32a:	230e      	movs	r3, #14
1000e32c:	5ee1      	ldrsh	r1, [r4, r3]
1000e32e:	1c30      	adds	r0, r6, #0
1000e330:	f000 f83e 	bl	1000e3b0 <_isatty_r>
1000e334:	2800      	cmp	r0, #0
1000e336:	d003      	beq.n	1000e340 <__smakebuf_r+0xa4>
1000e338:	2201      	movs	r2, #1
1000e33a:	89a3      	ldrh	r3, [r4, #12]
1000e33c:	4313      	orrs	r3, r2
1000e33e:	81a3      	strh	r3, [r4, #12]
1000e340:	b011      	add	sp, #68	; 0x44
1000e342:	bdf0      	pop	{r4, r5, r6, r7, pc}
1000e344:	ffffe000 	.word	0xffffe000
1000e348:	1000c419 	.word	0x1000c419

1000e34c <memchr>:
1000e34c:	b2c9      	uxtb	r1, r1
1000e34e:	1882      	adds	r2, r0, r2
1000e350:	4290      	cmp	r0, r2
1000e352:	d004      	beq.n	1000e35e <memchr+0x12>
1000e354:	7803      	ldrb	r3, [r0, #0]
1000e356:	428b      	cmp	r3, r1
1000e358:	d002      	beq.n	1000e360 <memchr+0x14>
1000e35a:	3001      	adds	r0, #1
1000e35c:	e7f8      	b.n	1000e350 <memchr+0x4>
1000e35e:	2000      	movs	r0, #0
1000e360:	4770      	bx	lr
	...

1000e364 <_read_r>:
1000e364:	b538      	push	{r3, r4, r5, lr}
1000e366:	1c05      	adds	r5, r0, #0
1000e368:	2000      	movs	r0, #0
1000e36a:	4c07      	ldr	r4, [pc, #28]	; (1000e388 <_read_r+0x24>)
1000e36c:	6020      	str	r0, [r4, #0]
1000e36e:	1c08      	adds	r0, r1, #0
1000e370:	1c11      	adds	r1, r2, #0
1000e372:	1c1a      	adds	r2, r3, #0
1000e374:	f7fa f9e6 	bl	10008744 <_read>
1000e378:	1c43      	adds	r3, r0, #1
1000e37a:	d103      	bne.n	1000e384 <_read_r+0x20>
1000e37c:	6823      	ldr	r3, [r4, #0]
1000e37e:	2b00      	cmp	r3, #0
1000e380:	d000      	beq.n	1000e384 <_read_r+0x20>
1000e382:	602b      	str	r3, [r5, #0]
1000e384:	bd38      	pop	{r3, r4, r5, pc}
1000e386:	46c0      	nop			; (mov r8, r8)
1000e388:	1000ee78 	.word	0x1000ee78

1000e38c <_fstat_r>:
1000e38c:	b538      	push	{r3, r4, r5, lr}
1000e38e:	2300      	movs	r3, #0
1000e390:	4c06      	ldr	r4, [pc, #24]	; (1000e3ac <_fstat_r+0x20>)
1000e392:	1c05      	adds	r5, r0, #0
1000e394:	1c08      	adds	r0, r1, #0
1000e396:	1c11      	adds	r1, r2, #0
1000e398:	6023      	str	r3, [r4, #0]
1000e39a:	f7fb fa41 	bl	10009820 <_fstat>
1000e39e:	1c43      	adds	r3, r0, #1
1000e3a0:	d103      	bne.n	1000e3aa <_fstat_r+0x1e>
1000e3a2:	6823      	ldr	r3, [r4, #0]
1000e3a4:	2b00      	cmp	r3, #0
1000e3a6:	d000      	beq.n	1000e3aa <_fstat_r+0x1e>
1000e3a8:	602b      	str	r3, [r5, #0]
1000e3aa:	bd38      	pop	{r3, r4, r5, pc}
1000e3ac:	1000ee78 	.word	0x1000ee78

1000e3b0 <_isatty_r>:
1000e3b0:	b538      	push	{r3, r4, r5, lr}
1000e3b2:	2300      	movs	r3, #0
1000e3b4:	4c06      	ldr	r4, [pc, #24]	; (1000e3d0 <_isatty_r+0x20>)
1000e3b6:	1c05      	adds	r5, r0, #0
1000e3b8:	1c08      	adds	r0, r1, #0
1000e3ba:	6023      	str	r3, [r4, #0]
1000e3bc:	f7fb fa36 	bl	1000982c <_isatty>
1000e3c0:	1c43      	adds	r3, r0, #1
1000e3c2:	d103      	bne.n	1000e3cc <_isatty_r+0x1c>
1000e3c4:	6823      	ldr	r3, [r4, #0]
1000e3c6:	2b00      	cmp	r3, #0
1000e3c8:	d000      	beq.n	1000e3cc <_isatty_r+0x1c>
1000e3ca:	602b      	str	r3, [r5, #0]
1000e3cc:	bd38      	pop	{r3, r4, r5, pc}
1000e3ce:	46c0      	nop			; (mov r8, r8)
1000e3d0:	1000ee78 	.word	0x1000ee78

1000e3d4 <__gnu_thumb1_case_uqi>:
1000e3d4:	b402      	push	{r1}
1000e3d6:	4671      	mov	r1, lr
1000e3d8:	0849      	lsrs	r1, r1, #1
1000e3da:	0049      	lsls	r1, r1, #1
1000e3dc:	5c09      	ldrb	r1, [r1, r0]
1000e3de:	0049      	lsls	r1, r1, #1
1000e3e0:	448e      	add	lr, r1
1000e3e2:	bc02      	pop	{r1}
1000e3e4:	4770      	bx	lr
1000e3e6:	46c0      	nop			; (mov r8, r8)

1000e3e8 <__aeabi_idiv>:
1000e3e8:	4603      	mov	r3, r0
1000e3ea:	430b      	orrs	r3, r1
1000e3ec:	d47f      	bmi.n	1000e4ee <__aeabi_idiv+0x106>
1000e3ee:	2200      	movs	r2, #0
1000e3f0:	0843      	lsrs	r3, r0, #1
1000e3f2:	428b      	cmp	r3, r1
1000e3f4:	d374      	bcc.n	1000e4e0 <__aeabi_idiv+0xf8>
1000e3f6:	0903      	lsrs	r3, r0, #4
1000e3f8:	428b      	cmp	r3, r1
1000e3fa:	d35f      	bcc.n	1000e4bc <__aeabi_idiv+0xd4>
1000e3fc:	0a03      	lsrs	r3, r0, #8
1000e3fe:	428b      	cmp	r3, r1
1000e400:	d344      	bcc.n	1000e48c <__aeabi_idiv+0xa4>
1000e402:	0b03      	lsrs	r3, r0, #12
1000e404:	428b      	cmp	r3, r1
1000e406:	d328      	bcc.n	1000e45a <__aeabi_idiv+0x72>
1000e408:	0c03      	lsrs	r3, r0, #16
1000e40a:	428b      	cmp	r3, r1
1000e40c:	d30d      	bcc.n	1000e42a <__aeabi_idiv+0x42>
1000e40e:	22ff      	movs	r2, #255	; 0xff
1000e410:	0209      	lsls	r1, r1, #8
1000e412:	ba12      	rev	r2, r2
1000e414:	0c03      	lsrs	r3, r0, #16
1000e416:	428b      	cmp	r3, r1
1000e418:	d302      	bcc.n	1000e420 <__aeabi_idiv+0x38>
1000e41a:	1212      	asrs	r2, r2, #8
1000e41c:	0209      	lsls	r1, r1, #8
1000e41e:	d065      	beq.n	1000e4ec <__aeabi_idiv+0x104>
1000e420:	0b03      	lsrs	r3, r0, #12
1000e422:	428b      	cmp	r3, r1
1000e424:	d319      	bcc.n	1000e45a <__aeabi_idiv+0x72>
1000e426:	e000      	b.n	1000e42a <__aeabi_idiv+0x42>
1000e428:	0a09      	lsrs	r1, r1, #8
1000e42a:	0bc3      	lsrs	r3, r0, #15
1000e42c:	428b      	cmp	r3, r1
1000e42e:	d301      	bcc.n	1000e434 <__aeabi_idiv+0x4c>
1000e430:	03cb      	lsls	r3, r1, #15
1000e432:	1ac0      	subs	r0, r0, r3
1000e434:	4152      	adcs	r2, r2
1000e436:	0b83      	lsrs	r3, r0, #14
1000e438:	428b      	cmp	r3, r1
1000e43a:	d301      	bcc.n	1000e440 <__aeabi_idiv+0x58>
1000e43c:	038b      	lsls	r3, r1, #14
1000e43e:	1ac0      	subs	r0, r0, r3
1000e440:	4152      	adcs	r2, r2
1000e442:	0b43      	lsrs	r3, r0, #13
1000e444:	428b      	cmp	r3, r1
1000e446:	d301      	bcc.n	1000e44c <__aeabi_idiv+0x64>
1000e448:	034b      	lsls	r3, r1, #13
1000e44a:	1ac0      	subs	r0, r0, r3
1000e44c:	4152      	adcs	r2, r2
1000e44e:	0b03      	lsrs	r3, r0, #12
1000e450:	428b      	cmp	r3, r1
1000e452:	d301      	bcc.n	1000e458 <__aeabi_idiv+0x70>
1000e454:	030b      	lsls	r3, r1, #12
1000e456:	1ac0      	subs	r0, r0, r3
1000e458:	4152      	adcs	r2, r2
1000e45a:	0ac3      	lsrs	r3, r0, #11
1000e45c:	428b      	cmp	r3, r1
1000e45e:	d301      	bcc.n	1000e464 <__aeabi_idiv+0x7c>
1000e460:	02cb      	lsls	r3, r1, #11
1000e462:	1ac0      	subs	r0, r0, r3
1000e464:	4152      	adcs	r2, r2
1000e466:	0a83      	lsrs	r3, r0, #10
1000e468:	428b      	cmp	r3, r1
1000e46a:	d301      	bcc.n	1000e470 <__aeabi_idiv+0x88>
1000e46c:	028b      	lsls	r3, r1, #10
1000e46e:	1ac0      	subs	r0, r0, r3
1000e470:	4152      	adcs	r2, r2
1000e472:	0a43      	lsrs	r3, r0, #9
1000e474:	428b      	cmp	r3, r1
1000e476:	d301      	bcc.n	1000e47c <__aeabi_idiv+0x94>
1000e478:	024b      	lsls	r3, r1, #9
1000e47a:	1ac0      	subs	r0, r0, r3
1000e47c:	4152      	adcs	r2, r2
1000e47e:	0a03      	lsrs	r3, r0, #8
1000e480:	428b      	cmp	r3, r1
1000e482:	d301      	bcc.n	1000e488 <__aeabi_idiv+0xa0>
1000e484:	020b      	lsls	r3, r1, #8
1000e486:	1ac0      	subs	r0, r0, r3
1000e488:	4152      	adcs	r2, r2
1000e48a:	d2cd      	bcs.n	1000e428 <__aeabi_idiv+0x40>
1000e48c:	09c3      	lsrs	r3, r0, #7
1000e48e:	428b      	cmp	r3, r1
1000e490:	d301      	bcc.n	1000e496 <__aeabi_idiv+0xae>
1000e492:	01cb      	lsls	r3, r1, #7
1000e494:	1ac0      	subs	r0, r0, r3
1000e496:	4152      	adcs	r2, r2
1000e498:	0983      	lsrs	r3, r0, #6
1000e49a:	428b      	cmp	r3, r1
1000e49c:	d301      	bcc.n	1000e4a2 <__aeabi_idiv+0xba>
1000e49e:	018b      	lsls	r3, r1, #6
1000e4a0:	1ac0      	subs	r0, r0, r3
1000e4a2:	4152      	adcs	r2, r2
1000e4a4:	0943      	lsrs	r3, r0, #5
1000e4a6:	428b      	cmp	r3, r1
1000e4a8:	d301      	bcc.n	1000e4ae <__aeabi_idiv+0xc6>
1000e4aa:	014b      	lsls	r3, r1, #5
1000e4ac:	1ac0      	subs	r0, r0, r3
1000e4ae:	4152      	adcs	r2, r2
1000e4b0:	0903      	lsrs	r3, r0, #4
1000e4b2:	428b      	cmp	r3, r1
1000e4b4:	d301      	bcc.n	1000e4ba <__aeabi_idiv+0xd2>
1000e4b6:	010b      	lsls	r3, r1, #4
1000e4b8:	1ac0      	subs	r0, r0, r3
1000e4ba:	4152      	adcs	r2, r2
1000e4bc:	08c3      	lsrs	r3, r0, #3
1000e4be:	428b      	cmp	r3, r1
1000e4c0:	d301      	bcc.n	1000e4c6 <__aeabi_idiv+0xde>
1000e4c2:	00cb      	lsls	r3, r1, #3
1000e4c4:	1ac0      	subs	r0, r0, r3
1000e4c6:	4152      	adcs	r2, r2
1000e4c8:	0883      	lsrs	r3, r0, #2
1000e4ca:	428b      	cmp	r3, r1
1000e4cc:	d301      	bcc.n	1000e4d2 <__aeabi_idiv+0xea>
1000e4ce:	008b      	lsls	r3, r1, #2
1000e4d0:	1ac0      	subs	r0, r0, r3
1000e4d2:	4152      	adcs	r2, r2
1000e4d4:	0843      	lsrs	r3, r0, #1
1000e4d6:	428b      	cmp	r3, r1
1000e4d8:	d301      	bcc.n	1000e4de <__aeabi_idiv+0xf6>
1000e4da:	004b      	lsls	r3, r1, #1
1000e4dc:	1ac0      	subs	r0, r0, r3
1000e4de:	4152      	adcs	r2, r2
1000e4e0:	1a41      	subs	r1, r0, r1
1000e4e2:	d200      	bcs.n	1000e4e6 <__aeabi_idiv+0xfe>
1000e4e4:	4601      	mov	r1, r0
1000e4e6:	4152      	adcs	r2, r2
1000e4e8:	4610      	mov	r0, r2
1000e4ea:	4770      	bx	lr
1000e4ec:	e05d      	b.n	1000e5aa <__aeabi_idiv+0x1c2>
1000e4ee:	0fca      	lsrs	r2, r1, #31
1000e4f0:	d000      	beq.n	1000e4f4 <__aeabi_idiv+0x10c>
1000e4f2:	4249      	negs	r1, r1
1000e4f4:	1003      	asrs	r3, r0, #32
1000e4f6:	d300      	bcc.n	1000e4fa <__aeabi_idiv+0x112>
1000e4f8:	4240      	negs	r0, r0
1000e4fa:	4053      	eors	r3, r2
1000e4fc:	2200      	movs	r2, #0
1000e4fe:	469c      	mov	ip, r3
1000e500:	0903      	lsrs	r3, r0, #4
1000e502:	428b      	cmp	r3, r1
1000e504:	d32d      	bcc.n	1000e562 <__aeabi_idiv+0x17a>
1000e506:	0a03      	lsrs	r3, r0, #8
1000e508:	428b      	cmp	r3, r1
1000e50a:	d312      	bcc.n	1000e532 <__aeabi_idiv+0x14a>
1000e50c:	22fc      	movs	r2, #252	; 0xfc
1000e50e:	0189      	lsls	r1, r1, #6
1000e510:	ba12      	rev	r2, r2
1000e512:	0a03      	lsrs	r3, r0, #8
1000e514:	428b      	cmp	r3, r1
1000e516:	d30c      	bcc.n	1000e532 <__aeabi_idiv+0x14a>
1000e518:	0189      	lsls	r1, r1, #6
1000e51a:	1192      	asrs	r2, r2, #6
1000e51c:	428b      	cmp	r3, r1
1000e51e:	d308      	bcc.n	1000e532 <__aeabi_idiv+0x14a>
1000e520:	0189      	lsls	r1, r1, #6
1000e522:	1192      	asrs	r2, r2, #6
1000e524:	428b      	cmp	r3, r1
1000e526:	d304      	bcc.n	1000e532 <__aeabi_idiv+0x14a>
1000e528:	0189      	lsls	r1, r1, #6
1000e52a:	d03a      	beq.n	1000e5a2 <__aeabi_idiv+0x1ba>
1000e52c:	1192      	asrs	r2, r2, #6
1000e52e:	e000      	b.n	1000e532 <__aeabi_idiv+0x14a>
1000e530:	0989      	lsrs	r1, r1, #6
1000e532:	09c3      	lsrs	r3, r0, #7
1000e534:	428b      	cmp	r3, r1
1000e536:	d301      	bcc.n	1000e53c <__aeabi_idiv+0x154>
1000e538:	01cb      	lsls	r3, r1, #7
1000e53a:	1ac0      	subs	r0, r0, r3
1000e53c:	4152      	adcs	r2, r2
1000e53e:	0983      	lsrs	r3, r0, #6
1000e540:	428b      	cmp	r3, r1
1000e542:	d301      	bcc.n	1000e548 <__aeabi_idiv+0x160>
1000e544:	018b      	lsls	r3, r1, #6
1000e546:	1ac0      	subs	r0, r0, r3
1000e548:	4152      	adcs	r2, r2
1000e54a:	0943      	lsrs	r3, r0, #5
1000e54c:	428b      	cmp	r3, r1
1000e54e:	d301      	bcc.n	1000e554 <__aeabi_idiv+0x16c>
1000e550:	014b      	lsls	r3, r1, #5
1000e552:	1ac0      	subs	r0, r0, r3
1000e554:	4152      	adcs	r2, r2
1000e556:	0903      	lsrs	r3, r0, #4
1000e558:	428b      	cmp	r3, r1
1000e55a:	d301      	bcc.n	1000e560 <__aeabi_idiv+0x178>
1000e55c:	010b      	lsls	r3, r1, #4
1000e55e:	1ac0      	subs	r0, r0, r3
1000e560:	4152      	adcs	r2, r2
1000e562:	08c3      	lsrs	r3, r0, #3
1000e564:	428b      	cmp	r3, r1
1000e566:	d301      	bcc.n	1000e56c <__aeabi_idiv+0x184>
1000e568:	00cb      	lsls	r3, r1, #3
1000e56a:	1ac0      	subs	r0, r0, r3
1000e56c:	4152      	adcs	r2, r2
1000e56e:	0883      	lsrs	r3, r0, #2
1000e570:	428b      	cmp	r3, r1
1000e572:	d301      	bcc.n	1000e578 <__aeabi_idiv+0x190>
1000e574:	008b      	lsls	r3, r1, #2
1000e576:	1ac0      	subs	r0, r0, r3
1000e578:	4152      	adcs	r2, r2
1000e57a:	d2d9      	bcs.n	1000e530 <__aeabi_idiv+0x148>
1000e57c:	0843      	lsrs	r3, r0, #1
1000e57e:	428b      	cmp	r3, r1
1000e580:	d301      	bcc.n	1000e586 <__aeabi_idiv+0x19e>
1000e582:	004b      	lsls	r3, r1, #1
1000e584:	1ac0      	subs	r0, r0, r3
1000e586:	4152      	adcs	r2, r2
1000e588:	1a41      	subs	r1, r0, r1
1000e58a:	d200      	bcs.n	1000e58e <__aeabi_idiv+0x1a6>
1000e58c:	4601      	mov	r1, r0
1000e58e:	4663      	mov	r3, ip
1000e590:	4152      	adcs	r2, r2
1000e592:	105b      	asrs	r3, r3, #1
1000e594:	4610      	mov	r0, r2
1000e596:	d301      	bcc.n	1000e59c <__aeabi_idiv+0x1b4>
1000e598:	4240      	negs	r0, r0
1000e59a:	2b00      	cmp	r3, #0
1000e59c:	d500      	bpl.n	1000e5a0 <__aeabi_idiv+0x1b8>
1000e59e:	4249      	negs	r1, r1
1000e5a0:	4770      	bx	lr
1000e5a2:	4663      	mov	r3, ip
1000e5a4:	105b      	asrs	r3, r3, #1
1000e5a6:	d300      	bcc.n	1000e5aa <__aeabi_idiv+0x1c2>
1000e5a8:	4240      	negs	r0, r0
1000e5aa:	b501      	push	{r0, lr}
1000e5ac:	2000      	movs	r0, #0
1000e5ae:	f7fb fc01 	bl	10009db4 <__aeabi_idiv0>
1000e5b2:	bd02      	pop	{r1, pc}

1000e5b4 <__aeabi_idivmod>:
1000e5b4:	2900      	cmp	r1, #0
1000e5b6:	d0f8      	beq.n	1000e5aa <__aeabi_idiv+0x1c2>
1000e5b8:	b503      	push	{r0, r1, lr}
1000e5ba:	f7ff ff15 	bl	1000e3e8 <__aeabi_idiv>
1000e5be:	bc0e      	pop	{r1, r2, r3}
1000e5c0:	4342      	muls	r2, r0
1000e5c2:	1a89      	subs	r1, r1, r2
1000e5c4:	4718      	bx	r3
1000e5c6:	46c0      	nop			; (mov r8, r8)

1000e5c8 <__aeabi_d2iz>:
1000e5c8:	030b      	lsls	r3, r1, #12
1000e5ca:	b530      	push	{r4, r5, lr}
1000e5cc:	4c13      	ldr	r4, [pc, #76]	; (1000e61c <__aeabi_d2iz+0x54>)
1000e5ce:	0b1a      	lsrs	r2, r3, #12
1000e5d0:	004b      	lsls	r3, r1, #1
1000e5d2:	1c05      	adds	r5, r0, #0
1000e5d4:	0d5b      	lsrs	r3, r3, #21
1000e5d6:	0fc9      	lsrs	r1, r1, #31
1000e5d8:	2000      	movs	r0, #0
1000e5da:	42a3      	cmp	r3, r4
1000e5dc:	dd10      	ble.n	1000e600 <__aeabi_d2iz+0x38>
1000e5de:	4810      	ldr	r0, [pc, #64]	; (1000e620 <__aeabi_d2iz+0x58>)
1000e5e0:	4283      	cmp	r3, r0
1000e5e2:	dc0e      	bgt.n	1000e602 <__aeabi_d2iz+0x3a>
1000e5e4:	2080      	movs	r0, #128	; 0x80
1000e5e6:	4c0f      	ldr	r4, [pc, #60]	; (1000e624 <__aeabi_d2iz+0x5c>)
1000e5e8:	0340      	lsls	r0, r0, #13
1000e5ea:	4302      	orrs	r2, r0
1000e5ec:	1ae4      	subs	r4, r4, r3
1000e5ee:	2c1f      	cmp	r4, #31
1000e5f0:	dd0a      	ble.n	1000e608 <__aeabi_d2iz+0x40>
1000e5f2:	480d      	ldr	r0, [pc, #52]	; (1000e628 <__aeabi_d2iz+0x60>)
1000e5f4:	1ac3      	subs	r3, r0, r3
1000e5f6:	40da      	lsrs	r2, r3
1000e5f8:	1c13      	adds	r3, r2, #0
1000e5fa:	4248      	negs	r0, r1
1000e5fc:	4043      	eors	r3, r0
1000e5fe:	1858      	adds	r0, r3, r1
1000e600:	bd30      	pop	{r4, r5, pc}
1000e602:	4b0a      	ldr	r3, [pc, #40]	; (1000e62c <__aeabi_d2iz+0x64>)
1000e604:	18c8      	adds	r0, r1, r3
1000e606:	e7fb      	b.n	1000e600 <__aeabi_d2iz+0x38>
1000e608:	1c28      	adds	r0, r5, #0
1000e60a:	40e0      	lsrs	r0, r4
1000e60c:	4c08      	ldr	r4, [pc, #32]	; (1000e630 <__aeabi_d2iz+0x68>)
1000e60e:	46a4      	mov	ip, r4
1000e610:	4463      	add	r3, ip
1000e612:	409a      	lsls	r2, r3
1000e614:	1c13      	adds	r3, r2, #0
1000e616:	4303      	orrs	r3, r0
1000e618:	e7ef      	b.n	1000e5fa <__aeabi_d2iz+0x32>
1000e61a:	46c0      	nop			; (mov r8, r8)
1000e61c:	000003fe 	.word	0x000003fe
1000e620:	0000041d 	.word	0x0000041d
1000e624:	00000433 	.word	0x00000433
1000e628:	00000413 	.word	0x00000413
1000e62c:	7fffffff 	.word	0x7fffffff
1000e630:	fffffbed 	.word	0xfffffbed

1000e634 <__aeabi_i2d>:
1000e634:	b538      	push	{r3, r4, r5, lr}
1000e636:	1e04      	subs	r4, r0, #0
1000e638:	d016      	beq.n	1000e668 <__aeabi_i2d+0x34>
1000e63a:	0fc5      	lsrs	r5, r0, #31
1000e63c:	d000      	beq.n	1000e640 <__aeabi_i2d+0xc>
1000e63e:	4244      	negs	r4, r0
1000e640:	1c20      	adds	r0, r4, #0
1000e642:	f7fd fbcf 	bl	1000bde4 <__clzsi2>
1000e646:	4b17      	ldr	r3, [pc, #92]	; (1000e6a4 <__aeabi_i2d+0x70>)
1000e648:	1a1b      	subs	r3, r3, r0
1000e64a:	280a      	cmp	r0, #10
1000e64c:	dc21      	bgt.n	1000e692 <__aeabi_i2d+0x5e>
1000e64e:	1c02      	adds	r2, r0, #0
1000e650:	1c21      	adds	r1, r4, #0
1000e652:	3215      	adds	r2, #21
1000e654:	4091      	lsls	r1, r2
1000e656:	1c0a      	adds	r2, r1, #0
1000e658:	210b      	movs	r1, #11
1000e65a:	1a08      	subs	r0, r1, r0
1000e65c:	40c4      	lsrs	r4, r0
1000e65e:	055b      	lsls	r3, r3, #21
1000e660:	0324      	lsls	r4, r4, #12
1000e662:	0b24      	lsrs	r4, r4, #12
1000e664:	0d5b      	lsrs	r3, r3, #21
1000e666:	e003      	b.n	1000e670 <__aeabi_i2d+0x3c>
1000e668:	2500      	movs	r5, #0
1000e66a:	2300      	movs	r3, #0
1000e66c:	2400      	movs	r4, #0
1000e66e:	2200      	movs	r2, #0
1000e670:	2100      	movs	r1, #0
1000e672:	1c10      	adds	r0, r2, #0
1000e674:	0324      	lsls	r4, r4, #12
1000e676:	0d0a      	lsrs	r2, r1, #20
1000e678:	0512      	lsls	r2, r2, #20
1000e67a:	0b24      	lsrs	r4, r4, #12
1000e67c:	4314      	orrs	r4, r2
1000e67e:	4a0a      	ldr	r2, [pc, #40]	; (1000e6a8 <__aeabi_i2d+0x74>)
1000e680:	051b      	lsls	r3, r3, #20
1000e682:	4014      	ands	r4, r2
1000e684:	431c      	orrs	r4, r3
1000e686:	0064      	lsls	r4, r4, #1
1000e688:	07ed      	lsls	r5, r5, #31
1000e68a:	0864      	lsrs	r4, r4, #1
1000e68c:	432c      	orrs	r4, r5
1000e68e:	1c21      	adds	r1, r4, #0
1000e690:	bd38      	pop	{r3, r4, r5, pc}
1000e692:	380b      	subs	r0, #11
1000e694:	4084      	lsls	r4, r0
1000e696:	055b      	lsls	r3, r3, #21
1000e698:	0324      	lsls	r4, r4, #12
1000e69a:	0b24      	lsrs	r4, r4, #12
1000e69c:	0d5b      	lsrs	r3, r3, #21
1000e69e:	2200      	movs	r2, #0
1000e6a0:	e7e6      	b.n	1000e670 <__aeabi_i2d+0x3c>
1000e6a2:	46c0      	nop			; (mov r8, r8)
1000e6a4:	0000041e 	.word	0x0000041e
1000e6a8:	800fffff 	.word	0x800fffff

1000e6ac <__aeabi_ui2d>:
1000e6ac:	b510      	push	{r4, lr}
1000e6ae:	1e04      	subs	r4, r0, #0
1000e6b0:	d010      	beq.n	1000e6d4 <__aeabi_ui2d+0x28>
1000e6b2:	f7fd fb97 	bl	1000bde4 <__clzsi2>
1000e6b6:	4a14      	ldr	r2, [pc, #80]	; (1000e708 <__aeabi_ui2d+0x5c>)
1000e6b8:	1a12      	subs	r2, r2, r0
1000e6ba:	280a      	cmp	r0, #10
1000e6bc:	dc1a      	bgt.n	1000e6f4 <__aeabi_ui2d+0x48>
1000e6be:	230b      	movs	r3, #11
1000e6c0:	1c21      	adds	r1, r4, #0
1000e6c2:	1a1b      	subs	r3, r3, r0
1000e6c4:	40d9      	lsrs	r1, r3
1000e6c6:	3015      	adds	r0, #21
1000e6c8:	030b      	lsls	r3, r1, #12
1000e6ca:	0552      	lsls	r2, r2, #21
1000e6cc:	4084      	lsls	r4, r0
1000e6ce:	0b1b      	lsrs	r3, r3, #12
1000e6d0:	0d52      	lsrs	r2, r2, #21
1000e6d2:	e001      	b.n	1000e6d8 <__aeabi_ui2d+0x2c>
1000e6d4:	2200      	movs	r2, #0
1000e6d6:	2300      	movs	r3, #0
1000e6d8:	2100      	movs	r1, #0
1000e6da:	031b      	lsls	r3, r3, #12
1000e6dc:	1c20      	adds	r0, r4, #0
1000e6de:	0b1c      	lsrs	r4, r3, #12
1000e6e0:	0d0b      	lsrs	r3, r1, #20
1000e6e2:	051b      	lsls	r3, r3, #20
1000e6e4:	4323      	orrs	r3, r4
1000e6e6:	4c09      	ldr	r4, [pc, #36]	; (1000e70c <__aeabi_ui2d+0x60>)
1000e6e8:	0512      	lsls	r2, r2, #20
1000e6ea:	4023      	ands	r3, r4
1000e6ec:	4313      	orrs	r3, r2
1000e6ee:	005b      	lsls	r3, r3, #1
1000e6f0:	0859      	lsrs	r1, r3, #1
1000e6f2:	bd10      	pop	{r4, pc}
1000e6f4:	1c03      	adds	r3, r0, #0
1000e6f6:	3b0b      	subs	r3, #11
1000e6f8:	409c      	lsls	r4, r3
1000e6fa:	0552      	lsls	r2, r2, #21
1000e6fc:	0323      	lsls	r3, r4, #12
1000e6fe:	0b1b      	lsrs	r3, r3, #12
1000e700:	0d52      	lsrs	r2, r2, #21
1000e702:	2400      	movs	r4, #0
1000e704:	e7e8      	b.n	1000e6d8 <__aeabi_ui2d+0x2c>
1000e706:	46c0      	nop			; (mov r8, r8)
1000e708:	0000041e 	.word	0x0000041e
1000e70c:	800fffff 	.word	0x800fffff

1000e710 <Configuration>:
1000e710:	0a566455 01320f57 025400a0 01340733     UdV.W.2...T.3.4.
1000e720:	10008bfc 10008c0a 10008c18 10008c26     ............&...
1000e730:	10008c34 10008c42 10008c50 10008c60     4...B...P...`...
1000e740:	10008c70 10008c80 10008c90 10008ca0     p...............
1000e750:	10008cb0 10008cc0 10008cd0 10008ce0     ................
1000e760:	10008cf0 10008d00 10008d10 10008d20     ............ ...
1000e770:	10008d30 10008d40 10008d50 10008d60     0...@...P...`...
1000e780:	10008d70 10008d80 10008d90 10008da0     p...............
1000e790:	10008dae 10008dbc 10008dca 10008dd8     ................
1000e7a0:	10008de6 10008df4 10008e02 10008e10     ................
1000e7b0:	10008e20 10008e30 10008e40 10008e50      ...0...@...P...
1000e7c0:	10008e60 10008e70 10008e80 10008e90     `...p...........
1000e7d0:	10008ea0 10008eb0 10008ec0 10008ed0     ................
1000e7e0:	10008ee0 10008ef0 10008f00 10008f10     ................
1000e7f0:	10008f1e 10008f2c 10008f6c 10008f94     ....,...l.......
1000e800:	10008fbc 10008fe4 10009224 10009014     ........$.......
1000e810:	1000902c 100090a4 100090bc 10009044     ,...........D...
1000e820:	1000905c 10009074 1000908c 100090d4     \...t...........
1000e830:	10009398 10009398 10009398 10009398     ................
1000e840:	10009398 10009398 10009398 10009398     ................
1000e850:	1000917c 10009194 100091ac 1000923a     |...........:...
1000e860:	10009104 10009398 10009398 10009398     ................
1000e870:	10009398 10009398 10009398 100091c4     ................
1000e880:	100091dc 100091f4 1000920c 10009398     ................
1000e890:	10009350 10009368 10009398 10009398     P...h...........
1000e8a0:	10009266 1000927c 10009292 100092a8     f...|...........
1000e8b0:	10009398 10009398 10009398 10009398     ................
1000e8c0:	10009398 10009398 10009398 10009398     ................
1000e8d0:	10008f58 10008f80 10008fa8 10008fd0     X...............
1000e8e0:	10008ffc 100090ec 1000911c 10009134     ............4...
1000e8f0:	1000914c 10009164 10009250 100092be     L...d...P.......
1000e900:	10009338 10009380 646e6148 0a72656c     8.......Handler.
1000e910:	0000000d 003a7325 0d0a7325 00000000     ....%s:.%s......
1000e920:	10009f6e 10009f66 10009f66 10009f5e     n...f...f...^...
1000e930:	10009eb0 10009eb0 10009f54 10009f5e     ........T...^...
1000e940:	10009eb0 10009f54 10009eb0 10009f5e     ....T.......^...
1000e950:	10009eb2 10009eb2 10009eb2 10009ff8     ................
1000e960:	1000a94c 1000a83a 1000a920 1000a826     L...:... ...&...
1000e970:	1000a920 1000a92a 1000a920 1000a826      ...*... ...&...
1000e980:	1000a83a 1000a83a 1000a92a 1000a826     :...:...*...&...
1000e990:	1000a830 1000a830 1000a830 1000ab92     0...0...0.......
1000e9a0:	1000b1e0 1000b1be 1000b1be 1000b1b2     ................
1000e9b0:	1000b0a6 1000b0a6 1000b1a6 1000b1b2     ................
1000e9c0:	1000b0a6 1000b1a6 1000b0a6 1000b1b2     ................
1000e9d0:	1000b0aa 1000b0aa 1000b0aa 1000b3c0     ................
1000e9e0:	00000043                                C...

1000e9e4 <_global_impure_ptr>:
1000e9e4:	1000eba8                                ....

1000e9e8 <__sf_fake_stdin>:
	...

1000ea08 <__sf_fake_stdout>:
	...

1000ea28 <__sf_fake_stderr>:
	...

1000ea48 <__mprec_tens>:
1000ea48:	00000000 3ff00000 00000000 40240000     .......?......$@
1000ea58:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1000ea68:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1000ea78:	00000000 412e8480 00000000 416312d0     .......A......cA
1000ea88:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1000ea98:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1000eaa8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1000eab8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1000eac8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1000ead8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1000eae8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1000eaf8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1000eb08:	79d99db4 44ea7843                       ...yCx.D

1000eb10 <__mprec_bigtens>:
1000eb10:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1000eb20:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1000eb30:	7f73bf3c 75154fdd                       <.s..O.u

1000eb38 <p05.5314>:
1000eb38:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
1000eb48:	6c680020 6665004c 47464567 32313000      .hlL.efgEFG.012
1000eb58:	36353433 41393837 45444342 31300046     3456789ABCDEF.01
1000eb68:	35343332 39383736 64636261 49006665     23456789abcdef.I
1000eb78:	6e69666e 00797469 004e614e 00000030     nfinity.NaN.0...

1000eb88 <_init>:
1000eb88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000eb8a:	46c0      	nop			; (mov r8, r8)
1000eb8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000eb8e:	bc08      	pop	{r3}
1000eb90:	469e      	mov	lr, r3
1000eb92:	4770      	bx	lr

1000eb94 <__init_array_start>:
1000eb94:	100080b1 	.word	0x100080b1

1000eb98 <_fini>:
1000eb98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000eb9a:	46c0      	nop			; (mov r8, r8)
1000eb9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1000eb9e:	bc08      	pop	{r3}
1000eba0:	469e      	mov	lr, r3
1000eba2:	4770      	bx	lr

1000eba4 <__fini_array_start>:
1000eba4:	10008089 	.word	0x10008089
